var w=t=>Object.prototype.toString.call(t).slice(8,-1),d=t=>typeof t=="string"||t instanceof String;var C=[7,8,9,10,11,12,13,27,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255];var D=["aaa","aaas","about","acap","acct","acd","acr","adiumxtra","adt","afp","afs","aim","amss","android","appdata","apt","ar","ark","attachment","aw","barion","beshare","bitcoin","bitcoincash","blob","bolo","browserext","cabal","calculator","callto","cap","cast","casts","chrome","chrome-extension","cid","coap","coaps","com-eventbrite-attendee","content","content-type","crid","cstr","cvs","dab","dat","data","dav","diaspora","dict","did","dis","dlna-playcontainer","dlna-playsingle","dns","dntp","doi","dpp","drm","dtmi","dtn","dvb","dvx","dweb","ed2k","eid","elsi","embedded","ens","ethereum","example","facetime","feed","feedready","fido","file","finger","first-run-pen-experience","fish","fm","ftp","fuchsia-pkg","geo","gg","git","gitoid","gizmoproject","go","gopher","graph","gtalk","h323","ham","hcap","hcp","http","https","hxxp","hxxps","hydrazone","hyper","iax","icap","icon","im","imap","info","iotdisco","ipfs","ipn","ipns","ipp","ipps","irc","irc6","ircs","iris","iris.beep","iris.lwz","iris.xpc","iris.xpcs","isostore","itms","jabber","jar","jms","keyparc","lastfm","lbry","ldap","ldaps","leaptofrogans","lorawan","lpa","lvlt","magnet","mailto","maps","market","matrix","message","microsoft.windows.camera","microsoft.windows.camera.multipicker","microsoft.windows.camera.picker","mid","mms","mongodb","moz","moz-extension","ms-access","ms-appinstaller","ms-browser-extension","ms-calculator","ms-drive-to","ms-enrollment","ms-excel","ms-eyecontrolspeech","ms-gamebarservices","ms-gamingoverlay","ms-getoffice","ms-help","ms-infopath","ms-inputapp","ms-lockscreencomponent-config","ms-media-stream-id","ms-meetnow","ms-mixedrealitycapture","ms-mobileplans","ms-newsandinterests","ms-officeapp","ms-people","ms-powerpoint","ms-project","ms-publisher","ms-remotedesktop-launch","ms-restoretabcompanion","ms-screenclip","ms-screensketch","ms-search","ms-search-repair","ms-secondary-screen-controller","ms-secondary-screen-setup","ms-settings","ms-settings-airplanemode","ms-settings-bluetooth","ms-settings-camera","ms-settings-cellular","ms-settings-cloudstorage","ms-settings-connectabledevices","ms-settings-displays-topology","ms-settings-emailandaccounts","ms-settings-language","ms-settings-location","ms-settings-lock","ms-settings-nfctransactions","ms-settings-notifications","ms-settings-power","ms-settings-privacy","ms-settings-proximity","ms-settings-screenrotation","ms-settings-wifi","ms-settings-workplace","ms-spd","ms-stickers","ms-sttoverlay","ms-transit-to","ms-useractivityset","ms-virtualtouchpad","ms-visio","ms-walk-to","ms-whiteboard","ms-whiteboard-cmd","ms-word","msnim","msrp","msrps","mss","mt","mtqp","mumble","mupdate","mvn","news","nfs","ni","nih","nntp","notes","num","ocf","oid","onenote","onenote-cmd","opaquelocktoken","openpgp4fpr","otpauth","palm","paparazzi","payment","payto","pkcs11","platform","pop","pres","proxy","psyc","pttp","pwid","qb","query","quic-transport","redis","rediss","reload","res","resource","rmi","rsync","rtmfp","rtmp","rtsp","rtsps","rtspu","sarif","secondlife","secret-token","service","session","sftp","sgn","shc","sieve","simpleledger","simplex","sip","sips","skype","smb","smp","sms","smtp","snmp","soap.beep","soap.beeps","soldat","spiffe","spotify","ssb","ssh","starknet","steam","stun","stuns","submit","svn","swh","swid","swidpath","tag","taler","teamspeak","tel","teliaeid","telnet","tftp","things","thismessage","tip","tn3270","tool","turn","turns","tv","udp","unreal","urn","ut2004","uuid-in-package","v-event","vemmi","ventrilo","ves","view-source","vnc","vscode","vscode-insiders","vsls","w3","wcr","web3","webcal","wifi","ws","wss","wtai","wyciwyg","xcon","xcon-userid","xfire","xmlrpc.beep","xmlrpc.beeps","xmpp","xri","ymsgr","z39.50r","z39.50s"];var x=16,K=/^[\da-z+/\-_=]+$/i,Q=/data:[^,]*,[^"]+/g,O=/data:[^,]*;?base64,[\da-z+/\-_=]+/i,V=/[<>"'\s]/g,W=/%(?:2(?:2|7)|3(?:C|E))/g,Z=/&#(x(?:00)?[\dA-F]{2}|0?\d{1,3});?/ig,ee=/^[a-z][\da-z+\-.]*$/,te=/^(?:ext|web)\+[a-z]+$/,U=/(?:java|vb)script/,se=/^%[\dA-F]{2}$/i,re=/%26/g,A=t=>{if(!d(t))throw new TypeError(`Expected String but got ${w(t)}.`);let e=[];for(let s of t)e.push(`%${s.charCodeAt(0).toString(x).toUpperCase()}`);return e.join("")},G=t=>{if(d(t))if(se.test(t))t=t.toUpperCase();else throw new Error(`Invalid URL encoded character: ${t}`);else throw new TypeError(`Expected String but got ${w(t)}.`);let[e,s,r,i,o,l]=["&","#","<",">",'"',"'"].map(A),n;return t===e?n=`${e}amp;`:t===r?n=`${e}lt;`:t===i?n=`${e}gt;`:t===o?n=`${e}quot;`:t===l?n=`${e}${s}39;`:n=t,n},ae=t=>{if(d(t)){if(!K.test(t))throw new Error(`Invalid base64 data: ${t}`)}else throw new TypeError(`Expected String but got ${w(t)}.`);let e=atob(t),s=Uint8Array.from([...e].map(o=>o.charCodeAt(0))),r=new Set(C),i;return s.every(o=>r.has(o))?i=e.replace(/\s/g,A):i=t,i},N=(t,e=0)=>{if(!d(t))throw new TypeError(`Expected String but got ${w(t)}.`);if(Number.isInteger(e)){if(e>x)throw new Error("Character references nested too deeply.")}else throw new TypeError(`Expected Number but got ${w(e)}.`);let s=decodeURIComponent(t);if(/&#/.test(s)){let r=new Set(C),i=[...s.matchAll(Z)].reverse();for(let o of i){let[l,n]=o,c;if(/^x[\dA-F]+/i.test(n)?c=parseInt(`0${n}`,x):/^[\d]+/.test(n)&&(c=parseInt(n)),Number.isInteger(c)){let{index:f}=o,[y,b]=[s.substring(0,f),s.substring(f+l.length)];r.has(c)?(s=`${y}${String.fromCharCode(c)}${b}`,(/#x?$/.test(y)||/^#(?:x(?:00)?[2-7]|\d)/.test(b))&&(s=N(s,++e))):c<x*x&&(s=`${y}${b}`)}}}return s},T=class{#e;constructor(){this.#e=new Set(D)}get(){return[...this.#e]}has(e){return this.#e.has(e)}add(e){if(d(e)){if(U.test(e)||!ee.test(e))throw new Error(`Invalid scheme: ${e}`)}else throw new TypeError(`Expected String but got ${w(e)}.`);return this.#e.add(e),[...this.#e]}remove(e){return this.#e.delete(e)}isURI(e){let s;if(d(e))try{let{protocol:r}=new URL(e),i=r.replace(/:$/,""),o=i.split("+");s=!U.test(i)&&te.test(i)||o.every(l=>this.#e.has(l))}catch{s=!1}return!!s}},j=class extends T{#e;#t;constructor(){super(),this.#e=0,this.#t=new Set}sanitize(e,s={allow:[],deny:[],only:[]}){if(this.#e>x)throw this.#e=0,new Error("Data URLs nested too deeply.");let r;if(super.isURI(e)){let{allow:i,deny:o,only:l}=s??{},{hash:n,href:c,pathname:f,protocol:y,search:b}=new URL(e),g=y.replace(/:$/,""),v=g.split("+"),E=new Map([["data",!1],["file",!1],["javascrpt",!1],["vbscript",!1]]);if(Array.isArray(l)&&l.length){let p=super.get();for(let m of p)E.set(m,!1);let a=Object.values(l);for(let m of a)d(m)&&(m=m.trim(),U.test(m)||E.set(m,!0))}else{if(Array.isArray(i)&&i.length){let p=Object.values(i);for(let a of p)d(a)&&(a=a.trim(),U.test(a)||E.set(a,!0))}if(Array.isArray(o)&&o.length){let p=Object.values(o);for(let a of p)d(a)&&(a=a.trim(),a&&E.set(a,!1))}}let R;for(let[p,a]of E.entries())if(R=a||g!==p&&v.every(m=>m!==p),!R)break;if(R){let p,a=c;if(v.includes("data")){let[m,...F]=f.split(","),S=`${F.join(",")}${b}${n}`,$=m.split(";"),h=S;if($[$.length-1]==="base64")$.pop(),h=ae(S);else try{let _=N(h),{protocol:k}=new URL(_.trim());k.replace(/:$/,"").split("+").some(u=>U.test(u))&&(a="")}catch{}let I=/data:[^,]*,/.test(h);if(h!==S||I){if(I){let k=[...h.matchAll(Q)].reverse();for(let z of k){let[u]=z;O.test(u)&&([u]=O.exec(u)),this.#e++,this.#t.add(u);let M=this.sanitize(u,{allow:["data"]});if(M){let{index:P}=z,[B,Y]=[h.substring(0,P),h.substring(P+u.length)];h=`${B}${M}${Y}`}}this.#t.has(e)?this.#t.delete(e):p=!0}else this.#t.has(e)?this.#t.delete(e):p=!0;a=`${g}:${$.join(";")},${h}`}else this.#t.has(e)?this.#t.delete(e):p=!0}else p=!0;a?(r=a.replace(V,A).replace(re,G),p&&(r=r.replace(W,G),this.#e=0)):(r=a,this.#e=0)}}return r||null}parse(e){if(!d(e))throw new TypeError(`Expected String but got ${w(e)}.`);let s=this.sanitize(e,{allow:["data","file"]}),r=new Map([["input",e]]);if(s){let i=new URL(s),{pathname:o,protocol:l}=i,n=l.replace(/:$/,"").split("+");if(r.set("valid",!0),n.includes("data")){let c=new Map,[f,...y]=o.split(","),b=`${y.join(",")}`,g=f.split(";"),v=g[g.length-1]==="base64";v&&g.pop(),c.set("mime",g.join(";")),c.set("base64",v),c.set("data",b),r.set("data",Object.fromEntries(c))}else r.set("data",null);for(let c in i){let f=i[c];typeof f!="function"&&r.set(c,f)}}else r.set("valid",!1);return Object.fromEntries(r)}},L=new j,q=t=>L.isURI(t),ie=async t=>await q(t),H=(t,e)=>L.sanitize(t,e??{allow:[],deny:[],only:[]}),oe=async(t,e)=>await H(t,e);export{L as default,ie as isURI,q as isURISync,oe as sanitizeURL,H as sanitizeURLSync};
//# sourceMappingURL=url-sanitizer.min.js.map
