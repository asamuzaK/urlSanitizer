var l=e=>Object.prototype.toString.call(e).slice(8,-1),c=e=>typeof e=="string"||e instanceof String;var S=["aaa","aaas","about","acap","acct","acd","acr","adiumxtra","adt","afp","afs","aim","amss","android","appdata","apt","ar","ark","attachment","aw","barion","beshare","bitcoin","bitcoincash","blob","bolo","browserext","cabal","calculator","callto","cap","cast","casts","chrome","chrome-extension","cid","coap","coaps","com-eventbrite-attendee","content","content-type","crid","cstr","cvs","dab","dat","data","dav","diaspora","dict","did","dis","dlna-playcontainer","dlna-playsingle","dns","dntp","doi","dpp","drm","dtmi","dtn","dvb","dvx","dweb","ed2k","eid","elsi","embedded","ens","ethereum","example","facetime","feed","feedready","fido","file","finger","first-run-pen-experience","fish","fm","ftp","fuchsia-pkg","geo","gg","git","gitoid","gizmoproject","go","gopher","graph","gtalk","h323","ham","hcap","hcp","http","https","hxxp","hxxps","hydrazone","hyper","iax","icap","icon","im","imap","info","iotdisco","ipfs","ipn","ipns","ipp","ipps","irc","irc6","ircs","iris","iris.beep","iris.lwz","iris.xpc","iris.xpcs","isostore","itms","jabber","jar","jms","keyparc","lastfm","lbry","ldap","ldaps","leaptofrogans","lorawan","lpa","lvlt","magnet","mailto","maps","market","matrix","message","microsoft.windows.camera","microsoft.windows.camera.multipicker","microsoft.windows.camera.picker","mid","mms","mongodb","moz","moz-extension","ms-access","ms-appinstaller","ms-browser-extension","ms-calculator","ms-drive-to","ms-enrollment","ms-excel","ms-eyecontrolspeech","ms-gamebarservices","ms-gamingoverlay","ms-getoffice","ms-help","ms-infopath","ms-inputapp","ms-lockscreencomponent-config","ms-media-stream-id","ms-meetnow","ms-mixedrealitycapture","ms-mobileplans","ms-newsandinterests","ms-officeapp","ms-people","ms-powerpoint","ms-project","ms-publisher","ms-remotedesktop-launch","ms-restoretabcompanion","ms-screenclip","ms-screensketch","ms-search","ms-search-repair","ms-secondary-screen-controller","ms-secondary-screen-setup","ms-settings","ms-settings-airplanemode","ms-settings-bluetooth","ms-settings-camera","ms-settings-cellular","ms-settings-cloudstorage","ms-settings-connectabledevices","ms-settings-displays-topology","ms-settings-emailandaccounts","ms-settings-language","ms-settings-location","ms-settings-lock","ms-settings-nfctransactions","ms-settings-notifications","ms-settings-power","ms-settings-privacy","ms-settings-proximity","ms-settings-screenrotation","ms-settings-wifi","ms-settings-workplace","ms-spd","ms-stickers","ms-sttoverlay","ms-transit-to","ms-useractivityset","ms-virtualtouchpad","ms-visio","ms-walk-to","ms-whiteboard","ms-whiteboard-cmd","ms-word","msnim","msrp","msrps","mss","mt","mtqp","mumble","mupdate","mvn","news","nfs","ni","nih","nntp","notes","num","ocf","oid","onenote","onenote-cmd","opaquelocktoken","openpgp4fpr","otpauth","palm","paparazzi","payment","payto","pkcs11","platform","pop","pres","proxy","psyc","pttp","pwid","qb","query","quic-transport","redis","rediss","reload","res","resource","rmi","rsync","rtmfp","rtmp","rtsp","rtsps","rtspu","sarif","secondlife","secret-token","service","session","sftp","sgn","shc","sieve","simpleledger","simplex","sip","sips","skype","smb","smp","sms","smtp","snmp","soap.beep","soap.beeps","soldat","spiffe","spotify","ssb","ssh","starknet","steam","stun","stuns","submit","svn","swh","swid","swidpath","tag","taler","teamspeak","tel","teliaeid","telnet","tftp","things","thismessage","tip","tn3270","tool","turn","turns","tv","udp","unreal","urn","ut2004","uuid-in-package","v-event","vemmi","ventrilo","ves","view-source","vnc","vscode","vscode-insiders","vsls","w3","wcr","web3","webcal","wifi","ws","wss","wtai","wyciwyg","xcon","xcon-userid","xfire","xmlrpc.beep","xmlrpc.beeps","xmpp","xri","ymsgr","z39.50r","z39.50s"];var M=16,f=e=>{if(!c(e))throw new TypeError(`Expected String but got ${l(e)}.`);let s=[];for(let i of e)s.push(`%${i.charCodeAt(0).toString(M).toUpperCase()}`);return s.join("")},x=e=>{if(c(e))if(/^%[\dA-F]{2}$/i.test(e))e=e.toUpperCase();else throw new Error(`${e} is not a URL encoded character.`);else throw new TypeError(`Expected String but got ${l(e)}.`);let[s,i,a,o,t,m]=["&","#","<",">",'"',"'"].map(f),p;return e===s?p=`${s}amp;`:e===a?p=`${s}lt;`:e===o?p=`${s}gt;`:e===t?p=`${s}quot;`:e===m?p=`${s}${i}39;`:p=e,p},Y=e=>{if(!c(e))throw new TypeError(`Expected String but got ${l(e)}.`);let s=atob(e),i=Uint8Array.from([...s].map(t=>t.charCodeAt(0))),a=new Set([7,8,9,10,11,12,13,27]);for(let t=32;t<127;t++)a.add(t);for(let t=128;t<=255;t++)a.add(t);let o;return i.every(t=>a.has(t))?o=s:o=e,o},y=class{#e;constructor(){this.#e=new Set(S)}get(){return[...this.#e]}has(s){return this.#e.has(s)}add(s){if(c(s)){if(/(?:java|vb)script/.test(s)||!/^[a-z][a-z0-9+\-.]*$/.test(s))throw new Error(`Invalid scheme: ${s}`)}else throw new TypeError(`Expected String but got ${l(s)}.`);return this.#e.add(s),[...this.#e]}remove(s){return this.#e.delete(s)}isURI(s){let i;if(c(s))try{let{protocol:a}=new URL(s),o=a.replace(/:$/,""),t=o.split("+");i=/^(?:ext|web)\+[a-z]+$/.test(o)||t.every(m=>this.#e.has(m))}catch{i=!1}return!!i}},b=class extends y{sanitize(s,i={allow:[],deny:[],escapeTags:!0}){let a;if(super.isURI(s)){let{allow:o,deny:t,escapeTags:m}=i??{},{href:p,pathname:j,protocol:A}=new URL(s),g=A.replace(/:$/,""),u=g.split("+"),d=new Map([["data",!1],["file",!1]]);if(Array.isArray(o)&&o.length){let n=Object.values(o);for(let r of n)c(r)&&(r=r.trim(),/(?:java|vb)script/.test(r)?d.set(r,!1):r&&d.set(r,!0))}if(Array.isArray(t)&&t.length){let n=Object.values(t);for(let r of n)c(r)&&(r=r.trim(),r&&d.set(r,!1))}let h;for(let[n,r]of d.entries())if(h=r||g!==n&&u.every(w=>w!==n),!h)break;if(h){let n=p;if(u.includes("data")){let[L,z]=j.split(","),E=L.split(";");if(E.pop()==="base64"){let U=Y(z);U!==z&&(n=`${g}:${E.join(";")},${U}`)}}let[r,w,C,q,I]=["&","<",">",'"',"'"].map(f),k=/[<>"']/g,$=new RegExp(r,"g"),O=new RegExp(`(${w}|${C}|${q}|${I})`,"g");u.includes("data")&&!(m??!0)?a=n.replace(k,f).replace($,x):a=n.replace(k,f).replace($,x).replace(O,x)}}return a||null}},v=new b,T=e=>v.isURI(e),_=async e=>await T(e),R=(e,s)=>v.sanitize(e,s??{allow:[],deny:[],escapeTags:!0}),B=async(e,s)=>await R(e,s);export{v as default,_ as isURI,T as isURISync,B as sanitizeURL,R as sanitizeURLSync};
//# sourceMappingURL=url-sanitizer.min.js.map
