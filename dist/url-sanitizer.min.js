var g=s=>Object.prototype.toString.call(s).slice(8,-1),c=s=>typeof s=="string"||s instanceof String;var A=[7,8,9,10,11,12,13,27,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255];var C=["aaa","aaas","about","acap","acct","acd","acr","adiumxtra","adt","afp","afs","aim","amss","android","appdata","apt","ar","ark","attachment","aw","barion","beshare","bitcoin","bitcoincash","blob","bolo","browserext","cabal","calculator","callto","cap","cast","casts","chrome","chrome-extension","cid","coap","coaps","com-eventbrite-attendee","content","content-type","crid","cstr","cvs","dab","dat","data","dav","diaspora","dict","did","dis","dlna-playcontainer","dlna-playsingle","dns","dntp","doi","dpp","drm","dtmi","dtn","dvb","dvx","dweb","ed2k","eid","elsi","embedded","ens","ethereum","example","facetime","feed","feedready","fido","file","finger","first-run-pen-experience","fish","fm","ftp","fuchsia-pkg","geo","gg","git","gitoid","gizmoproject","go","gopher","graph","gtalk","h323","ham","hcap","hcp","http","https","hxxp","hxxps","hydrazone","hyper","iax","icap","icon","im","imap","info","iotdisco","ipfs","ipn","ipns","ipp","ipps","irc","irc6","ircs","iris","iris.beep","iris.lwz","iris.xpc","iris.xpcs","isostore","itms","jabber","jar","jms","keyparc","lastfm","lbry","ldap","ldaps","leaptofrogans","lorawan","lpa","lvlt","magnet","mailto","maps","market","matrix","message","microsoft.windows.camera","microsoft.windows.camera.multipicker","microsoft.windows.camera.picker","mid","mms","mongodb","moz","moz-extension","ms-access","ms-appinstaller","ms-browser-extension","ms-calculator","ms-drive-to","ms-enrollment","ms-excel","ms-eyecontrolspeech","ms-gamebarservices","ms-gamingoverlay","ms-getoffice","ms-help","ms-infopath","ms-inputapp","ms-lockscreencomponent-config","ms-media-stream-id","ms-meetnow","ms-mixedrealitycapture","ms-mobileplans","ms-newsandinterests","ms-officeapp","ms-people","ms-powerpoint","ms-project","ms-publisher","ms-remotedesktop-launch","ms-restoretabcompanion","ms-screenclip","ms-screensketch","ms-search","ms-search-repair","ms-secondary-screen-controller","ms-secondary-screen-setup","ms-settings","ms-settings-airplanemode","ms-settings-bluetooth","ms-settings-camera","ms-settings-cellular","ms-settings-cloudstorage","ms-settings-connectabledevices","ms-settings-displays-topology","ms-settings-emailandaccounts","ms-settings-language","ms-settings-location","ms-settings-lock","ms-settings-nfctransactions","ms-settings-notifications","ms-settings-power","ms-settings-privacy","ms-settings-proximity","ms-settings-screenrotation","ms-settings-wifi","ms-settings-workplace","ms-spd","ms-stickers","ms-sttoverlay","ms-transit-to","ms-useractivityset","ms-virtualtouchpad","ms-visio","ms-walk-to","ms-whiteboard","ms-whiteboard-cmd","ms-word","msnim","msrp","msrps","mss","mt","mtqp","mumble","mupdate","mvn","news","nfs","ni","nih","nntp","notes","num","ocf","oid","onenote","onenote-cmd","opaquelocktoken","openpgp4fpr","otpauth","palm","paparazzi","payment","payto","pkcs11","platform","pop","pres","proxy","psyc","pttp","pwid","qb","query","quic-transport","redis","rediss","reload","res","resource","rmi","rsync","rtmfp","rtmp","rtsp","rtsps","rtspu","sarif","secondlife","secret-token","service","session","sftp","sgn","shc","sieve","simpleledger","simplex","sip","sips","skype","smb","smp","sms","smtp","snmp","soap.beep","soap.beeps","soldat","spiffe","spotify","ssb","ssh","starknet","steam","stun","stuns","submit","svn","swh","swid","swidpath","tag","taler","teamspeak","tel","teliaeid","telnet","tftp","things","thismessage","tip","tn3270","tool","turn","turns","tv","udp","unreal","urn","ut2004","uuid-in-package","v-event","vemmi","ventrilo","ves","view-source","vnc","vscode","vscode-insiders","vsls","w3","wcr","web3","webcal","wifi","ws","wss","wtai","wyciwyg","xcon","xcon-userid","xfire","xmlrpc.beep","xmlrpc.beeps","xmpp","xri","ymsgr","z39.50r","z39.50s"];var q=16,u=s=>{if(!c(s))throw new TypeError(`Expected String but got ${g(s)}.`);let e=[];for(let r of s)e.push(`%${r.charCodeAt(0).toString(q).toUpperCase()}`);return e.join("")},D=s=>{if(c(s))if(/^%[\dA-F]{2}$/i.test(s))s=s.toUpperCase();else throw new Error(`${s} is not a URL encoded character.`);else throw new TypeError(`Expected String but got ${g(s)}.`);let[e,r,i,a,o,d]=["&","#","<",">",'"',"'"].map(u),n;return s===e?n=`${e}amp;`:s===i?n=`${e}lt;`:s===a?n=`${e}gt;`:s===o?n=`${e}quot;`:s===d?n=`${e}${r}39;`:n=s,n},N=s=>{if(!c(s))throw new TypeError(`Expected String but got ${g(s)}.`);let e=atob(s),r=Uint8Array.from([...e].map(o=>o.charCodeAt(0))),i=new Set(A),a;return r.every(o=>i.has(o))?a=e.replace(/\s/g,u):a=s,a},x=class{#e;constructor(){this.#e=new Set(C)}get(){return[...this.#e]}has(e){return this.#e.has(e)}add(e){if(c(e)){if(/(?:java|vb)script/.test(e)||!/^[a-z][a-z0-9+\-.]*$/.test(e))throw new Error(`Invalid scheme: ${e}`)}else throw new TypeError(`Expected String but got ${g(e)}.`);return this.#e.add(e),[...this.#e]}remove(e){return this.#e.delete(e)}isURI(e){let r;if(c(e))try{let{protocol:i}=new URL(e),a=i.replace(/:$/,""),o=a.split("+");r=/^(?:ext|web)\+[a-z]+$/.test(a)||o.every(d=>this.#e.has(d))}catch{r=!1}return!!r}},v=class extends x{#e;#s;constructor(){super(),this.#e=0,this.#s=new Set}sanitize(e,r={allow:[],deny:[]}){if(this.#e>q)throw this.#e=0,new Error("The nesting of data URLs is too deep.");let i;if(super.isURI(e)){let{allow:a,deny:o}=r??{},{href:d,pathname:n,protocol:O}=new URL(e),w=O.replace(/:$/,""),$=w.split("+"),h=new Map([["data",!1],["file",!1]]);if(Array.isArray(a)&&a.length){let p=Object.values(a);for(let t of p)c(t)&&(t=t.trim(),/(?:java|vb)script/.test(t)?h.set(t,!1):t&&h.set(t,!0))}if(Array.isArray(o)&&o.length){let p=Object.values(o);for(let t of p)c(t)&&(t=t.trim(),t&&h.set(t,!1))}let b;for(let[p,t]of h.entries())if(b=t||w!==p&&$.every(y=>y!==p),!b)break;if(b){let[p,t,y,P,_]=["&","<",">",'"',"'"].map(u),B=/[<>"']/g,M=new RegExp(p,"g"),Y=new RegExp(`(${t}|${y}|${P}|${_})`,"g"),f,k=d;if($.includes("data")){let[F,z]=n.split(","),E=F.split(";");if(E.pop()==="base64"){let m=N(z);if(m!==z){if(/data:[^,]*,/.test(m)){let H=/data:[^,]*,[^"]+/g,S=/data:[^,]*;?base64,[\dA-Za-z+/\-_=]+/,X=[...m.matchAll(H)].reverse();for(let R of X){let[l]=R;S.test(l)&&([l]=S.exec(l)),this.#e++,this.#s.add(l);let T=this.sanitize(l,{allow:["data"]});if(T){let{index:j}=R,[Z,G]=[m.substring(0,j),m.substring(j+l.length)];m=`${Z}${T}${G}`}}}this.#s.has(e)?this.#s.delete(e):f=!0,k=`${w}:${E.join(";")},${m}`}else f=!0}else this.#s.has(e)?this.#s.delete(e):f=!0}else f=!0;i=k.replace(B,u).replace(M,D),f&&(i=i.replace(Y,D),this.#e=0)}}return i||null}},U=new v,I=s=>U.isURI(s),Q=async s=>await I(s),L=(s,e)=>U.sanitize(s,e??{allow:[],deny:[]}),V=async(s,e)=>await L(s,e);export{U as default,Q as isURI,I as isURISync,V as sanitizeURL,L as sanitizeURLSync};
//# sourceMappingURL=url-sanitizer.min.js.map
