{
  "version": 3,
  "sources": ["../src/mjs/common.js", "../src/lib/iana/uri-schemes.json", "../src/mjs/uri-util.js"],
  "sourcesContent": ["/**\n * common.js\n */\n\n/* constants */\nconst TYPE_FROM = 8;\nconst TYPE_TO = -1;\n\n/**\n * get type\n *\n * @param {*} o - object to check\n * @returns {string} - type of object\n */\nexport const getType = o =>\n  Object.prototype.toString.call(o).slice(TYPE_FROM, TYPE_TO);\n\n/**\n * is string\n *\n * @param {*} o - object to check\n * @returns {boolean} - result\n */\nexport const isString = o => typeof o === 'string' || o instanceof String;\n", "[\n  \"aaa\",\n  \"aaas\",\n  \"about\",\n  \"acap\",\n  \"acct\",\n  \"acd\",\n  \"acr\",\n  \"adiumxtra\",\n  \"adt\",\n  \"afp\",\n  \"afs\",\n  \"aim\",\n  \"amss\",\n  \"android\",\n  \"appdata\",\n  \"apt\",\n  \"ar\",\n  \"ark\",\n  \"attachment\",\n  \"aw\",\n  \"barion\",\n  \"beshare\",\n  \"bitcoin\",\n  \"bitcoincash\",\n  \"blob\",\n  \"bolo\",\n  \"browserext\",\n  \"cabal\",\n  \"calculator\",\n  \"callto\",\n  \"cap\",\n  \"cast\",\n  \"casts\",\n  \"chrome\",\n  \"chrome-extension\",\n  \"cid\",\n  \"coap\",\n  \"coaps\",\n  \"com-eventbrite-attendee\",\n  \"content\",\n  \"content-type\",\n  \"crid\",\n  \"cstr\",\n  \"cvs\",\n  \"dab\",\n  \"dat\",\n  \"data\",\n  \"dav\",\n  \"diaspora\",\n  \"dict\",\n  \"did\",\n  \"dis\",\n  \"dlna-playcontainer\",\n  \"dlna-playsingle\",\n  \"dns\",\n  \"dntp\",\n  \"doi\",\n  \"dpp\",\n  \"drm\",\n  \"dtmi\",\n  \"dtn\",\n  \"dvb\",\n  \"dvx\",\n  \"dweb\",\n  \"ed2k\",\n  \"eid\",\n  \"elsi\",\n  \"embedded\",\n  \"ens\",\n  \"ethereum\",\n  \"example\",\n  \"facetime\",\n  \"feed\",\n  \"feedready\",\n  \"fido\",\n  \"file\",\n  \"finger\",\n  \"first-run-pen-experience\",\n  \"fish\",\n  \"fm\",\n  \"ftp\",\n  \"fuchsia-pkg\",\n  \"geo\",\n  \"gg\",\n  \"git\",\n  \"gitoid\",\n  \"gizmoproject\",\n  \"go\",\n  \"gopher\",\n  \"graph\",\n  \"gtalk\",\n  \"h323\",\n  \"ham\",\n  \"hcap\",\n  \"hcp\",\n  \"http\",\n  \"https\",\n  \"hxxp\",\n  \"hxxps\",\n  \"hydrazone\",\n  \"hyper\",\n  \"iax\",\n  \"icap\",\n  \"icon\",\n  \"im\",\n  \"imap\",\n  \"info\",\n  \"iotdisco\",\n  \"ipfs\",\n  \"ipn\",\n  \"ipns\",\n  \"ipp\",\n  \"ipps\",\n  \"irc\",\n  \"irc6\",\n  \"ircs\",\n  \"iris\",\n  \"iris.beep\",\n  \"iris.lwz\",\n  \"iris.xpc\",\n  \"iris.xpcs\",\n  \"isostore\",\n  \"itms\",\n  \"jabber\",\n  \"jar\",\n  \"jms\",\n  \"keyparc\",\n  \"lastfm\",\n  \"lbry\",\n  \"ldap\",\n  \"ldaps\",\n  \"leaptofrogans\",\n  \"lorawan\",\n  \"lpa\",\n  \"lvlt\",\n  \"magnet\",\n  \"mailto\",\n  \"maps\",\n  \"market\",\n  \"matrix\",\n  \"message\",\n  \"microsoft.windows.camera\",\n  \"microsoft.windows.camera.multipicker\",\n  \"microsoft.windows.camera.picker\",\n  \"mid\",\n  \"mms\",\n  \"mongodb\",\n  \"moz\",\n  \"moz-extension\",\n  \"ms-access\",\n  \"ms-appinstaller\",\n  \"ms-browser-extension\",\n  \"ms-calculator\",\n  \"ms-drive-to\",\n  \"ms-enrollment\",\n  \"ms-excel\",\n  \"ms-eyecontrolspeech\",\n  \"ms-gamebarservices\",\n  \"ms-gamingoverlay\",\n  \"ms-getoffice\",\n  \"ms-help\",\n  \"ms-infopath\",\n  \"ms-inputapp\",\n  \"ms-lockscreencomponent-config\",\n  \"ms-media-stream-id\",\n  \"ms-meetnow\",\n  \"ms-mixedrealitycapture\",\n  \"ms-mobileplans\",\n  \"ms-newsandinterests\",\n  \"ms-officeapp\",\n  \"ms-people\",\n  \"ms-powerpoint\",\n  \"ms-project\",\n  \"ms-publisher\",\n  \"ms-remotedesktop-launch\",\n  \"ms-restoretabcompanion\",\n  \"ms-screenclip\",\n  \"ms-screensketch\",\n  \"ms-search\",\n  \"ms-search-repair\",\n  \"ms-secondary-screen-controller\",\n  \"ms-secondary-screen-setup\",\n  \"ms-settings\",\n  \"ms-settings-airplanemode\",\n  \"ms-settings-bluetooth\",\n  \"ms-settings-camera\",\n  \"ms-settings-cellular\",\n  \"ms-settings-cloudstorage\",\n  \"ms-settings-connectabledevices\",\n  \"ms-settings-displays-topology\",\n  \"ms-settings-emailandaccounts\",\n  \"ms-settings-language\",\n  \"ms-settings-location\",\n  \"ms-settings-lock\",\n  \"ms-settings-nfctransactions\",\n  \"ms-settings-notifications\",\n  \"ms-settings-power\",\n  \"ms-settings-privacy\",\n  \"ms-settings-proximity\",\n  \"ms-settings-screenrotation\",\n  \"ms-settings-wifi\",\n  \"ms-settings-workplace\",\n  \"ms-spd\",\n  \"ms-stickers\",\n  \"ms-sttoverlay\",\n  \"ms-transit-to\",\n  \"ms-useractivityset\",\n  \"ms-virtualtouchpad\",\n  \"ms-visio\",\n  \"ms-walk-to\",\n  \"ms-whiteboard\",\n  \"ms-whiteboard-cmd\",\n  \"ms-word\",\n  \"msnim\",\n  \"msrp\",\n  \"msrps\",\n  \"mss\",\n  \"mt\",\n  \"mtqp\",\n  \"mumble\",\n  \"mupdate\",\n  \"mvn\",\n  \"news\",\n  \"nfs\",\n  \"ni\",\n  \"nih\",\n  \"nntp\",\n  \"notes\",\n  \"num\",\n  \"ocf\",\n  \"oid\",\n  \"onenote\",\n  \"onenote-cmd\",\n  \"opaquelocktoken\",\n  \"openpgp4fpr\",\n  \"otpauth\",\n  \"palm\",\n  \"paparazzi\",\n  \"payment\",\n  \"payto\",\n  \"pkcs11\",\n  \"platform\",\n  \"pop\",\n  \"pres\",\n  \"proxy\",\n  \"psyc\",\n  \"pttp\",\n  \"pwid\",\n  \"qb\",\n  \"query\",\n  \"quic-transport\",\n  \"redis\",\n  \"rediss\",\n  \"reload\",\n  \"res\",\n  \"resource\",\n  \"rmi\",\n  \"rsync\",\n  \"rtmfp\",\n  \"rtmp\",\n  \"rtsp\",\n  \"rtsps\",\n  \"rtspu\",\n  \"sarif\",\n  \"secondlife\",\n  \"secret-token\",\n  \"service\",\n  \"session\",\n  \"sftp\",\n  \"sgn\",\n  \"shc\",\n  \"sieve\",\n  \"simpleledger\",\n  \"simplex\",\n  \"sip\",\n  \"sips\",\n  \"skype\",\n  \"smb\",\n  \"smp\",\n  \"sms\",\n  \"smtp\",\n  \"snmp\",\n  \"soap.beep\",\n  \"soap.beeps\",\n  \"soldat\",\n  \"spiffe\",\n  \"spotify\",\n  \"ssb\",\n  \"ssh\",\n  \"starknet\",\n  \"steam\",\n  \"stun\",\n  \"stuns\",\n  \"submit\",\n  \"svn\",\n  \"swh\",\n  \"swid\",\n  \"swidpath\",\n  \"tag\",\n  \"taler\",\n  \"teamspeak\",\n  \"tel\",\n  \"teliaeid\",\n  \"telnet\",\n  \"tftp\",\n  \"things\",\n  \"thismessage\",\n  \"tip\",\n  \"tn3270\",\n  \"tool\",\n  \"turn\",\n  \"turns\",\n  \"tv\",\n  \"udp\",\n  \"unreal\",\n  \"urn\",\n  \"ut2004\",\n  \"uuid-in-package\",\n  \"v-event\",\n  \"vemmi\",\n  \"ventrilo\",\n  \"ves\",\n  \"view-source\",\n  \"vnc\",\n  \"vscode\",\n  \"vscode-insiders\",\n  \"vsls\",\n  \"w3\",\n  \"wcr\",\n  \"web3\",\n  \"webcal\",\n  \"wifi\",\n  \"ws\",\n  \"wss\",\n  \"wtai\",\n  \"wyciwyg\",\n  \"xcon\",\n  \"xcon-userid\",\n  \"xfire\",\n  \"xmlrpc.beep\",\n  \"xmlrpc.beeps\",\n  \"xmpp\",\n  \"xri\",\n  \"ymsgr\",\n  \"z39.50r\",\n  \"z39.50s\"\n]\n", "/**\n * uri-util.js\n */\n\n/* shared */\nimport { getType, isString } from './common.js';\nimport uriSchemes from '../lib/iana/uri-schemes.json' assert { type: 'json' };\n\n/* constants */\nconst HEX = 16;\n\n/**\n * get URL encoded string\n *\n * @param {string} str - string\n * @returns {string} - URL encoded string\n */\nexport const getUrlEncodedString = str => {\n  if (!isString(str)) {\n    throw new TypeError(`Expected String but got ${getType(str)}.`);\n  }\n  const chars = [];\n  for (const ch of str) {\n    chars.push(`%${ch.charCodeAt(0).toString(HEX).toUpperCase()}`);\n  }\n  return chars.join('');\n};\n\n/**\n * escape URL encoded HTML special chars\n *\n * @param {string} ch - URL encoded (percent encoded) char\n * @returns {string} - escaped URL encoded HTML special char / URL encoded char\n */\nexport const escapeUrlEncodedHtmlChars = ch => {\n  if (isString(ch)) {\n    if (/^%[\\dA-F]{2}$/i.test(ch)) {\n      ch = ch.toUpperCase();\n    } else {\n      throw new Error(`${ch} is not a URL encoded character.`);\n    }\n  } else {\n    throw new TypeError(`Expected String but got ${getType(ch)}.`);\n  }\n  const [amp, num, lt, gt, quot, apos] =\n    ['&', '#', '<', '>', '\"', \"'\"].map(getUrlEncodedString);\n  let escapedChar;\n  if (ch === amp) {\n    escapedChar = `${amp}amp;`;\n  } else if (ch === lt) {\n    escapedChar = `${amp}lt;`;\n  } else if (ch === gt) {\n    escapedChar = `${amp}gt;`;\n  } else if (ch === quot) {\n    escapedChar = `${amp}quot;`;\n  } else if (ch === apos) {\n    escapedChar = `${amp}${num}39;`;\n  } else {\n    escapedChar = ch;\n  }\n  return escapedChar;\n};\n\n/**\n * parse base64\n *\n * @see {@link https://github.com/file/file/blob/master/src/encoding.c}\n * @param {string} data - base64 data\n * @returns {string} - parsed data / base64 data\n */\nexport const parseBase64 = data => {\n  if (!isString(data)) {\n    throw new TypeError(`Expected String but got ${getType(data)}.`);\n  }\n  const bin = atob(data);\n  const uint8arr = Uint8Array.from([...bin].map(c => c.charCodeAt(0)));\n  const textChars = new Set([0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x1b]);\n  for (let i = 0x20; i < 0x7f; i++) {\n    textChars.add(i);\n  }\n  for (let i = 0x80; i <= 0xff; i++) {\n    textChars.add(i);\n  }\n  let parsedData;\n  if (uint8arr.every(c => textChars.has(c))) {\n    parsedData = bin;\n  } else {\n    parsedData = data;\n  }\n  return parsedData;\n};\n\n/**\n * URI schemes\n *\n */\nexport class URISchemes {\n  /* private fields */\n  #schemes;\n\n  /**\n   * construct\n   */\n  constructor() {\n    this.#schemes = new Set(uriSchemes);\n  }\n\n  /**\n   * get schemes\n   *\n   * @see {@link https://www.iana.org/assignments/uri-schemes/uri-schemes.xhtml}\n   *      - Historical schemes omitted\n   *      - Added 'moz-extension' scheme by default\n   * @returns {Array.<string>} - array of schemes\n   */\n  get() {\n    return [...this.#schemes];\n  }\n\n  /**\n   * has scheme\n   *\n   * @param {string} scheme - scheme\n   * @returns {boolean} - result\n   */\n  has(scheme) {\n    return this.#schemes.has(scheme);\n  }\n\n  /**\n   * add scheme\n   * NOTE: `javascript` and/or `vbscript` schemes can not be registered\n   *\n   * @param {string} scheme - scheme\n   * @returns {Array.<string>} - array of schemes\n   */\n  add(scheme) {\n    if (!isString(scheme)) {\n      throw new TypeError(`Expected String but got ${getType(scheme)}.`);\n    } else if (/(?:java|vb)script/.test(scheme) ||\n               !/^[a-z][a-z0-9+\\-.]*$/.test(scheme)) {\n      throw new Error(`Invalid scheme: ${scheme}`);\n    }\n    this.#schemes.add(scheme);\n    return [...this.#schemes];\n  }\n\n  /**\n   * remove scheme\n   *\n   * @param {string} scheme - scheme\n   * @returns {boolean} - result\n   */\n  remove(scheme) {\n    return this.#schemes.delete(scheme);\n  }\n\n  /**\n   * is URI\n   *\n   * @param {string} uri - URI input\n   * @returns {boolean} - result\n   */\n  isURI(uri) {\n    let res;\n    if (isString(uri)) {\n      try {\n        const { protocol } = new URL(uri);\n        const scheme = protocol.replace(/:$/, '');\n        const schemeParts = scheme.split('+');\n        res = /^(?:ext|web)\\+[a-z]+$/.test(scheme) ||\n              schemeParts.every(s => this.#schemes.has(s));\n      } catch (e) {\n        res = false;\n      }\n    }\n    return !!res;\n  }\n}\n\n/* URL sanitizer */\nexport class URLSanitizer extends URISchemes {\n  /**\n   * sanitize URL\n   * NOTE: `data` and/or `file` schemes must be explicitly allowed\n   *       `javascript` and/or `vbscript` schemes can not be allowed\n   *\n   * @param {string} url - URL input\n   * @param {object} opt - options\n   * @param {Array.<string>} opt.allow - array of allowed schemes\n   * @param {Array.<string>} opt.deny - array of denied schemes\n   * @param {boolean} opt.escapeTags - escape tags and quotes in data URL\n   * @returns {?string} - sanitized URL\n   */\n  sanitize(url, opt = { allow: [], deny: [], escapeTags: true }) {\n    let sanitizedUrl;\n    if (super.isURI(url)) {\n      const { allow, deny, escapeTags } = opt ?? {};\n      const { href, pathname, protocol } = new URL(url);\n      const scheme = protocol.replace(/:$/, '');\n      const schemeParts = scheme.split('+');\n      const schemeMap = new Map([['data', false], ['file', false]]);\n      if (Array.isArray(allow) && allow.length) {\n        const items = Object.values(allow);\n        for (let item of items) {\n          if (isString(item)) {\n            item = item.trim();\n            if (/(?:java|vb)script/.test(item)) {\n              schemeMap.set(item, false);\n            } else if (item) {\n              schemeMap.set(item, true);\n            }\n          }\n        }\n      }\n      if (Array.isArray(deny) && deny.length) {\n        const items = Object.values(deny);\n        for (let item of items) {\n          if (isString(item)) {\n            item = item.trim();\n            if (item) {\n              schemeMap.set(item, false);\n            }\n          }\n        }\n      }\n      let bool;\n      for (const [key, value] of schemeMap.entries()) {\n        bool = value || (scheme !== key && schemeParts.every(s => s !== key));\n        if (!bool) {\n          break;\n        }\n      }\n      if (bool) {\n        let urlToSanitize = href;\n        if (schemeParts.includes('data')) {\n          const [header, data] = pathname.split(',');\n          const mediaType = header.split(';');\n          const isBase64 = mediaType.pop() === 'base64';\n          if (isBase64) {\n            const parsedData = parseBase64(data);\n            if (parsedData !== data) {\n              urlToSanitize = `${scheme}:${mediaType.join(';')},${parsedData}`;\n            }\n          }\n        }\n        const [amp, lt, gt, quot, apos] =\n          ['&', '<', '>', '\"', \"'\"].map(getUrlEncodedString);\n        const regChars = /[<>\"']/g;\n        const regAmp = new RegExp(amp, 'g');\n        const regEncodedChars =\n          new RegExp(`(${lt}|${gt}|${quot}|${apos})`, 'g');\n        if (schemeParts.includes('data') && !(escapeTags ?? true)) {\n          sanitizedUrl = urlToSanitize.replace(regChars, getUrlEncodedString)\n            .replace(regAmp, escapeUrlEncodedHtmlChars);\n        } else {\n          sanitizedUrl = urlToSanitize.replace(regChars, getUrlEncodedString)\n            .replace(regAmp, escapeUrlEncodedHtmlChars)\n            .replace(regEncodedChars, escapeUrlEncodedHtmlChars);\n        }\n      }\n    }\n    return sanitizedUrl || null;\n  }\n}\n\nconst urlSanitizer = new URLSanitizer();\n\n/* alias */\n/**\n * is URI sync\n *\n * @param {string} uri - URI input\n * @returns {boolean} - result\n */\nconst isUri = uri => urlSanitizer.isURI(uri);\n\n/**\n * is URI async\n *\n * @param {string} uri - URI input\n * @returns {boolean} - result\n */\nexport const isURI = async uri => {\n  const res = await isUri(uri);\n  return res;\n};\n\n/**\n * sanitize URL sync\n *\n * @param {string} url - URL input\n * @param {object} opt - options\n * @returns {?string} - sanitized URL\n */\nconst sanitizeUrl = (url, opt) => urlSanitizer.sanitize(url, opt ?? {\n  allow: [],\n  deny: [],\n  escapeTags: true\n});\n\n/**\n * sanitize URL async\n *\n * @param {string} url - URL input\n * @param {object} opt - options\n * @returns {?string} - sanitized URL\n */\nexport const sanitizeURL = async (url, opt) => {\n  const res = await sanitizeUrl(url, opt);\n  return res;\n};\n\nexport {\n  urlSanitizer as default,\n  isUri as isURISync,\n  sanitizeUrl as sanitizeURLSync\n};\n"],
  "mappings": "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",
  "names": []
}
