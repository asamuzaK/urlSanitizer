{
  "version": 3,
  "sources": ["../node_modules/dompurify/src/utils.js", "../node_modules/dompurify/src/tags.js", "../node_modules/dompurify/src/attrs.js", "../node_modules/dompurify/src/regexp.js", "../node_modules/dompurify/src/purify.js", "../bundle/mjs/file-reader.js", "../bundle/mjs/common.js", "../bundle/mjs/dompurify.js", "../bundle/lib/file/text-chars.json", "../bundle/lib/iana/uri-schemes.json", "../bundle/mjs/uri-util.js"],
  "sourcesContent": ["const {\n  entries,\n  setPrototypeOf,\n  isFrozen,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n} = Object;\n\nlet { freeze, seal, create } = Object; // eslint-disable-line import/no-mutable-exports\nlet { apply, construct } = typeof Reflect !== 'undefined' && Reflect;\n\nif (!apply) {\n  apply = function (fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\n\nif (!freeze) {\n  freeze = function (x) {\n    return x;\n  };\n}\n\nif (!seal) {\n  seal = function (x) {\n    return x;\n  };\n}\n\nif (!construct) {\n  construct = function (Func, args) {\n    return new Func(...args);\n  };\n}\n\nconst arrayForEach = unapply(Array.prototype.forEach);\nconst arrayIndexOf = unapply(Array.prototype.indexOf);\nconst arrayPop = unapply(Array.prototype.pop);\nconst arrayPush = unapply(Array.prototype.push);\nconst arraySlice = unapply(Array.prototype.slice);\n\nconst stringToLowerCase = unapply(String.prototype.toLowerCase);\nconst stringToString = unapply(String.prototype.toString);\nconst stringMatch = unapply(String.prototype.match);\nconst stringReplace = unapply(String.prototype.replace);\nconst stringIndexOf = unapply(String.prototype.indexOf);\nconst stringTrim = unapply(String.prototype.trim);\n\nconst regExpTest = unapply(RegExp.prototype.test);\n\nconst typeErrorCreate = unconstruct(TypeError);\n\nexport function unapply(func) {\n  return (thisArg, ...args) => apply(func, thisArg, args);\n}\n\nexport function unconstruct(func) {\n  return (...args) => construct(func, args);\n}\n\n/* Add properties to a lookup table */\nexport function addToSet(set, array, transformCaseFunc) {\n  transformCaseFunc = transformCaseFunc ? transformCaseFunc : stringToLowerCase;\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n\n  let l = array.length;\n  while (l--) {\n    let element = array[l];\n    if (typeof element === 'string') {\n      const lcElement = transformCaseFunc(element);\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          array[l] = lcElement;\n        }\n\n        element = lcElement;\n      }\n    }\n\n    set[element] = true;\n  }\n\n  return set;\n}\n\n/* Shallow clone an object */\nexport function clone(object) {\n  const newObject = create(null);\n\n  for (const [property, value] of entries(object)) {\n    newObject[property] = value;\n  }\n\n  return newObject;\n}\n\n/* This method automatically checks if the prop is function\n * or getter and behaves accordingly. */\nfunction lookupGetter(object, prop) {\n  while (object !== null) {\n    const desc = getOwnPropertyDescriptor(object, prop);\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n\n    object = getPrototypeOf(object);\n  }\n\n  function fallbackValue(element) {\n    console.warn('fallback value for', element);\n    return null;\n  }\n\n  return fallbackValue;\n}\n\nexport {\n  // Array\n  arrayForEach,\n  arrayIndexOf,\n  arrayPop,\n  arrayPush,\n  arraySlice,\n  // Object\n  entries,\n  freeze,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n  isFrozen,\n  setPrototypeOf,\n  seal,\n  // RegExp\n  regExpTest,\n  // String\n  stringIndexOf,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringToString,\n  stringTrim,\n  // Errors\n  typeErrorCreate,\n  // Other\n  lookupGetter,\n};\n", "import { freeze } from './utils.js';\n\nexport const html = freeze([\n  'a',\n  'abbr',\n  'acronym',\n  'address',\n  'area',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'bdi',\n  'bdo',\n  'big',\n  'blink',\n  'blockquote',\n  'body',\n  'br',\n  'button',\n  'canvas',\n  'caption',\n  'center',\n  'cite',\n  'code',\n  'col',\n  'colgroup',\n  'content',\n  'data',\n  'datalist',\n  'dd',\n  'decorator',\n  'del',\n  'details',\n  'dfn',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'element',\n  'em',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'font',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hgroup',\n  'hr',\n  'html',\n  'i',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'label',\n  'legend',\n  'li',\n  'main',\n  'map',\n  'mark',\n  'marquee',\n  'menu',\n  'menuitem',\n  'meter',\n  'nav',\n  'nobr',\n  'ol',\n  'optgroup',\n  'option',\n  'output',\n  'p',\n  'picture',\n  'pre',\n  'progress',\n  'q',\n  'rp',\n  'rt',\n  'ruby',\n  's',\n  'samp',\n  'section',\n  'select',\n  'shadow',\n  'small',\n  'source',\n  'spacer',\n  'span',\n  'strike',\n  'strong',\n  'style',\n  'sub',\n  'summary',\n  'sup',\n  'table',\n  'tbody',\n  'td',\n  'template',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'tr',\n  'track',\n  'tt',\n  'u',\n  'ul',\n  'var',\n  'video',\n  'wbr',\n]);\n\n// SVG\nexport const svg = freeze([\n  'svg',\n  'a',\n  'altglyph',\n  'altglyphdef',\n  'altglyphitem',\n  'animatecolor',\n  'animatemotion',\n  'animatetransform',\n  'circle',\n  'clippath',\n  'defs',\n  'desc',\n  'ellipse',\n  'filter',\n  'font',\n  'g',\n  'glyph',\n  'glyphref',\n  'hkern',\n  'image',\n  'line',\n  'lineargradient',\n  'marker',\n  'mask',\n  'metadata',\n  'mpath',\n  'path',\n  'pattern',\n  'polygon',\n  'polyline',\n  'radialgradient',\n  'rect',\n  'stop',\n  'style',\n  'switch',\n  'symbol',\n  'text',\n  'textpath',\n  'title',\n  'tref',\n  'tspan',\n  'view',\n  'vkern',\n]);\n\nexport const svgFilters = freeze([\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n]);\n\n// List of SVG elements that are disallowed by default.\n// We still need to know them so that we can do namespace\n// checks properly in case one wants to add them to\n// allow-list.\nexport const svgDisallowed = freeze([\n  'animate',\n  'color-profile',\n  'cursor',\n  'discard',\n  'fedropshadow',\n  'font-face',\n  'font-face-format',\n  'font-face-name',\n  'font-face-src',\n  'font-face-uri',\n  'foreignobject',\n  'hatch',\n  'hatchpath',\n  'mesh',\n  'meshgradient',\n  'meshpatch',\n  'meshrow',\n  'missing-glyph',\n  'script',\n  'set',\n  'solidcolor',\n  'unknown',\n  'use',\n]);\n\nexport const mathMl = freeze([\n  'math',\n  'menclose',\n  'merror',\n  'mfenced',\n  'mfrac',\n  'mglyph',\n  'mi',\n  'mlabeledtr',\n  'mmultiscripts',\n  'mn',\n  'mo',\n  'mover',\n  'mpadded',\n  'mphantom',\n  'mroot',\n  'mrow',\n  'ms',\n  'mspace',\n  'msqrt',\n  'mstyle',\n  'msub',\n  'msup',\n  'msubsup',\n  'mtable',\n  'mtd',\n  'mtext',\n  'mtr',\n  'munder',\n  'munderover',\n]);\n\n// Similarly to SVG, we want to know all MathML elements,\n// even those that we disallow by default.\nexport const mathMlDisallowed = freeze([\n  'maction',\n  'maligngroup',\n  'malignmark',\n  'mlongdiv',\n  'mscarries',\n  'mscarry',\n  'msgroup',\n  'mstack',\n  'msline',\n  'msrow',\n  'semantics',\n  'annotation',\n  'annotation-xml',\n  'mprescripts',\n  'none',\n]);\n\nexport const text = freeze(['#text']);\n", "import { freeze } from './utils.js';\n\nexport const html = freeze([\n  'accept',\n  'action',\n  'align',\n  'alt',\n  'autocapitalize',\n  'autocomplete',\n  'autopictureinpicture',\n  'autoplay',\n  'background',\n  'bgcolor',\n  'border',\n  'capture',\n  'cellpadding',\n  'cellspacing',\n  'checked',\n  'cite',\n  'class',\n  'clear',\n  'color',\n  'cols',\n  'colspan',\n  'controls',\n  'controlslist',\n  'coords',\n  'crossorigin',\n  'datetime',\n  'decoding',\n  'default',\n  'dir',\n  'disabled',\n  'disablepictureinpicture',\n  'disableremoteplayback',\n  'download',\n  'draggable',\n  'enctype',\n  'enterkeyhint',\n  'face',\n  'for',\n  'headers',\n  'height',\n  'hidden',\n  'high',\n  'href',\n  'hreflang',\n  'id',\n  'inputmode',\n  'integrity',\n  'ismap',\n  'kind',\n  'label',\n  'lang',\n  'list',\n  'loading',\n  'loop',\n  'low',\n  'max',\n  'maxlength',\n  'media',\n  'method',\n  'min',\n  'minlength',\n  'multiple',\n  'muted',\n  'name',\n  'nonce',\n  'noshade',\n  'novalidate',\n  'nowrap',\n  'open',\n  'optimum',\n  'pattern',\n  'placeholder',\n  'playsinline',\n  'poster',\n  'preload',\n  'pubdate',\n  'radiogroup',\n  'readonly',\n  'rel',\n  'required',\n  'rev',\n  'reversed',\n  'role',\n  'rows',\n  'rowspan',\n  'spellcheck',\n  'scope',\n  'selected',\n  'shape',\n  'size',\n  'sizes',\n  'span',\n  'srclang',\n  'start',\n  'src',\n  'srcset',\n  'step',\n  'style',\n  'summary',\n  'tabindex',\n  'title',\n  'translate',\n  'type',\n  'usemap',\n  'valign',\n  'value',\n  'width',\n  'xmlns',\n  'slot',\n]);\n\nexport const svg = freeze([\n  'accent-height',\n  'accumulate',\n  'additive',\n  'alignment-baseline',\n  'ascent',\n  'attributename',\n  'attributetype',\n  'azimuth',\n  'basefrequency',\n  'baseline-shift',\n  'begin',\n  'bias',\n  'by',\n  'class',\n  'clip',\n  'clippathunits',\n  'clip-path',\n  'clip-rule',\n  'color',\n  'color-interpolation',\n  'color-interpolation-filters',\n  'color-profile',\n  'color-rendering',\n  'cx',\n  'cy',\n  'd',\n  'dx',\n  'dy',\n  'diffuseconstant',\n  'direction',\n  'display',\n  'divisor',\n  'dur',\n  'edgemode',\n  'elevation',\n  'end',\n  'fill',\n  'fill-opacity',\n  'fill-rule',\n  'filter',\n  'filterunits',\n  'flood-color',\n  'flood-opacity',\n  'font-family',\n  'font-size',\n  'font-size-adjust',\n  'font-stretch',\n  'font-style',\n  'font-variant',\n  'font-weight',\n  'fx',\n  'fy',\n  'g1',\n  'g2',\n  'glyph-name',\n  'glyphref',\n  'gradientunits',\n  'gradienttransform',\n  'height',\n  'href',\n  'id',\n  'image-rendering',\n  'in',\n  'in2',\n  'k',\n  'k1',\n  'k2',\n  'k3',\n  'k4',\n  'kerning',\n  'keypoints',\n  'keysplines',\n  'keytimes',\n  'lang',\n  'lengthadjust',\n  'letter-spacing',\n  'kernelmatrix',\n  'kernelunitlength',\n  'lighting-color',\n  'local',\n  'marker-end',\n  'marker-mid',\n  'marker-start',\n  'markerheight',\n  'markerunits',\n  'markerwidth',\n  'maskcontentunits',\n  'maskunits',\n  'max',\n  'mask',\n  'media',\n  'method',\n  'mode',\n  'min',\n  'name',\n  'numoctaves',\n  'offset',\n  'operator',\n  'opacity',\n  'order',\n  'orient',\n  'orientation',\n  'origin',\n  'overflow',\n  'paint-order',\n  'path',\n  'pathlength',\n  'patterncontentunits',\n  'patterntransform',\n  'patternunits',\n  'points',\n  'preservealpha',\n  'preserveaspectratio',\n  'primitiveunits',\n  'r',\n  'rx',\n  'ry',\n  'radius',\n  'refx',\n  'refy',\n  'repeatcount',\n  'repeatdur',\n  'restart',\n  'result',\n  'rotate',\n  'scale',\n  'seed',\n  'shape-rendering',\n  'specularconstant',\n  'specularexponent',\n  'spreadmethod',\n  'startoffset',\n  'stddeviation',\n  'stitchtiles',\n  'stop-color',\n  'stop-opacity',\n  'stroke-dasharray',\n  'stroke-dashoffset',\n  'stroke-linecap',\n  'stroke-linejoin',\n  'stroke-miterlimit',\n  'stroke-opacity',\n  'stroke',\n  'stroke-width',\n  'style',\n  'surfacescale',\n  'systemlanguage',\n  'tabindex',\n  'targetx',\n  'targety',\n  'transform',\n  'transform-origin',\n  'text-anchor',\n  'text-decoration',\n  'text-rendering',\n  'textlength',\n  'type',\n  'u1',\n  'u2',\n  'unicode',\n  'values',\n  'viewbox',\n  'visibility',\n  'version',\n  'vert-adv-y',\n  'vert-origin-x',\n  'vert-origin-y',\n  'width',\n  'word-spacing',\n  'wrap',\n  'writing-mode',\n  'xchannelselector',\n  'ychannelselector',\n  'x',\n  'x1',\n  'x2',\n  'xmlns',\n  'y',\n  'y1',\n  'y2',\n  'z',\n  'zoomandpan',\n]);\n\nexport const mathMl = freeze([\n  'accent',\n  'accentunder',\n  'align',\n  'bevelled',\n  'close',\n  'columnsalign',\n  'columnlines',\n  'columnspan',\n  'denomalign',\n  'depth',\n  'dir',\n  'display',\n  'displaystyle',\n  'encoding',\n  'fence',\n  'frame',\n  'height',\n  'href',\n  'id',\n  'largeop',\n  'length',\n  'linethickness',\n  'lspace',\n  'lquote',\n  'mathbackground',\n  'mathcolor',\n  'mathsize',\n  'mathvariant',\n  'maxsize',\n  'minsize',\n  'movablelimits',\n  'notation',\n  'numalign',\n  'open',\n  'rowalign',\n  'rowlines',\n  'rowspacing',\n  'rowspan',\n  'rspace',\n  'rquote',\n  'scriptlevel',\n  'scriptminsize',\n  'scriptsizemultiplier',\n  'selection',\n  'separator',\n  'separators',\n  'stretchy',\n  'subscriptshift',\n  'supscriptshift',\n  'symmetric',\n  'voffset',\n  'width',\n  'xmlns',\n]);\n\nexport const xml = freeze([\n  'xlink:href',\n  'xml:id',\n  'xlink:title',\n  'xml:space',\n  'xmlns:xlink',\n]);\n", "import { seal } from './utils.js';\n\n// eslint-disable-next-line unicorn/better-regex\nexport const MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\nexport const ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\nexport const TMPLIT_EXPR = seal(/\\${[\\w\\W]*}/gm);\nexport const DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\nexport const ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\nexport const IS_ALLOWED_URI = seal(\n  /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nexport const IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nexport const ATTR_WHITESPACE = seal(\n  /[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n);\nexport const DOCTYPE_NAME = seal(/^html$/i);\n", "import * as TAGS from './tags.js';\nimport * as ATTRS from './attrs.js';\nimport * as EXPRESSIONS from './regexp.js';\nimport {\n  addToSet,\n  clone,\n  entries,\n  freeze,\n  arrayForEach,\n  arrayPop,\n  arrayPush,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringToString,\n  stringIndexOf,\n  stringTrim,\n  regExpTest,\n  typeErrorCreate,\n  lookupGetter,\n} from './utils.js';\n\nconst getGlobal = () => (typeof window === 'undefined' ? null : window);\n\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param {?TrustedTypePolicyFactory} trustedTypes The policy factory.\n * @param {Document} document The document object (to determine policy name suffix)\n * @return {?TrustedTypePolicy} The policy created (or null, if Trusted Types\n * are not supported).\n */\nconst _createTrustedTypesPolicy = function (trustedTypes, document) {\n  if (\n    typeof trustedTypes !== 'object' ||\n    typeof trustedTypes.createPolicy !== 'function'\n  ) {\n    return null;\n  }\n\n  // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n  let suffix = null;\n  const ATTR_NAME = 'data-tt-policy-suffix';\n  if (\n    document.currentScript &&\n    document.currentScript.hasAttribute(ATTR_NAME)\n  ) {\n    suffix = document.currentScript.getAttribute(ATTR_NAME);\n  }\n\n  const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML(html) {\n        return html;\n      },\n      createScriptURL(scriptUrl) {\n        return scriptUrl;\n      },\n    });\n  } catch (_) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn(\n      'TrustedTypes policy ' + policyName + ' could not be created.'\n    );\n    return null;\n  }\n};\n\nfunction createDOMPurify(window = getGlobal()) {\n  const DOMPurify = (root) => createDOMPurify(root);\n\n  /**\n   * Version label, exposed for easier checks\n   * if DOMPurify is up to date or not\n   */\n  DOMPurify.version = VERSION;\n\n  /**\n   * Array of elements that DOMPurify removed during sanitation.\n   * Empty if nothing was removed.\n   */\n  DOMPurify.removed = [];\n\n  if (!window || !window.document || window.document.nodeType !== 9) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n\n    return DOMPurify;\n  }\n\n  const originalDocument = window.document;\n\n  let { document } = window;\n  const {\n    DocumentFragment,\n    HTMLTemplateElement,\n    Node,\n    Element,\n    NodeFilter,\n    NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n    HTMLFormElement,\n    DOMParser,\n    trustedTypes,\n  } = window;\n\n  const ElementPrototype = Element.prototype;\n\n  const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n  const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n  const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n  const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n  if (typeof HTMLTemplateElement === 'function') {\n    const template = document.createElement('template');\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n\n  const trustedTypesPolicy = _createTrustedTypesPolicy(\n    trustedTypes,\n    originalDocument\n  );\n  const emptyHTML = trustedTypesPolicy ? trustedTypesPolicy.createHTML('') : '';\n\n  const {\n    implementation,\n    createNodeIterator,\n    createDocumentFragment,\n    getElementsByTagName,\n  } = document;\n  const { importNode } = originalDocument;\n\n  let hooks = {};\n\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  DOMPurify.isSupported =\n    typeof entries === 'function' &&\n    typeof getParentNode === 'function' &&\n    implementation &&\n    typeof implementation.createHTMLDocument !== 'undefined';\n\n  const {\n    MUSTACHE_EXPR,\n    ERB_EXPR,\n    TMPLIT_EXPR,\n    DATA_ATTR,\n    ARIA_ATTR,\n    IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE,\n  } = EXPRESSIONS;\n\n  let { IS_ALLOWED_URI } = EXPRESSIONS;\n\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n\n  /* allowed element names */\n  let ALLOWED_TAGS = null;\n  const DEFAULT_ALLOWED_TAGS = addToSet({}, [\n    ...TAGS.html,\n    ...TAGS.svg,\n    ...TAGS.svgFilters,\n    ...TAGS.mathMl,\n    ...TAGS.text,\n  ]);\n\n  /* Allowed attribute names */\n  let ALLOWED_ATTR = null;\n  const DEFAULT_ALLOWED_ATTR = addToSet({}, [\n    ...ATTRS.html,\n    ...ATTRS.svg,\n    ...ATTRS.mathMl,\n    ...ATTRS.xml,\n  ]);\n\n  /*\n   * Configure how DOMPUrify should handle custom elements and their attributes as well as customized built-in elements.\n   * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n   * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n   * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n   */\n  const CUSTOM_ELEMENT_HANDLING = Object.seal(\n    Object.create(null, {\n      tagNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null,\n      },\n      attributeNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null,\n      },\n      allowCustomizedBuiltInElements: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: false,\n      },\n    })\n  );\n\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n  let FORBID_TAGS = null;\n\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n  let FORBID_ATTR = null;\n\n  /* Decide if ARIA attributes are okay */\n  let ALLOW_ARIA_ATTR = true;\n\n  /* Decide if custom data attributes are okay */\n  let ALLOW_DATA_ATTR = true;\n\n  /* Decide if unknown protocols are okay */\n  let ALLOW_UNKNOWN_PROTOCOLS = false;\n\n  /* Decide if self-closing tags in attributes are allowed.\n   * Usually removed due to a mXSS issue in jQuery 3.0 */\n  let ALLOW_SELF_CLOSE_IN_ATTR = true;\n\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n  let SAFE_FOR_TEMPLATES = false;\n\n  /* Decide if document with <html>... should be returned */\n  let WHOLE_DOCUMENT = false;\n\n  /* Track whether config is already set on this instance of DOMPurify. */\n  let SET_CONFIG = false;\n\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n  let FORCE_BODY = false;\n\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n  let RETURN_DOM = false;\n\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n  let RETURN_DOM_FRAGMENT = false;\n\n  /* Try to return a Trusted Type object instead of a string, return a string in\n   * case Trusted Types are not supported  */\n  let RETURN_TRUSTED_TYPE = false;\n\n  /* Output should be free from DOM clobbering attacks?\n   * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n   */\n  let SANITIZE_DOM = true;\n\n  /* Achieve full DOM Clobbering protection by isolating the namespace of named\n   * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n   *\n   * HTML/DOM spec rules that enable DOM Clobbering:\n   *   - Named Access on Window (§7.3.3)\n   *   - DOM Tree Accessors (§3.1.5)\n   *   - Form Element Parent-Child Relations (§4.10.3)\n   *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n   *   - HTMLCollection (§4.2.10.2)\n   *\n   * Namespace isolation is implemented by prefixing `id` and `name` attributes\n   * with a constant string, i.e., `user-content-`\n   */\n  let SANITIZE_NAMED_PROPS = false;\n  const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n\n  /* Keep element content when removing element? */\n  let KEEP_CONTENT = true;\n\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n  let IN_PLACE = false;\n\n  /* Allow usage of profiles like html, svg and mathMl */\n  let USE_PROFILES = {};\n\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n  let FORBID_CONTENTS = null;\n  const DEFAULT_FORBID_CONTENTS = addToSet({}, [\n    'annotation-xml',\n    'audio',\n    'colgroup',\n    'desc',\n    'foreignobject',\n    'head',\n    'iframe',\n    'math',\n    'mi',\n    'mn',\n    'mo',\n    'ms',\n    'mtext',\n    'noembed',\n    'noframes',\n    'noscript',\n    'plaintext',\n    'script',\n    'style',\n    'svg',\n    'template',\n    'thead',\n    'title',\n    'video',\n    'xmp',\n  ]);\n\n  /* Tags that are safe for data: URIs */\n  let DATA_URI_TAGS = null;\n  const DEFAULT_DATA_URI_TAGS = addToSet({}, [\n    'audio',\n    'video',\n    'img',\n    'source',\n    'image',\n    'track',\n  ]);\n\n  /* Attributes safe for values like \"javascript:\" */\n  let URI_SAFE_ATTRIBUTES = null;\n  const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, [\n    'alt',\n    'class',\n    'for',\n    'id',\n    'label',\n    'name',\n    'pattern',\n    'placeholder',\n    'role',\n    'summary',\n    'title',\n    'value',\n    'style',\n    'xmlns',\n  ]);\n\n  const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n  const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n  const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n  /* Document namespace */\n  let NAMESPACE = HTML_NAMESPACE;\n  let IS_EMPTY_INPUT = false;\n\n  /* Allowed XHTML+XML namespaces */\n  let ALLOWED_NAMESPACES = null;\n  const DEFAULT_ALLOWED_NAMESPACES = addToSet(\n    {},\n    [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE],\n    stringToString\n  );\n\n  /* Parsing of strict XHTML documents */\n  let PARSER_MEDIA_TYPE;\n  const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n  const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n  let transformCaseFunc;\n\n  /* Keep a reference to config to pass to hooks */\n  let CONFIG = null;\n\n  /* Ideally, do not touch anything below this line */\n  /* ______________________________________________ */\n\n  const formElement = document.createElement('form');\n\n  const isRegexOrFunction = function (testValue) {\n    return testValue instanceof RegExp || testValue instanceof Function;\n  };\n\n  /**\n   * _parseConfig\n   *\n   * @param  {Object} cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n  const _parseConfig = function (cfg) {\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n\n    /* Shield configuration object from tampering */\n    if (!cfg || typeof cfg !== 'object') {\n      cfg = {};\n    }\n\n    /* Shield configuration object from prototype pollution */\n    cfg = clone(cfg);\n\n    PARSER_MEDIA_TYPE =\n      // eslint-disable-next-line unicorn/prefer-includes\n      SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1\n        ? (PARSER_MEDIA_TYPE = DEFAULT_PARSER_MEDIA_TYPE)\n        : (PARSER_MEDIA_TYPE = cfg.PARSER_MEDIA_TYPE);\n\n    // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n    transformCaseFunc =\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml'\n        ? stringToString\n        : stringToLowerCase;\n\n    /* Set configuration parameters */\n    ALLOWED_TAGS =\n      'ALLOWED_TAGS' in cfg\n        ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc)\n        : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR =\n      'ALLOWED_ATTR' in cfg\n        ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc)\n        : DEFAULT_ALLOWED_ATTR;\n    ALLOWED_NAMESPACES =\n      'ALLOWED_NAMESPACES' in cfg\n        ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString)\n        : DEFAULT_ALLOWED_NAMESPACES;\n    URI_SAFE_ATTRIBUTES =\n      'ADD_URI_SAFE_ATTR' in cfg\n        ? addToSet(\n            clone(DEFAULT_URI_SAFE_ATTRIBUTES), // eslint-disable-line indent\n            cfg.ADD_URI_SAFE_ATTR, // eslint-disable-line indent\n            transformCaseFunc // eslint-disable-line indent\n          ) // eslint-disable-line indent\n        : DEFAULT_URI_SAFE_ATTRIBUTES;\n    DATA_URI_TAGS =\n      'ADD_DATA_URI_TAGS' in cfg\n        ? addToSet(\n            clone(DEFAULT_DATA_URI_TAGS), // eslint-disable-line indent\n            cfg.ADD_DATA_URI_TAGS, // eslint-disable-line indent\n            transformCaseFunc // eslint-disable-line indent\n          ) // eslint-disable-line indent\n        : DEFAULT_DATA_URI_TAGS;\n    FORBID_CONTENTS =\n      'FORBID_CONTENTS' in cfg\n        ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc)\n        : DEFAULT_FORBID_CONTENTS;\n    FORBID_TAGS =\n      'FORBID_TAGS' in cfg\n        ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc)\n        : {};\n    FORBID_ATTR =\n      'FORBID_ATTR' in cfg\n        ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc)\n        : {};\n    USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n    ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n    SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n    IS_ALLOWED_URI = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)\n    ) {\n      CUSTOM_ELEMENT_HANDLING.tagNameCheck =\n        cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n    }\n\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)\n    ) {\n      CUSTOM_ELEMENT_HANDLING.attributeNameCheck =\n        cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n    }\n\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements ===\n        'boolean'\n    ) {\n      CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements =\n        cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n    }\n\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n\n    /* Parse profile info */\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, [...TAGS.text]);\n      ALLOWED_ATTR = [];\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, TAGS.html);\n        addToSet(ALLOWED_ATTR, ATTRS.html);\n      }\n\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, TAGS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, TAGS.svgFilters);\n        addToSet(ALLOWED_ATTR, ATTRS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, TAGS.mathMl);\n        addToSet(ALLOWED_ATTR, ATTRS.mathMl);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n    }\n\n    /* Merge configuration parameters */\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n    }\n\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n    }\n\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n    }\n\n    if (cfg.FORBID_CONTENTS) {\n      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n        FORBID_CONTENTS = clone(FORBID_CONTENTS);\n      }\n\n      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n    }\n\n    /* Add #text in case KEEP_CONTENT is set to true */\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n      delete FORBID_TAGS.tbody;\n    }\n\n    // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n    if (freeze) {\n      freeze(cfg);\n    }\n\n    CONFIG = cfg;\n  };\n\n  const MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, [\n    'mi',\n    'mo',\n    'mn',\n    'ms',\n    'mtext',\n  ]);\n\n  const HTML_INTEGRATION_POINTS = addToSet({}, [\n    'foreignobject',\n    'desc',\n    'title',\n    'annotation-xml',\n  ]);\n\n  // Certain elements are allowed in both SVG and HTML\n  // namespace. We need to specify them explicitly\n  // so that they don't get erroneously deleted from\n  // HTML namespace.\n  const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, [\n    'title',\n    'style',\n    'font',\n    'a',\n    'script',\n  ]);\n\n  /* Keep track of all possible SVG and MathML tags\n   * so that we can perform the namespace checks\n   * correctly. */\n  const ALL_SVG_TAGS = addToSet({}, TAGS.svg);\n  addToSet(ALL_SVG_TAGS, TAGS.svgFilters);\n  addToSet(ALL_SVG_TAGS, TAGS.svgDisallowed);\n\n  const ALL_MATHML_TAGS = addToSet({}, TAGS.mathMl);\n  addToSet(ALL_MATHML_TAGS, TAGS.mathMlDisallowed);\n\n  /**\n   *\n   *\n   * @param  {Element} element a DOM element whose namespace is being checked\n   * @returns {boolean} Return false if the element has a\n   *  namespace that a spec-compliant parser would never\n   *  return. Return true otherwise.\n   */\n  const _checkValidNamespace = function (element) {\n    let parent = getParentNode(element);\n\n    // In JSDOM, if we're inside shadow DOM, then parentNode\n    // can be null. We just simulate parent in this case.\n    if (!parent || !parent.tagName) {\n      parent = {\n        namespaceURI: NAMESPACE,\n        tagName: 'template',\n      };\n    }\n\n    const tagName = stringToLowerCase(element.tagName);\n    const parentTagName = stringToLowerCase(parent.tagName);\n\n    if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return false;\n    }\n\n    if (element.namespaceURI === SVG_NAMESPACE) {\n      // The only way to switch from HTML namespace to SVG\n      // is via <svg>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'svg';\n      }\n\n      // The only way to switch from MathML to SVG is via`\n      // svg if parent is either <annotation-xml> or MathML\n      // text integration points.\n      if (parent.namespaceURI === MATHML_NAMESPACE) {\n        return (\n          tagName === 'svg' &&\n          (parentTagName === 'annotation-xml' ||\n            MATHML_TEXT_INTEGRATION_POINTS[parentTagName])\n        );\n      }\n\n      // We only allow elements that are defined in SVG\n      // spec. All others are disallowed in SVG namespace.\n      return Boolean(ALL_SVG_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === MATHML_NAMESPACE) {\n      // The only way to switch from HTML namespace to MathML\n      // is via <math>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'math';\n      }\n\n      // The only way to switch from SVG to MathML is via\n      // <math> and HTML integration points\n      if (parent.namespaceURI === SVG_NAMESPACE) {\n        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n      }\n\n      // We only allow elements that are defined in MathML\n      // spec. All others are disallowed in MathML namespace.\n      return Boolean(ALL_MATHML_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === HTML_NAMESPACE) {\n      // The only way to switch from SVG to HTML is via\n      // HTML integration points, and from MathML to HTML\n      // is via MathML text integration points\n      if (\n        parent.namespaceURI === SVG_NAMESPACE &&\n        !HTML_INTEGRATION_POINTS[parentTagName]\n      ) {\n        return false;\n      }\n\n      if (\n        parent.namespaceURI === MATHML_NAMESPACE &&\n        !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]\n      ) {\n        return false;\n      }\n\n      // We disallow tags that are specific for MathML\n      // or SVG and should never appear in HTML namespace\n      return (\n        !ALL_MATHML_TAGS[tagName] &&\n        (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName])\n      );\n    }\n\n    // For XHTML and XML documents that support custom namespaces\n    if (\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml' &&\n      ALLOWED_NAMESPACES[element.namespaceURI]\n    ) {\n      return true;\n    }\n\n    // The code should never reach this place (this means\n    // that the element somehow got namespace that is not\n    // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n    // Return false just in case.\n    return false;\n  };\n\n  /**\n   * _forceRemove\n   *\n   * @param  {Node} node a DOM node\n   */\n  const _forceRemove = function (node) {\n    arrayPush(DOMPurify.removed, { element: node });\n    try {\n      // eslint-disable-next-line unicorn/prefer-dom-node-remove\n      node.parentNode.removeChild(node);\n    } catch (_) {\n      node.remove();\n    }\n  };\n\n  /**\n   * _removeAttribute\n   *\n   * @param  {String} name an Attribute name\n   * @param  {Node} node a DOM node\n   */\n  const _removeAttribute = function (name, node) {\n    try {\n      arrayPush(DOMPurify.removed, {\n        attribute: node.getAttributeNode(name),\n        from: node,\n      });\n    } catch (_) {\n      arrayPush(DOMPurify.removed, {\n        attribute: null,\n        from: node,\n      });\n    }\n\n    node.removeAttribute(name);\n\n    // We void attribute values for unremovable \"is\"\" attributes\n    if (name === 'is' && !ALLOWED_ATTR[name]) {\n      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n        try {\n          _forceRemove(node);\n        } catch (_) {}\n      } else {\n        try {\n          node.setAttribute(name, '');\n        } catch (_) {}\n      }\n    }\n  };\n\n  /**\n   * _initDocument\n   *\n   * @param  {String} dirty a string of dirty markup\n   * @return {Document} a DOM, filled with the dirty markup\n   */\n  const _initDocument = function (dirty) {\n    /* Create a HTML document */\n    let doc;\n    let leadingWhitespace;\n\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n      leadingWhitespace = matches && matches[0];\n    }\n\n    if (\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml' &&\n      NAMESPACE === HTML_NAMESPACE\n    ) {\n      // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n      dirty =\n        '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' +\n        dirty +\n        '</body></html>';\n    }\n\n    const dirtyPayload = trustedTypesPolicy\n      ? trustedTypesPolicy.createHTML(dirty)\n      : dirty;\n    /*\n     * Use the DOMParser API by default, fallback later if needs be\n     * DOMParser not work for svg when has multiple root element.\n     */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n      } catch (_) {}\n    }\n\n    /* Use createHTMLDocument in case DOMParser is not available */\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createDocument(NAMESPACE, 'template', null);\n      try {\n        doc.documentElement.innerHTML = IS_EMPTY_INPUT\n          ? emptyHTML\n          : dirtyPayload;\n      } catch (_) {\n        // Syntax error if dirtyPayload is invalid xml\n      }\n    }\n\n    const body = doc.body || doc.documentElement;\n\n    if (dirty && leadingWhitespace) {\n      body.insertBefore(\n        document.createTextNode(leadingWhitespace),\n        body.childNodes[0] || null\n      );\n    }\n\n    /* Work on whole document or just its body */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      return getElementsByTagName.call(\n        doc,\n        WHOLE_DOCUMENT ? 'html' : 'body'\n      )[0];\n    }\n\n    return WHOLE_DOCUMENT ? doc.documentElement : body;\n  };\n\n  /**\n   * _createIterator\n   *\n   * @param  {Document} root document/fragment to create iterator for\n   * @return {Iterator} iterator instance\n   */\n  const _createIterator = function (root) {\n    return createNodeIterator.call(\n      root.ownerDocument || root,\n      root,\n      // eslint-disable-next-line no-bitwise\n      NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT,\n      null,\n      false\n    );\n  };\n\n  /**\n   * _isClobbered\n   *\n   * @param  {Node} elm element to check for clobbering attacks\n   * @return {Boolean} true if clobbered, false if safe\n   */\n  const _isClobbered = function (elm) {\n    return (\n      elm instanceof HTMLFormElement &&\n      (typeof elm.nodeName !== 'string' ||\n        typeof elm.textContent !== 'string' ||\n        typeof elm.removeChild !== 'function' ||\n        !(elm.attributes instanceof NamedNodeMap) ||\n        typeof elm.removeAttribute !== 'function' ||\n        typeof elm.setAttribute !== 'function' ||\n        typeof elm.namespaceURI !== 'string' ||\n        typeof elm.insertBefore !== 'function' ||\n        typeof elm.hasChildNodes !== 'function')\n    );\n  };\n\n  /**\n   * _isNode\n   *\n   * @param  {Node} obj object to check whether it's a DOM node\n   * @return {Boolean} true is object is a DOM node\n   */\n  const _isNode = function (object) {\n    return typeof Node === 'object'\n      ? object instanceof Node\n      : object &&\n          typeof object === 'object' &&\n          typeof object.nodeType === 'number' &&\n          typeof object.nodeName === 'string';\n  };\n\n  /**\n   * _executeHook\n   * Execute user configurable hooks\n   *\n   * @param  {String} entryPoint  Name of the hook's entry point\n   * @param  {Node} currentNode node to work on with the hook\n   * @param  {Object} data additional hook parameters\n   */\n  const _executeHook = function (entryPoint, currentNode, data) {\n    if (!hooks[entryPoint]) {\n      return;\n    }\n\n    arrayForEach(hooks[entryPoint], (hook) => {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  };\n\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   *\n   * @param   {Node} currentNode to check for permission to exist\n   * @return  {Boolean} true if node was killed, false if left alive\n   */\n  const _sanitizeElements = function (currentNode) {\n    let content;\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeElements', currentNode, null);\n\n    /* Check if element is clobbered or can clobber */\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Now let's check the element's type and name */\n    const tagName = transformCaseFunc(currentNode.nodeName);\n\n    /* Execute a hook if present */\n    _executeHook('uponSanitizeElement', currentNode, {\n      tagName,\n      allowedTags: ALLOWED_TAGS,\n    });\n\n    /* Detect mXSS attempts abusing namespace confusion */\n    if (\n      currentNode.hasChildNodes() &&\n      !_isNode(currentNode.firstElementChild) &&\n      (!_isNode(currentNode.content) ||\n        !_isNode(currentNode.content.firstElementChild)) &&\n      regExpTest(/<[/\\w]/g, currentNode.innerHTML) &&\n      regExpTest(/<[/\\w]/g, currentNode.textContent)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Remove element if anything forbids its presence */\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Check if we have a custom element to handle */\n      if (!FORBID_TAGS[tagName] && _basicCustomElementTest(tagName)) {\n        if (\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n          regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)\n        )\n          return false;\n        if (\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)\n        )\n          return false;\n      }\n\n      /* Keep content except for bad-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n        const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n        const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n\n        if (childNodes && parentNode) {\n          const childCount = childNodes.length;\n\n          for (let i = childCount - 1; i >= 0; --i) {\n            parentNode.insertBefore(\n              cloneNode(childNodes[i], true),\n              getNextSibling(currentNode)\n            );\n          }\n        }\n      }\n\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Check whether element has a valid namespace */\n    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Make sure that older browsers don't get noscript mXSS */\n    if (\n      (tagName === 'noscript' || tagName === 'noembed') &&\n      regExpTest(/<\\/no(script|embed)/i, currentNode.innerHTML)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Sanitize element content to be template-safe */\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n      content = stringReplace(content, MUSTACHE_EXPR, ' ');\n      content = stringReplace(content, ERB_EXPR, ' ');\n      content = stringReplace(content, TMPLIT_EXPR, ' ');\n      if (currentNode.textContent !== content) {\n        arrayPush(DOMPurify.removed, { element: currentNode.cloneNode() });\n        currentNode.textContent = content;\n      }\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeElements', currentNode, null);\n\n    return false;\n  };\n\n  /**\n   * _isValidAttribute\n   *\n   * @param  {string} lcTag Lowercase tag name of containing element.\n   * @param  {string} lcName Lowercase attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n  const _isValidAttribute = function (lcTag, lcName, value) {\n    /* Make sure attribute cannot clobber */\n    if (\n      SANITIZE_DOM &&\n      (lcName === 'id' || lcName === 'name') &&\n      (value in document || value in formElement)\n    ) {\n      return false;\n    }\n\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n    if (\n      ALLOW_DATA_ATTR &&\n      !FORBID_ATTR[lcName] &&\n      regExpTest(DATA_ATTR, lcName)\n    ) {\n      // This attribute is safe\n    } else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) {\n      // This attribute is safe\n      /* Otherwise, check the name is permitted */\n    } else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      if (\n        // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n        // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n        (_basicCustomElementTest(lcTag) &&\n          ((CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag)) ||\n            (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag))) &&\n          ((CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName)) ||\n            (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)))) ||\n        // Alternative, second condition checks if it's an `is`-attribute, AND\n        // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        (lcName === 'is' &&\n          CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements &&\n          ((CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value)) ||\n            (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))))\n      ) {\n        // If user has supplied a regexp or function in CUSTOM_ELEMENT_HANDLING.tagNameCheck, we need to also allow derived custom elements using the same tagName test.\n        // Additionally, we need to allow attributes passing the CUSTOM_ELEMENT_HANDLING.attributeNameCheck user has configured, as custom elements can define these at their own discretion.\n      } else {\n        return false;\n      }\n      /* Check value is safe. First, is attr inert? If so, is safe */\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) {\n      // This attribute is safe\n      /* Check no script, data or unknown possibly unsafe URI\n        unless we know URI values are safe for that attribute */\n    } else if (\n      regExpTest(IS_ALLOWED_URI, stringReplace(value, ATTR_WHITESPACE, ''))\n    ) {\n      // This attribute is safe\n      /* Keep image data URIs alive if src/xlink:href is allowed */\n      /* Further prevent gadget XSS for dynamically built script tags */\n    } else if (\n      (lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') &&\n      lcTag !== 'script' &&\n      stringIndexOf(value, 'data:') === 0 &&\n      DATA_URI_TAGS[lcTag]\n    ) {\n      // This attribute is safe\n      /* Allow unknown protocols: This provides support for links that\n        are handled by protocol handlers which may be unknown ahead of\n        time, e.g. fb:, spotify: */\n    } else if (\n      ALLOW_UNKNOWN_PROTOCOLS &&\n      !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))\n    ) {\n      // This attribute is safe\n      /* Check for binary attributes */\n      // eslint-disable-next-line no-negated-condition\n    } else if (!value) {\n      // Binary attributes are safe at this point\n      /* Anything else, presume unsafe, do not add it back */\n    } else {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * _basicCustomElementCheck\n   * checks if at least one dash is included in tagName, and it's not the first char\n   * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n   * @param {string} tagName name of the tag of the node to sanitize\n   */\n  const _basicCustomElementTest = function (tagName) {\n    return tagName.indexOf('-') > 0;\n  };\n\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param  {Node} currentNode to sanitize\n   */\n  const _sanitizeAttributes = function (currentNode) {\n    let attr;\n    let value;\n    let lcName;\n    let l;\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeAttributes', currentNode, null);\n\n    const { attributes } = currentNode;\n\n    /* Check if we have attributes; if not we might have a text node */\n    if (!attributes) {\n      return;\n    }\n\n    const hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR,\n    };\n    l = attributes.length;\n\n    /* Go backwards over all attributes; safely remove bad ones */\n    while (l--) {\n      attr = attributes[l];\n      const { name, namespaceURI } = attr;\n      value = name === 'value' ? attr.value : stringTrim(attr.value);\n      lcName = transformCaseFunc(name);\n\n      /* Execute a hook if present */\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n      _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n      value = hookEvent.attrValue;\n      /* Did the hooks approve of the attribute? */\n      if (hookEvent.forceKeepAttr) {\n        continue;\n      }\n\n      /* Remove attribute */\n      _removeAttribute(name, currentNode);\n\n      /* Did the hooks approve of the attribute? */\n      if (!hookEvent.keepAttr) {\n        continue;\n      }\n\n      /* Work around a security issue in jQuery 3.0 */\n      if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\/>/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n\n      /* Sanitize attribute content to be template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        value = stringReplace(value, MUSTACHE_EXPR, ' ');\n        value = stringReplace(value, ERB_EXPR, ' ');\n        value = stringReplace(value, TMPLIT_EXPR, ' ');\n      }\n\n      /* Is `value` valid for this attribute? */\n      const lcTag = transformCaseFunc(currentNode.nodeName);\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        continue;\n      }\n\n      /* Full DOM Clobbering protection via namespace isolation,\n       * Prefix id and name attributes with `user-content-`\n       */\n      if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n        // Remove the attribute with this value\n        _removeAttribute(name, currentNode);\n\n        // Prefix the value and later re-create the attribute with the sanitized value\n        value = SANITIZE_NAMED_PROPS_PREFIX + value;\n      }\n\n      /* Handle attributes that require Trusted Types */\n      if (\n        trustedTypesPolicy &&\n        typeof trustedTypes === 'object' &&\n        typeof trustedTypes.getAttributeType === 'function'\n      ) {\n        if (namespaceURI) {\n          /* Namespaces are not yet supported, see https://bugs.chromium.org/p/chromium/issues/detail?id=1305293 */\n        } else {\n          switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n            case 'TrustedHTML':\n              value = trustedTypesPolicy.createHTML(value);\n              break;\n            case 'TrustedScriptURL':\n              value = trustedTypesPolicy.createScriptURL(value);\n              break;\n            default:\n              break;\n          }\n        }\n      }\n\n      /* Handle invalid data-* attribute set by try-catching it */\n      try {\n        if (namespaceURI) {\n          currentNode.setAttributeNS(namespaceURI, name, value);\n        } else {\n          /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n          currentNode.setAttribute(name, value);\n        }\n\n        arrayPop(DOMPurify.removed);\n      } catch (_) {}\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeAttributes', currentNode, null);\n  };\n\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param  {DocumentFragment} fragment to iterate over recursively\n   */\n  const _sanitizeShadowDOM = function (fragment) {\n    let shadowNode;\n    const shadowIterator = _createIterator(fragment);\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeShadowDOM', fragment, null);\n\n    while ((shadowNode = shadowIterator.nextNode())) {\n      /* Execute a hook if present */\n      _executeHook('uponSanitizeShadowNode', shadowNode, null);\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(shadowNode)) {\n        continue;\n      }\n\n      /* Deep shadow DOM detected */\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(shadowNode);\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeShadowDOM', fragment, null);\n  };\n\n  /**\n   * Sanitize\n   * Public method providing core sanitation functionality\n   *\n   * @param {String|Node} dirty string or DOM node\n   * @param {Object} configuration object\n   */\n  // eslint-disable-next-line complexity\n  DOMPurify.sanitize = function (dirty, cfg = {}) {\n    let body;\n    let importedNode;\n    let currentNode;\n    let returnNode;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n    IS_EMPTY_INPUT = !dirty;\n    if (IS_EMPTY_INPUT) {\n      dirty = '<!-->';\n    }\n\n    /* Stringify, in case dirty is an object */\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      // eslint-disable-next-line no-negated-condition\n      if (typeof dirty.toString !== 'function') {\n        throw typeErrorCreate('toString is not a function');\n      } else {\n        dirty = dirty.toString();\n        if (typeof dirty !== 'string') {\n          throw typeErrorCreate('dirty is not a string, aborting');\n        }\n      }\n    }\n\n    /* Return dirty HTML if DOMPurify cannot run */\n    if (!DOMPurify.isSupported) {\n      return dirty;\n    }\n\n    /* Assign config vars */\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n\n    /* Clean up removed elements */\n    DOMPurify.removed = [];\n\n    /* Check if dirty is correctly typed for IN_PLACE */\n    if (typeof dirty === 'string') {\n      IN_PLACE = false;\n    }\n\n    if (IN_PLACE) {\n      /* Do some early pre-sanitization to avoid unsafe root nodes */\n      if (dirty.nodeName) {\n        const tagName = transformCaseFunc(dirty.nodeName);\n        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n          throw typeErrorCreate(\n            'root node is forbidden and cannot be sanitized in-place'\n          );\n        }\n      }\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!---->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n      if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-dom-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (\n        !RETURN_DOM &&\n        !SAFE_FOR_TEMPLATES &&\n        !WHOLE_DOCUMENT &&\n        // eslint-disable-next-line unicorn/prefer-includes\n        dirty.indexOf('<') === -1\n      ) {\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE\n          ? trustedTypesPolicy.createHTML(dirty)\n          : dirty;\n      }\n\n      /* Initialize the document to work on */\n      body = _initDocument(dirty);\n\n      /* Check we have a DOM node from the data */\n      if (!body) {\n        return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n      }\n    }\n\n    /* Remove first element node (ours) if FORCE_BODY is set */\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n\n    /* Get node iterator */\n    const nodeIterator = _createIterator(IN_PLACE ? dirty : body);\n\n    /* Now start iterating over the created document */\n    while ((currentNode = nodeIterator.nextNode())) {\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(currentNode)) {\n        continue;\n      }\n\n      /* Shadow DOM detected, sanitize it */\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(currentNode);\n    }\n\n    /* If we sanitized `dirty` in-place, return it. */\n    if (IN_PLACE) {\n      return dirty;\n    }\n\n    /* Return sanitized string or DOM */\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n\n      if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmod) {\n        /*\n          AdoptNode() is not used because internal state is not reset\n          (e.g. the past names map of a HTMLFormElement), this is safe\n          in theory but we would rather not risk another attack vector.\n          The state that is cloned by importNode() is explicitly defined\n          by the specs.\n        */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n\n      return returnNode;\n    }\n\n    let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n\n    /* Serialize doctype if allowed */\n    if (\n      WHOLE_DOCUMENT &&\n      ALLOWED_TAGS['!doctype'] &&\n      body.ownerDocument &&\n      body.ownerDocument.doctype &&\n      body.ownerDocument.doctype.name &&\n      regExpTest(EXPRESSIONS.DOCTYPE_NAME, body.ownerDocument.doctype.name)\n    ) {\n      serializedHTML =\n        '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n    }\n\n    /* Sanitize final string template-safe */\n    if (SAFE_FOR_TEMPLATES) {\n      serializedHTML = stringReplace(serializedHTML, MUSTACHE_EXPR, ' ');\n      serializedHTML = stringReplace(serializedHTML, ERB_EXPR, ' ');\n      serializedHTML = stringReplace(serializedHTML, TMPLIT_EXPR, ' ');\n    }\n\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE\n      ? trustedTypesPolicy.createHTML(serializedHTML)\n      : serializedHTML;\n  };\n\n  /**\n   * Public method to set the configuration once\n   * setConfig\n   *\n   * @param {Object} cfg configuration object\n   */\n  DOMPurify.setConfig = function (cfg) {\n    _parseConfig(cfg);\n    SET_CONFIG = true;\n  };\n\n  /**\n   * Public method to remove the configuration\n   * clearConfig\n   *\n   */\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n\n  /**\n   * Public method to check if an attribute value is valid.\n   * Uses last set config, if any. Otherwise, uses config defaults.\n   * isValidAttribute\n   *\n   * @param  {string} tag Tag name of containing element.\n   * @param  {string} attr Attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n   */\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n\n    const lcTag = transformCaseFunc(tag);\n    const lcName = transformCaseFunc(attr);\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n\n  /**\n   * AddHook\n   * Public method to add DOMPurify hooks\n   *\n   * @param {String} entryPoint entry point for the hook to add\n   * @param {Function} hookFunction function to execute\n   */\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n\n    hooks[entryPoint] = hooks[entryPoint] || [];\n    arrayPush(hooks[entryPoint], hookFunction);\n  };\n\n  /**\n   * RemoveHook\n   * Public method to remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if more are present)\n   *\n   * @param {String} entryPoint entry point for the hook to remove\n   * @return {Function} removed(popped) hook\n   */\n  DOMPurify.removeHook = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      return arrayPop(hooks[entryPoint]);\n    }\n  };\n\n  /**\n   * RemoveHooks\n   * Public method to remove all DOMPurify hooks at a given entryPoint\n   *\n   * @param  {String} entryPoint entry point for the hooks to remove\n   */\n  DOMPurify.removeHooks = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      hooks[entryPoint] = [];\n    }\n  };\n\n  /**\n   * RemoveAllHooks\n   * Public method to remove all DOMPurify hooks\n   *\n   */\n  DOMPurify.removeAllHooks = function () {\n    hooks = {};\n  };\n\n  return DOMPurify;\n}\n\nexport default createDOMPurify();\n", "/**\n * file-reader.js\n */\n\nconst { FileReader } = window;\nconst fileReader = new FileReader();\n\nexport {\n  fileReader as default,\n  FileReader\n};\n", "/**\n * common.js\n */\n\n/* constants */\nconst TYPE_FROM = 8;\nconst TYPE_TO = -1;\n\n/**\n * get type\n *\n * @param {*} o - object to check\n * @returns {string} - type of object\n */\nexport const getType = o =>\n  Object.prototype.toString.call(o).slice(TYPE_FROM, TYPE_TO);\n\n/**\n * is string\n *\n * @param {*} o - object to check\n * @returns {boolean} - result\n */\nexport const isString = o => typeof o === 'string' || o instanceof String;\n", "/**\n * dompurify.js\n */\n\nexport { default } from 'dompurify';\n", "[\n  7,\n  8,\n  9,\n  10,\n  11,\n  12,\n  13,\n  27,\n  32,\n  33,\n  34,\n  35,\n  36,\n  37,\n  38,\n  39,\n  40,\n  41,\n  42,\n  43,\n  44,\n  45,\n  46,\n  47,\n  48,\n  49,\n  50,\n  51,\n  52,\n  53,\n  54,\n  55,\n  56,\n  57,\n  58,\n  59,\n  60,\n  61,\n  62,\n  63,\n  64,\n  65,\n  66,\n  67,\n  68,\n  69,\n  70,\n  71,\n  72,\n  73,\n  74,\n  75,\n  76,\n  77,\n  78,\n  79,\n  80,\n  81,\n  82,\n  83,\n  84,\n  85,\n  86,\n  87,\n  88,\n  89,\n  90,\n  91,\n  92,\n  93,\n  94,\n  95,\n  96,\n  97,\n  98,\n  99,\n  100,\n  101,\n  102,\n  103,\n  104,\n  105,\n  106,\n  107,\n  108,\n  109,\n  110,\n  111,\n  112,\n  113,\n  114,\n  115,\n  116,\n  117,\n  118,\n  119,\n  120,\n  121,\n  122,\n  123,\n  124,\n  125,\n  126,\n  128,\n  129,\n  130,\n  131,\n  132,\n  133,\n  134,\n  135,\n  136,\n  137,\n  138,\n  139,\n  140,\n  141,\n  142,\n  143,\n  144,\n  145,\n  146,\n  147,\n  148,\n  149,\n  150,\n  151,\n  152,\n  153,\n  154,\n  155,\n  156,\n  157,\n  158,\n  159,\n  160,\n  161,\n  162,\n  163,\n  164,\n  165,\n  166,\n  167,\n  168,\n  169,\n  170,\n  171,\n  172,\n  173,\n  174,\n  175,\n  176,\n  177,\n  178,\n  179,\n  180,\n  181,\n  182,\n  183,\n  184,\n  185,\n  186,\n  187,\n  188,\n  189,\n  190,\n  191,\n  192,\n  193,\n  194,\n  195,\n  196,\n  197,\n  198,\n  199,\n  200,\n  201,\n  202,\n  203,\n  204,\n  205,\n  206,\n  207,\n  208,\n  209,\n  210,\n  211,\n  212,\n  213,\n  214,\n  215,\n  216,\n  217,\n  218,\n  219,\n  220,\n  221,\n  222,\n  223,\n  224,\n  225,\n  226,\n  227,\n  228,\n  229,\n  230,\n  231,\n  232,\n  233,\n  234,\n  235,\n  236,\n  237,\n  238,\n  239,\n  240,\n  241,\n  242,\n  243,\n  244,\n  245,\n  246,\n  247,\n  248,\n  249,\n  250,\n  251,\n  252,\n  253,\n  254,\n  255\n]\n", "[\n  \"aaa\",\n  \"aaas\",\n  \"about\",\n  \"acap\",\n  \"acct\",\n  \"acd\",\n  \"acr\",\n  \"adiumxtra\",\n  \"adt\",\n  \"afp\",\n  \"afs\",\n  \"aim\",\n  \"amss\",\n  \"android\",\n  \"appdata\",\n  \"apt\",\n  \"ar\",\n  \"ark\",\n  \"attachment\",\n  \"aw\",\n  \"barion\",\n  \"beshare\",\n  \"bitcoin\",\n  \"bitcoincash\",\n  \"blob\",\n  \"bolo\",\n  \"browserext\",\n  \"cabal\",\n  \"calculator\",\n  \"callto\",\n  \"cap\",\n  \"cast\",\n  \"casts\",\n  \"chrome\",\n  \"chrome-extension\",\n  \"cid\",\n  \"coap\",\n  \"coaps\",\n  \"com-eventbrite-attendee\",\n  \"content\",\n  \"content-type\",\n  \"crid\",\n  \"cstr\",\n  \"cvs\",\n  \"dab\",\n  \"dat\",\n  \"data\",\n  \"dav\",\n  \"diaspora\",\n  \"dict\",\n  \"did\",\n  \"dis\",\n  \"dlna-playcontainer\",\n  \"dlna-playsingle\",\n  \"dns\",\n  \"dntp\",\n  \"doi\",\n  \"dpp\",\n  \"drm\",\n  \"dtmi\",\n  \"dtn\",\n  \"dvb\",\n  \"dvx\",\n  \"dweb\",\n  \"ed2k\",\n  \"eid\",\n  \"elsi\",\n  \"embedded\",\n  \"ens\",\n  \"ethereum\",\n  \"example\",\n  \"facetime\",\n  \"feed\",\n  \"feedready\",\n  \"fido\",\n  \"file\",\n  \"finger\",\n  \"first-run-pen-experience\",\n  \"fish\",\n  \"fm\",\n  \"ftp\",\n  \"fuchsia-pkg\",\n  \"geo\",\n  \"gg\",\n  \"git\",\n  \"gitoid\",\n  \"gizmoproject\",\n  \"go\",\n  \"gopher\",\n  \"graph\",\n  \"gtalk\",\n  \"h323\",\n  \"ham\",\n  \"hcap\",\n  \"hcp\",\n  \"http\",\n  \"https\",\n  \"hxxp\",\n  \"hxxps\",\n  \"hydrazone\",\n  \"hyper\",\n  \"iax\",\n  \"icap\",\n  \"icon\",\n  \"im\",\n  \"imap\",\n  \"info\",\n  \"iotdisco\",\n  \"ipfs\",\n  \"ipn\",\n  \"ipns\",\n  \"ipp\",\n  \"ipps\",\n  \"irc\",\n  \"irc6\",\n  \"ircs\",\n  \"iris\",\n  \"iris.beep\",\n  \"iris.lwz\",\n  \"iris.xpc\",\n  \"iris.xpcs\",\n  \"isostore\",\n  \"itms\",\n  \"jabber\",\n  \"jar\",\n  \"jms\",\n  \"keyparc\",\n  \"lastfm\",\n  \"lbry\",\n  \"ldap\",\n  \"ldaps\",\n  \"leaptofrogans\",\n  \"lorawan\",\n  \"lpa\",\n  \"lvlt\",\n  \"magnet\",\n  \"mailto\",\n  \"maps\",\n  \"market\",\n  \"matrix\",\n  \"message\",\n  \"microsoft.windows.camera\",\n  \"microsoft.windows.camera.multipicker\",\n  \"microsoft.windows.camera.picker\",\n  \"mid\",\n  \"mms\",\n  \"mongodb\",\n  \"moz\",\n  \"moz-extension\",\n  \"ms-access\",\n  \"ms-appinstaller\",\n  \"ms-browser-extension\",\n  \"ms-calculator\",\n  \"ms-drive-to\",\n  \"ms-enrollment\",\n  \"ms-excel\",\n  \"ms-eyecontrolspeech\",\n  \"ms-gamebarservices\",\n  \"ms-gamingoverlay\",\n  \"ms-getoffice\",\n  \"ms-help\",\n  \"ms-infopath\",\n  \"ms-inputapp\",\n  \"ms-lockscreencomponent-config\",\n  \"ms-media-stream-id\",\n  \"ms-meetnow\",\n  \"ms-mixedrealitycapture\",\n  \"ms-mobileplans\",\n  \"ms-newsandinterests\",\n  \"ms-officeapp\",\n  \"ms-people\",\n  \"ms-powerpoint\",\n  \"ms-project\",\n  \"ms-publisher\",\n  \"ms-remotedesktop-launch\",\n  \"ms-restoretabcompanion\",\n  \"ms-screenclip\",\n  \"ms-screensketch\",\n  \"ms-search\",\n  \"ms-search-repair\",\n  \"ms-secondary-screen-controller\",\n  \"ms-secondary-screen-setup\",\n  \"ms-settings\",\n  \"ms-settings-airplanemode\",\n  \"ms-settings-bluetooth\",\n  \"ms-settings-camera\",\n  \"ms-settings-cellular\",\n  \"ms-settings-cloudstorage\",\n  \"ms-settings-connectabledevices\",\n  \"ms-settings-displays-topology\",\n  \"ms-settings-emailandaccounts\",\n  \"ms-settings-language\",\n  \"ms-settings-location\",\n  \"ms-settings-lock\",\n  \"ms-settings-nfctransactions\",\n  \"ms-settings-notifications\",\n  \"ms-settings-power\",\n  \"ms-settings-privacy\",\n  \"ms-settings-proximity\",\n  \"ms-settings-screenrotation\",\n  \"ms-settings-wifi\",\n  \"ms-settings-workplace\",\n  \"ms-spd\",\n  \"ms-stickers\",\n  \"ms-sttoverlay\",\n  \"ms-transit-to\",\n  \"ms-useractivityset\",\n  \"ms-virtualtouchpad\",\n  \"ms-visio\",\n  \"ms-walk-to\",\n  \"ms-whiteboard\",\n  \"ms-whiteboard-cmd\",\n  \"ms-word\",\n  \"msnim\",\n  \"msrp\",\n  \"msrps\",\n  \"mss\",\n  \"mt\",\n  \"mtqp\",\n  \"mumble\",\n  \"mupdate\",\n  \"mvn\",\n  \"news\",\n  \"nfs\",\n  \"ni\",\n  \"nih\",\n  \"nntp\",\n  \"notes\",\n  \"num\",\n  \"ocf\",\n  \"oid\",\n  \"onenote\",\n  \"onenote-cmd\",\n  \"opaquelocktoken\",\n  \"openpgp4fpr\",\n  \"otpauth\",\n  \"palm\",\n  \"paparazzi\",\n  \"payment\",\n  \"payto\",\n  \"pkcs11\",\n  \"platform\",\n  \"pop\",\n  \"pres\",\n  \"proxy\",\n  \"psyc\",\n  \"pttp\",\n  \"pwid\",\n  \"qb\",\n  \"query\",\n  \"quic-transport\",\n  \"redis\",\n  \"rediss\",\n  \"reload\",\n  \"res\",\n  \"resource\",\n  \"rmi\",\n  \"rsync\",\n  \"rtmfp\",\n  \"rtmp\",\n  \"rtsp\",\n  \"rtsps\",\n  \"rtspu\",\n  \"sarif\",\n  \"secondlife\",\n  \"secret-token\",\n  \"service\",\n  \"session\",\n  \"sftp\",\n  \"sgn\",\n  \"shc\",\n  \"sieve\",\n  \"simpleledger\",\n  \"simplex\",\n  \"sip\",\n  \"sips\",\n  \"skype\",\n  \"smb\",\n  \"smp\",\n  \"sms\",\n  \"smtp\",\n  \"snmp\",\n  \"soap.beep\",\n  \"soap.beeps\",\n  \"soldat\",\n  \"spiffe\",\n  \"spotify\",\n  \"ssb\",\n  \"ssh\",\n  \"starknet\",\n  \"steam\",\n  \"stun\",\n  \"stuns\",\n  \"submit\",\n  \"svn\",\n  \"swh\",\n  \"swid\",\n  \"swidpath\",\n  \"tag\",\n  \"taler\",\n  \"teamspeak\",\n  \"tel\",\n  \"teliaeid\",\n  \"telnet\",\n  \"tftp\",\n  \"things\",\n  \"thismessage\",\n  \"tip\",\n  \"tn3270\",\n  \"tool\",\n  \"turn\",\n  \"turns\",\n  \"tv\",\n  \"udp\",\n  \"unreal\",\n  \"urn\",\n  \"ut2004\",\n  \"uuid-in-package\",\n  \"v-event\",\n  \"vemmi\",\n  \"ventrilo\",\n  \"ves\",\n  \"view-source\",\n  \"vnc\",\n  \"vscode\",\n  \"vscode-insiders\",\n  \"vsls\",\n  \"w3\",\n  \"wcr\",\n  \"web3\",\n  \"webcal\",\n  \"wifi\",\n  \"ws\",\n  \"wss\",\n  \"wtai\",\n  \"wyciwyg\",\n  \"xcon\",\n  \"xcon-userid\",\n  \"xfire\",\n  \"xmlrpc.beep\",\n  \"xmlrpc.beeps\",\n  \"xmpp\",\n  \"xri\",\n  \"ymsgr\",\n  \"z39.50r\",\n  \"z39.50s\"\n]\n", "/**\n * uri-util.js\n */\n\n/* shared */\nimport { FileReader } from './file-reader.js';\nimport { getType, isString } from './common.js';\nimport domPurify from './dompurify.js';\nimport textChars from '../lib/file/text-chars.json' assert { type: 'json' };\nimport uriSchemes from '../lib/iana/uri-schemes.json' assert { type: 'json' };\n\n/* constants */\nconst HEX = 16;\nconst REG_BASE64 = /^[\\da-z+/\\-_=]+$/i;\nconst REG_DATA_URL = /data:[^,]*,/;\nconst REG_DATA_URL_BASE64 = /data:[^,]*;?base64,[\\da-z+/\\-_=]+/i;\nconst REG_DATA_URL_G = /data:[^,]*,[^\"]+/g;\nconst REG_END_COLON = /:$/;\nconst REG_END_NUM = /(?:#|%23)$/;\nconst REG_END_QUEST = /(?<!(?:#|%23).*)(?:\\?|%3F)$/;\nconst REG_HTML_SP = /[<>\"'\\s]/g;\nconst REG_HTML_URL_ENC = /%(?:2(?:2|7)|3(?:C|E))/g;\nconst REG_HTML_URL_ENC_SHORT = /%(?:2(?:2|7)|3(?:C|E))+?/;\nconst REG_MIME_DOM =\n  /^(?:text\\/(?:ht|x)ml|application\\/(?:xhtml\\+)?xml|image\\/svg\\+xml)/;\nconst REG_NUM_DECI = /^\\d+/;\nconst REG_NUM_HEAD = /#x?$/;\nconst REG_NUM_HEAD_ASCII = /^#(?:x(?:00)?[2-7]|\\d)/;\nconst REG_NUM_HEX = /^x[\\dA-F]+/i;\nconst REG_NUM_REF = /&#(x(?:00)?[\\dA-F]{2}|0?\\d{1,3});?/ig;\nconst REG_SCHEME = /^[a-z][\\da-z+\\-.]*$/;\nconst REG_SCHEME_CUSTOM = /^(?:ext|web)\\+[a-z]+$/;\nconst REG_SCRIPT = /(?:java|vb)script/;\nconst REG_SCRIPT_BLOB = /(?:java|vb)script|blob/;\nconst REG_URL_ENC = /^%[\\dA-F]{2}$/i;\nconst REG_URL_ENC_AMP = /%26/g;\n\n/**\n * get URL encoded string\n *\n * @param {string} str - string\n * @returns {string} - URL encoded string\n */\nexport const getURLEncodedString = str => {\n  if (!isString(str)) {\n    throw new TypeError(`Expected String but got ${getType(str)}.`);\n  }\n  const chars = [];\n  for (const ch of str) {\n    chars.push(`%${ch.charCodeAt(0).toString(HEX).toUpperCase()}`);\n  }\n  return chars.join('');\n};\n\n/**\n * escape URL encoded HTML special chars\n *\n * @param {string} ch - URL encoded (percent encoded) char\n * @returns {string} - escaped URL encoded HTML special char / URL encoded char\n */\nexport const escapeURLEncodedHTMLChars = ch => {\n  if (isString(ch) && REG_URL_ENC.test(ch)) {\n    ch = ch.toUpperCase();\n  }\n  const [amp, num, lt, gt, quot, apos] =\n    ['&', '#', '<', '>', '\"', \"'\"].map(getURLEncodedString);\n  let escapedChar;\n  if (ch === amp) {\n    escapedChar = `${amp}amp;`;\n  } else if (ch === lt) {\n    escapedChar = `${amp}lt;`;\n  } else if (ch === gt) {\n    escapedChar = `${amp}gt;`;\n  } else if (ch === quot) {\n    escapedChar = `${amp}quot;`;\n  } else if (ch === apos) {\n    escapedChar = `${amp}${num}39;`;\n  } else {\n    escapedChar = ch;\n  }\n  return escapedChar;\n};\n\n/**\n * parse base64 encoded data\n *\n * @param {string} data - base64 encoded data\n * @returns {string} - parsed text data / base64 encoded data if binary\n */\nexport const parseBase64 = data => {\n  if (!isString(data)) {\n    throw new TypeError(`Expected String but got ${getType(data)}.`);\n  } else if (!REG_BASE64.test(data)) {\n    throw new Error(`Invalid base64 data: ${data}`);\n  }\n  const bin = atob(data);\n  const uint8arr = Uint8Array.from([...bin].map(c => c.charCodeAt(0)));\n  const textCharCodes = new Set(textChars);\n  let parsedData;\n  if (uint8arr.every(c => textCharCodes.has(c))) {\n    parsedData = bin.replace(/\\s/g, getURLEncodedString);\n  } else {\n    parsedData = data;\n  }\n  return parsedData;\n};\n\n/**\n * parse URL encoded numeric character references in the range 0x00 to 0xFF\n *\n * @param {string} str - string\n * @param {number} nest - nest level\n * @returns {string} - parsed string\n */\nexport const parseURLEncodedNumCharRef = (str, nest = 0) => {\n  if (!isString(str)) {\n    throw new TypeError(`Expected String but got ${getType(str)}.`);\n  }\n  if (!Number.isInteger(nest)) {\n    throw new TypeError(`Expected Number but got ${getType(nest)}.`);\n  } else if (nest > HEX) {\n    throw new Error('Character references nested too deeply.');\n  }\n  let res = decodeURIComponent(str);\n  if (/&#/.test(res)) {\n    const textCharCodes = new Set(textChars);\n    const items = [...res.matchAll(REG_NUM_REF)].reverse();\n    for (const item of items) {\n      const [numCharRef, value] = item;\n      let num;\n      if (REG_NUM_HEX.test(value)) {\n        num = parseInt(`0${value}`, HEX);\n      } else if (REG_NUM_DECI.test(value)) {\n        num = parseInt(value);\n      }\n      if (Number.isInteger(num)) {\n        const { index } = item;\n        const [preNum, postNum] = [\n          res.substring(0, index),\n          res.substring(index + numCharRef.length)\n        ];\n        if (textCharCodes.has(num)) {\n          res = `${preNum}${String.fromCharCode(num)}${postNum}`;\n          if (REG_NUM_HEAD.test(preNum) || REG_NUM_HEAD_ASCII.test(postNum)) {\n            res = parseURLEncodedNumCharRef(res, ++nest);\n          }\n        } else if (num < HEX * HEX) {\n          res = `${preNum}${postNum}`;\n        }\n      }\n    }\n  }\n  return res;\n};\n\n/**\n * create data URL from blob\n *\n * @param {object} blob - blob\n * @returns {Promise.<?string>} - data URL\n */\nexport const createDataURLFromBlob = blob => new Promise((resolve, reject) => {\n  const reader = new FileReader();\n  reader.addEventListener('error', () => reject(reader.error));\n  reader.addEventListener('abort', () => resolve(reader.result));\n  reader.addEventListener('load', () => resolve(reader.result));\n  reader.readAsDataURL(blob);\n});\n\n/**\n * URI schemes\n *\n */\nexport class URISchemes {\n  /* private fields */\n  #schemes;\n\n  /**\n   * construct\n   */\n  constructor() {\n    this.#schemes = new Set(uriSchemes);\n  }\n\n  /**\n   * get schemes\n   *\n   * @see {@link https://www.iana.org/assignments/uri-schemes/uri-schemes.xhtml}\n   *      - Historical schemes omitted\n   *      - 'moz-extension' scheme added\n   * @returns {Array.<string>} - array of schemes\n   */\n  get() {\n    return [...this.#schemes];\n  }\n\n  /**\n   * has scheme\n   *\n   * @param {string} scheme - scheme\n   * @returns {boolean} - result\n   */\n  has(scheme) {\n    return this.#schemes.has(scheme);\n  }\n\n  /**\n   * add scheme\n   * NOTE: `javascript` and/or `vbscript` schemes can not be registered\n   *\n   * @param {string} scheme - scheme\n   * @returns {Array.<string>} - array of schemes\n   */\n  add(scheme) {\n    if (!isString(scheme)) {\n      throw new TypeError(`Expected String but got ${getType(scheme)}.`);\n    } else if (REG_SCRIPT.test(scheme) || !REG_SCHEME.test(scheme)) {\n      throw new Error(`Invalid scheme: ${scheme}`);\n    }\n    this.#schemes.add(scheme);\n    return [...this.#schemes];\n  }\n\n  /**\n   * remove scheme\n   *\n   * @param {string} scheme - scheme\n   * @returns {boolean} - result\n   */\n  remove(scheme) {\n    return this.#schemes.delete(scheme);\n  }\n\n  /**\n   * verify URI\n   *\n   * @param {string} uri - URI\n   * @returns {boolean} - result\n   */\n  verify(uri) {\n    let res;\n    if (isString(uri)) {\n      try {\n        const { protocol } = new URL(uri);\n        const scheme = protocol.replace(REG_END_COLON, '');\n        const schemeParts = scheme.split('+');\n        res = (!REG_SCRIPT.test(scheme) && REG_SCHEME_CUSTOM.test(scheme)) ||\n              schemeParts.every(s => this.#schemes.has(s));\n      } catch (e) {\n        res = false;\n      }\n    }\n    return !!res;\n  }\n};\n\n/* URL sanitizer */\nexport class URLSanitizer extends URISchemes {\n  /* private fields */\n  #nest;\n  #recurse;\n\n  /**\n   * construct\n   */\n  constructor() {\n    super();\n    this.#nest = 0;\n    this.#recurse = new Set();\n  }\n\n  /**\n   * replace matched data URLs\n   *\n   * @param {string} data - data URL\n   * @returns {string} - replaced data URL\n   */\n  replace(data) {\n    if (!isString(data)) {\n      throw new TypeError(`Expected String but got ${getType(data)}.`);\n    }\n    let replacedData = data;\n    if (REG_DATA_URL.test(replacedData)) {\n      const matchedDataUrls = replacedData.matchAll(REG_DATA_URL_G);\n      const items = [...matchedDataUrls].reverse();\n      for (const item of items) {\n        let [dataUrl] = item;\n        if (REG_DATA_URL_BASE64.test(dataUrl)) {\n          [dataUrl] = REG_DATA_URL_BASE64.exec(dataUrl);\n        }\n        this.#nest++;\n        this.#recurse.add(dataUrl);\n        const parsedDataUrl = this.sanitize(dataUrl, {\n          allow: ['data']\n        });\n        const { index } = item;\n        const [preDataUrl, postDataUrl] = [\n          replacedData.substring(0, index),\n          replacedData.substring(index + dataUrl.length)\n        ];\n        if (parsedDataUrl) {\n          replacedData = `${preDataUrl}${parsedDataUrl}${postDataUrl}`;\n        } else {\n          replacedData = `${preDataUrl}${postDataUrl}`;\n        }\n      }\n    }\n    return replacedData;\n  }\n\n  /**\n   * purify URL encoded DOM\n   *\n   * @param {string} dom - DOM string\n   * @returns {string} - purified DOM string\n   */\n  purify(dom) {\n    if (!isString(dom)) {\n      throw new TypeError(`Expected String but got ${getType(dom)}.`);\n    }\n    let purifiedDom = domPurify.sanitize(decodeURIComponent(dom));\n    if (purifiedDom && REG_DATA_URL.test(purifiedDom)) {\n      purifiedDom = this.replace(purifiedDom);\n    }\n    purifiedDom =\n      purifiedDom.replace(REG_END_NUM, '').replace(REG_END_QUEST, '');\n    return encodeURI(purifiedDom);\n  };\n\n  /**\n   * sanitize URL\n   * NOTE: `data` and `file` schemes must be explicitly allowed\n   *       `blob` URLs should be converted to `data` URLs\n   *       `javascript` and `vbscript` schemes can not be allowed\n   *\n   * @param {string} url - URL\n   * @param {object} opt - options\n   * @param {Array.<string>} opt.allow - array of allowed schemes\n   * @param {Array.<string>} opt.deny - array of denied schemes\n   * @param {Array.<string>} opt.only - array of specific schemes to allow\n   * @param {boolean} opt.remove - remove tag and/or quote and the rest\n   * @returns {?string} - sanitized URL\n   */\n  sanitize(url, opt = { allow: [], deny: [], only: [] }) {\n    if (this.#nest > HEX) {\n      this.#nest = 0;\n      throw new Error('Data URLs nested too deeply.');\n    }\n    const { allow, deny, only, remove } = opt ?? {};\n    const schemeMap = new Map([\n      ['blob', false],\n      ['data', false],\n      ['file', false],\n      ['javascrpt', false],\n      ['vbscript', false]\n    ]);\n    let restrictScheme = false;\n    if (Array.isArray(only) && only.length) {\n      const schemes = super.get();\n      for (const item of schemes) {\n        schemeMap.set(item, false);\n      }\n      const items = Object.values(only);\n      for (let item of items) {\n        if (isString(item)) {\n          item = item.trim();\n          if (!REG_SCRIPT_BLOB.test(item)) {\n            if (super.has(item)) {\n              schemeMap.set(item, true);\n            } else {\n              try {\n                super.add(item);\n              } catch (e) {\n                // fall through\n              }\n              if (super.has(item)) {\n                schemeMap.set(item, true);\n              }\n            }\n            if (!restrictScheme && schemeMap.has(item)) {\n              restrictScheme = schemeMap.get(item);\n            }\n          }\n        }\n      }\n    } else {\n      if (Array.isArray(allow) && allow.length) {\n        const items = Object.values(allow);\n        for (let item of items) {\n          if (isString(item)) {\n            item = item.trim();\n            if (!REG_SCRIPT_BLOB.test(item)) {\n              if (super.has(item)) {\n                schemeMap.set(item, true);\n              } else {\n                try {\n                  super.add(item);\n                } catch (e) {\n                  // fall through\n                }\n                if (super.has(item)) {\n                  schemeMap.set(item, true);\n                }\n              }\n            }\n          }\n        }\n      }\n      if (Array.isArray(deny) && deny.length) {\n        const items = Object.values(deny);\n        for (let item of items) {\n          if (isString(item)) {\n            item = item.trim();\n            if (item) {\n              schemeMap.set(item, false);\n            }\n          }\n        }\n      }\n    }\n    let sanitizedUrl;\n    if (super.verify(url)) {\n      const { hash, href, pathname, protocol, search } = new URL(url);\n      const scheme = protocol.replace(REG_END_COLON, '');\n      const schemeParts = scheme.split('+');\n      let bool;\n      if (restrictScheme) {\n        bool = schemeParts.every(s => schemeMap.get(s));\n      } else {\n        for (const [key, value] of schemeMap.entries()) {\n          bool = value || (scheme !== key && schemeParts.every(s => s !== key));\n          if (!bool) {\n            break;\n          }\n        }\n      }\n      if (bool) {\n        const isDataUrl = schemeParts.includes('data');\n        let finalize;\n        let urlToSanitize = href;\n        if (isDataUrl) {\n          const [head, ...body] = pathname.split(',');\n          const data = `${body.join(',')}${search}${hash}`;\n          const mediaType = head.split(';');\n          const isBase64 = mediaType[mediaType.length - 1] === 'base64';\n          let parsedData = data;\n          if (isBase64) {\n            parsedData = parseBase64(data);\n          }\n          try {\n            const decodedData = parseURLEncodedNumCharRef(parsedData).trim();\n            const { protocol: dataScheme } = new URL(decodedData);\n            const dataSchemeParts =\n              dataScheme.replace(REG_END_COLON, '').split('+');\n            if (dataSchemeParts.some(s => REG_SCRIPT_BLOB.test(s))) {\n              urlToSanitize = '';\n            }\n          } catch (e) {\n            // fall through\n          }\n          const containsDataUrl = REG_DATA_URL.test(parsedData);\n          if (parsedData !== data || containsDataUrl) {\n            if (containsDataUrl) {\n              parsedData = this.replace(parsedData);\n            } else if (this.#recurse.has(url)) {\n              this.#recurse.delete(url);\n            } else {\n              finalize = true;\n            }\n          } else if (this.#recurse.has(url)) {\n            this.#recurse.delete(url);\n          } else {\n            finalize = true;\n          }\n          if (!head || REG_MIME_DOM.test(head)) {\n            parsedData = this.purify(parsedData);\n          }\n          if (urlToSanitize && parsedData) {\n            if (isBase64 && parsedData !== data) {\n              mediaType.pop();\n            }\n            urlToSanitize = `${scheme}:${mediaType.join(';')},${parsedData}`;\n          } else {\n            urlToSanitize = '';\n          }\n        } else {\n          finalize = true;\n        }\n        if (!isDataUrl && remove &&\n            REG_HTML_URL_ENC_SHORT.test(urlToSanitize)) {\n          const item = REG_HTML_URL_ENC_SHORT.exec(urlToSanitize);\n          const { index } = item;\n          urlToSanitize = urlToSanitize.substring(0, index);\n        }\n        if (urlToSanitize) {\n          sanitizedUrl = urlToSanitize\n            .replace(REG_HTML_SP, getURLEncodedString)\n            .replace(REG_URL_ENC_AMP, escapeURLEncodedHTMLChars);\n          if (finalize) {\n            if (!isDataUrl) {\n              sanitizedUrl = sanitizedUrl\n                .replace(REG_HTML_URL_ENC, escapeURLEncodedHTMLChars);\n            }\n            this.#nest = 0;\n          }\n        } else {\n          sanitizedUrl = urlToSanitize;\n          this.#nest = 0;\n        }\n      }\n    }\n    return sanitizedUrl || null;\n  }\n\n  /**\n   * object with additional properties based on URL API\n   *\n   * @typedef {object} ParsedURL\n   * @property {string} input - URL input\n   * @property {boolean} valid - is valid URI\n   * @property {object} data - parsed result of data URL, `null`able\n   * @property {string} data.mime - MIME type\n   * @property {boolean} data.base64 - is base64 encoded\n   * @property {string} data.data - data part of the data URL\n   * @property {string} href - sanitized URL input\n   * @property {string} origin - scheme, domain and port of the sanitized URL\n   * @property {string} protocol -  protocol scheme of the sanitized URL\n   * @property {string} username - username specified before the domain name\n   * @property {string} password - password specified before the domain name\n   * @property {string} host - domain and port of the sanitized URL\n   * @property {string} hostname - domain of the sanitized URL\n   * @property {string} port - port number of the sanitized URL\n   * @property {string} pathname - path of the sanitized URL\n   * @property {string} search - query string of the sanitized URL\n   * @property {string} hash - fragment identifier of the sanitized URL\n   */\n\n  /**\n   * parse sanitized URL\n   *\n   * @param {string} url - URL\n   * @param {object} opt - options\n   * @returns {ParsedURL} - result with additional props based on URL API\n   */\n  parse(url, opt) {\n    if (!isString(url)) {\n      throw new TypeError(`Expected String but got ${getType(url)}.`);\n    }\n    const sanitizedUrl = this.sanitize(url, opt ?? {\n      allow: ['blob', 'data', 'file']\n    });\n    const parsedUrl = new Map([\n      ['input', url]\n    ]);\n    if (sanitizedUrl) {\n      const urlObj = new URL(sanitizedUrl);\n      const { pathname, protocol } = urlObj;\n      const schemeParts = protocol.replace(REG_END_COLON, '').split('+');\n      const isDataUrl = schemeParts.includes('data');\n      parsedUrl.set('valid', true);\n      if (isDataUrl) {\n        const dataUrl = new Map();\n        const [head, ...body] = pathname.split(',');\n        const data = `${body.join(',')}`;\n        const mediaType = head.split(';');\n        const isBase64 = mediaType[mediaType.length - 1] === 'base64';\n        if (isBase64) {\n          mediaType.pop();\n        }\n        dataUrl.set('mime', mediaType.join(';'));\n        dataUrl.set('base64', isBase64);\n        dataUrl.set('data', data);\n        parsedUrl.set('data', Object.fromEntries(dataUrl));\n      } else {\n        parsedUrl.set('data', null);\n      }\n      for (const key in urlObj) {\n        const value = urlObj[key];\n        if (isString(value)) {\n          parsedUrl.set(key, value);\n        }\n      }\n    } else {\n      parsedUrl.set('valid', false);\n    }\n    return Object.fromEntries(parsedUrl);\n  }\n};\n\n/* aliases and async wrappers */\n/* instance */\nconst urlSanitizer = new URLSanitizer();\n\n/**\n * is URI sync\n *\n * @param {string} uri - URI\n * @returns {boolean} - result\n */\nexport const isURISync = uri => urlSanitizer.verify(uri);\n\n/**\n * is URI async\n *\n * @param {string} uri - URI\n * @returns {Promise.<boolean>} - result\n */\nexport const isURI = async uri => {\n  const res = urlSanitizer.verify(uri);\n  return res;\n};\n\n/**\n * parse URL sync\n *\n * @param {string} url - URL\n * @returns {ParsedURL} - result with extended props based on URL API\n */\nexport const parseURLSync = url => urlSanitizer.parse(url);\n\n/**\n * parse URL async\n *\n * @param {string} url - URL\n * @returns {Promise.<ParsedURL>} - result with extended props based on URL API\n */\nexport const parseURL = async url => {\n  const res = urlSanitizer.parse(url);\n  return res;\n};\n\n/**\n * sanitize URL sync\n * NOTE: `data` and `file` schemes must be explicitly allowed\n *       `blob` scheme returns `null`\n *\n * @param {string} url - URL\n * @param {object} opt - options\n * @returns {?string} - sanitized URL\n */\nexport const sanitizeURLSync = (url, opt) => {\n  let res;\n  if (urlSanitizer.verify(url)) {\n    const { protocol } = new URL(url);\n    if (protocol === 'blob:') {\n      URL.revokeObjectURL(url);\n    } else {\n      res = urlSanitizer.sanitize(url, opt ?? {\n        allow: [],\n        deny: [],\n        only: []\n      });\n    }\n  }\n  return res || null;\n};\n\n/**\n * sanitize URL async\n * NOTE: `blob`, `data` and `file` schemes must be explicitly allowed\n *       given a `blob` URL, returns a sanitized `data` URL\n *\n * @param {string} url - URL\n * @param {object} opt - options\n * @returns {Promise.<?string>} - sanitized URL\n */\nexport const sanitizeURL = async (url, opt = {\n  allow: [],\n  deny: [],\n  only: []\n}) => {\n  let res;\n  if (urlSanitizer.verify(url)) {\n    const { protocol } = new URL(url);\n    if (protocol === 'blob:') {\n      const { allow, deny, only } = opt;\n      if ((Array.isArray(allow) && allow.includes('blob') &&\n           !(Array.isArray(deny) && deny.includes('blob'))) ||\n          (Array.isArray(only) && only.includes('blob'))) {\n        let data;\n        try {\n          data =\n            await fetch(url).then(r => r.blob()).then(createDataURLFromBlob);\n        } catch (e) {\n          // fall through\n        }\n        if (data) {\n          if (Array.isArray(only)) {\n            if (!only.includes('data')) {\n              only.push('data');\n            }\n          } else if (Array.isArray(allow)) {\n            if (!allow.includes('data')) {\n              allow.push('data');\n            }\n            if (Array.isArray(deny) && deny.includes('data')) {\n              const i = deny.indexOf('data');\n              deny.splice(i, 1);\n            }\n          }\n          res = urlSanitizer.sanitize(data, opt);\n        }\n      }\n      URL.revokeObjectURL(url);\n    } else {\n      res = urlSanitizer.sanitize(url, opt);\n    }\n  }\n  return res || null;\n};\n\n/* export instance */\nexport {\n  urlSanitizer as default\n};\n"],
  "mappings": "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A,oBAAA,EAAA,GAAA;QAAA,UAAA;AAAA,oBAAA,EAAA;QAAA;AAO5B,eAAOF;MACR;AAID,eAASG,aAAaJ,QAAQK,MAAM;AAC3BL,eAAAA,WAAW,MAAM;AACtB,cAAMM,OAAOzD,yBAAyBmD,QAAQK,IAAT;AACrC,cAAIC,MAAM;AACJA,gBAAAA,KAAKC,KAAK;AACZ,qBAAO7C,QAAQ4C,KAAKC,GAAN;YACf;AAED,gBAAI,OAAOD,KAAKH,UAAU,YAAY;AACpC,qBAAOzC,QAAQ4C,KAAKH,KAAN;YACf;UACF;AAEDH,mBAASpD,eAAeoD,MAAD;QACxB;AAEQQ,iBAAAA,cAAcX,SAAS;AAC9BY,kBAAQC,KAAK,sBAAsBb,OAAnC;AACA,iBAAO;QACR;AAED,eAAOW;MACR;AC5HM,UAAMG,SAAO7D,OAAO,CACzB,KACA,QACA,WACA,WACA,QACA,WACA,SACA,SACA,KACA,OACA,OACA,OACA,SACA,cACA,QACA,MACA,UACA,UACA,WACA,UACA,QACA,QACA,OACA,YACA,WACA,QACA,YACA,MACA,aACA,OACA,WACA,OACA,UACA,OACA,OACA,MACA,MACA,WACA,MACA,YACA,cACA,UACA,QACA,UACA,QACA,MACA,MACA,MACA,MACA,MACA,MACA,QACA,UACA,UACA,MACA,QACA,KACA,OACA,SACA,OACA,OACA,SACA,UACA,MACA,QACA,OACA,QACA,WACA,QACA,YACA,SACA,OACA,QACA,MACA,YACA,UACA,UACA,KACA,WACA,OACA,YACA,KACA,MACA,MACA,QACA,KACA,QACA,WACA,UACA,UACA,SACA,UACA,UACA,QACA,UACA,UACA,SACA,OACA,WACA,OACA,SACA,SACA,MACA,YACA,YACA,SACA,MACA,SACA,QACA,MACA,SACA,MACA,KACA,MACA,OACA,SACA,KArHyB,CAAD;AAyHnB,UAAM8D,QAAM9D,OAAO,CACxB,OACA,KACA,YACA,eACA,gBACA,gBACA,iBACA,oBACA,UACA,YACA,QACA,QACA,WACA,UACA,QACA,KACA,SACA,YACA,SACA,SACA,QACA,kBACA,UACA,QACA,YACA,SACA,QACA,WACA,WACA,YACA,kBACA,QACA,QACA,SACA,UACA,UACA,QACA,YACA,SACA,QACA,SACA,QACA,OA3CwB,CAAD;AA8ClB,UAAM+D,aAAa/D,OAAO,CAC/B,WACA,iBACA,uBACA,eACA,oBACA,qBACA,qBACA,kBACA,WACA,WACA,WACA,WACA,WACA,kBACA,WACA,WACA,eACA,gBACA,YACA,gBACA,sBACA,eACA,UACA,cAxB+B,CAAD;AA+BzB,UAAMgE,gBAAgBhE,OAAO,CAClC,WACA,iBACA,UACA,WACA,gBACA,aACA,oBACA,kBACA,iBACA,iBACA,iBACA,SACA,aACA,QACA,gBACA,aACA,WACA,iBACA,UACA,OACA,cACA,WACA,KAvBkC,CAAD;AA0B5B,UAAMiE,WAASjE,OAAO,CAC3B,QACA,YACA,UACA,WACA,SACA,UACA,MACA,cACA,iBACA,MACA,MACA,SACA,WACA,YACA,SACA,QACA,MACA,UACA,SACA,UACA,QACA,QACA,WACA,UACA,OACA,SACA,OACA,UACA,YA7B2B,CAAD;AAkCrB,UAAMkE,mBAAmBlE,OAAO,CACrC,WACA,eACA,cACA,YACA,aACA,WACA,WACA,UACA,UACA,SACA,aACA,cACA,kBACA,eACA,MAfqC,CAAD;AAkB/B,UAAMmE,OAAOnE,OAAO,CAAC,OAAD,CAAD;ACpRnB,UAAM6D,OAAO7D,OAAO,CACzB,UACA,UACA,SACA,OACA,kBACA,gBACA,wBACA,YACA,cACA,WACA,UACA,WACA,eACA,eACA,WACA,QACA,SACA,SACA,SACA,QACA,WACA,YACA,gBACA,UACA,eACA,YACA,YACA,WACA,OACA,YACA,2BACA,yBACA,YACA,aACA,WACA,gBACA,QACA,OACA,WACA,UACA,UACA,QACA,QACA,YACA,MACA,aACA,aACA,SACA,QACA,SACA,QACA,QACA,WACA,QACA,OACA,OACA,aACA,SACA,UACA,OACA,aACA,YACA,SACA,QACA,SACA,WACA,cACA,UACA,QACA,WACA,WACA,eACA,eACA,UACA,WACA,WACA,cACA,YACA,OACA,YACA,OACA,YACA,QACA,QACA,WACA,cACA,SACA,YACA,SACA,QACA,SACA,QACA,WACA,SACA,OACA,UACA,QACA,SACA,WACA,YACA,SACA,aACA,QACA,UACA,UACA,SACA,SACA,SACA,MA7GyB,CAAD;AAgHnB,UAAM8D,MAAM9D,OAAO,CACxB,iBACA,cACA,YACA,sBACA,UACA,iBACA,iBACA,WACA,iBACA,kBACA,SACA,QACA,MACA,SACA,QACA,iBACA,aACA,aACA,SACA,uBACA,+BACA,iBACA,mBACA,MACA,MACA,KACA,MACA,MACA,mBACA,aACA,WACA,WACA,OACA,YACA,aACA,OACA,QACA,gBACA,aACA,UACA,eACA,eACA,iBACA,eACA,aACA,oBACA,gBACA,cACA,gBACA,eACA,MACA,MACA,MACA,MACA,cACA,YACA,iBACA,qBACA,UACA,QACA,MACA,mBACA,MACA,OACA,KACA,MACA,MACA,MACA,MACA,WACA,aACA,cACA,YACA,QACA,gBACA,kBACA,gBACA,oBACA,kBACA,SACA,cACA,cACA,gBACA,gBACA,eACA,eACA,oBACA,aACA,OACA,QACA,SACA,UACA,QACA,OACA,QACA,cACA,UACA,YACA,WACA,SACA,UACA,eACA,UACA,YACA,eACA,QACA,cACA,uBACA,oBACA,gBACA,UACA,iBACA,uBACA,kBACA,KACA,MACA,MACA,UACA,QACA,QACA,eACA,aACA,WACA,UACA,UACA,SACA,QACA,mBACA,oBACA,oBACA,gBACA,eACA,gBACA,eACA,cACA,gBACA,oBACA,qBACA,kBACA,mBACA,qBACA,kBACA,UACA,gBACA,SACA,gBACA,kBACA,YACA,WACA,WACA,aACA,oBACA,eACA,mBACA,kBACA,cACA,QACA,MACA,MACA,WACA,UACA,WACA,cACA,WACA,cACA,iBACA,iBACA,SACA,gBACA,QACA,gBACA,oBACA,oBACA,KACA,MACA,MACA,SACA,KACA,MACA,MACA,KACA,YAtLwB,CAAD;AAyLlB,UAAMiE,S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",
  "names": ["entries", "Object", "setPrototypeOf", "isFrozen", "getPrototypeOf", "getOwnPropertyDescriptor", "freeze", "seal", "create", "Reflect", "apply", "construct", "fun", "thisValue", "args", "x", "Func", "arrayForEach", "unapply", "Array", "prototype", "forEach", "arrayPop", "pop", "arrayPush", "push", "stringToLowerCase", "String", "toLowerCase", "stringToString", "toString", "stringMatch", "match", "stringReplace", "replace", "stringIndexOf", "indexOf", "stringTrim", "trim", "regExpTest", "RegExp", "test", "typeErrorCreate", "unconstruct", "TypeError", "func", "thisArg", "addToSet", "set", "array", "transformCaseFunc", "l", "length", "element", "lcElement", "clone", "object", "newObject", "property", "value", "lookupGetter", "prop", "desc", "get", "fallbackValue", "console", "warn", "html", "svg", "svgFilters", "svgDisallowed", "mathMl", "mathMlDisallowed", "text", "xml", "MUSTACHE_EXPR", "ERB_EXPR", "TMPLIT_EXPR", "DATA_ATTR", "ARIA_ATTR", "IS_ALLOWED_URI", "IS_SCRIPT_OR_DATA", "ATTR_WHITESPACE", "DOCTYPE_NAME", "getGlobal", "window", "_createTrustedTypesPolicy", "trustedTypes", "document", "createPolicy", "suffix", "ATTR_NAME", "currentScript", "hasAttribute", "getAttribute", "policyName", "createHTML", "createScriptURL", "scriptUrl", "_", "createDOMPurify", "DOMPurify", "root", "version", "VERSION", "removed", "nodeType", "isSupported", "originalDocument", "DocumentFragment", "HTMLTemplateElement", "Node", "Element", "NodeFilter", "NamedNodeMap", "MozNamedAttrMap", "HTMLFormElement", "DOMParser", "ElementPrototype", "cloneNode", "getNextSibling", "getChildNodes", "getParentNode", "template", "createElement", "content", "ownerDocument", "trustedTypesPolicy", "emptyHTML", "implementation", "createNodeIterator", "createDocumentFragment", "getElementsByTagName", "importNode", "hooks", "createHTMLDocument", "EXPRESSIONS", "ALLOWED_TAGS", "DEFAULT_ALLOWED_TAGS", "TAGS", "ALLOWED_ATTR", "DEFAULT_ALLOWED_ATTR", "ATTRS", "CUSTOM_ELEMENT_HANDLING", "tagNameCheck", "writable", "configurable", "enumerable", "attributeNameCheck", "allowCustomizedBuiltInElements", "FORBID_TAGS", "FORBID_ATTR", "ALLOW_ARIA_ATTR", "ALLOW_DATA_ATTR", "ALLOW_UNKNOWN_PROTOCOLS", "ALLOW_SELF_CLOSE_IN_ATTR", "SAFE_FOR_TEMPLATES", "WHOLE_DOCUMENT", "SET_CONFIG", "FORCE_BODY", "RETURN_DOM", "RETURN_DOM_FRAGMENT", "RETURN_TRUSTED_TYPE", "SANITIZE_DOM", "SANITIZE_NAMED_PROPS", "SANITIZE_NAMED_PROPS_PREFIX", "KEEP_CONTENT", "IN_PLACE", "USE_PROFILES", "FORBID_CONTENTS", "DEFAULT_FORBID_CONTENTS", "DATA_URI_TAGS", "DEFAULT_DATA_URI_TAGS", "URI_SAFE_ATTRIBUTES", "DEFAULT_URI_SAFE_ATTRIBUTES", "MATHML_NAMESPACE", "SVG_NAMESPACE", "HTML_NAMESPACE", "NAMESPACE", "IS_EMPTY_INPUT", "ALLOWED_NAMESPACES", "DEFAULT_ALLOWED_NAMESPACES", "PARSER_MEDIA_TYPE", "SUPPORTED_PARSER_MEDIA_TYPES", "DEFAULT_PARSER_MEDIA_TYPE", "CONFIG", "formElement", "isRegexOrFunction", "testValue", "Function", "_parseConfig", "cfg", "ADD_URI_SAFE_ATTR", "ADD_DATA_URI_TAGS", "ALLOWED_URI_REGEXP", "ADD_TAGS", "ADD_ATTR", "table", "tbody", "MATHML_TEXT_INTEGRATION_POINTS", "HTML_INTEGRATION_POINTS", "COMMON_SVG_AND_HTML_ELEMENTS", "ALL_SVG_TAGS", "ALL_MATHML_TAGS", "_checkValidNamespace", "parent", "tagName", "namespaceURI", "parentTagName", "Boolean", "_forceRemove", "node", "parentNode", "removeChild", "remove", "_removeAttribute", "name", "attribute", "getAttributeNode", "from", "removeAttribute", "setAttribute", "_initDocument", "dirty", "doc", "leadingWhitespace", "matches", "dirtyPayload", "parseFromString", "documentElement", "createDocument", "innerHTML", "body", "insertBefore", "createTextNode", "childNodes", "call", "_createIterator", "SHOW_ELEMENT", "SHOW_COMMENT", "SHOW_TEXT", "_isClobbered", "elm", "nodeName", "textContent", "attributes", "hasChildNodes", "_isNode", "_executeHook", "entryPoint", "currentNode", "data", "hook", "_sanitizeElements", "allowedTags", "firstElementChild", "_basicCustomElementTest", "childCount", "i", "_isValidAttribute", "lcTag", "lcName", "_sanitizeAttributes", "attr", "hookEvent", "attrName", "attrValue", "keepAttr", "allowedAttributes", "forceKeepAttr", "undefined", "getAttributeType", "setAttributeNS", "_sanitizeShadowDOM", "fragment", "shadowNode", "shadowIterator", "nextNode", "sanitize", "importedNode", "returnNode", "appendChild", "firstChild", "nodeIterator", "shadowroot", "shadowrootmod", "serializedHTML", "outerHTML", "doctype", "setConfig", "clearConfig", "isValidAttribute", "tag", "addHook", "hookFunction", "removeHook", "removeHooks", "removeAllHooks"]
}
