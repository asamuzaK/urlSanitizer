{
  "version": 3,
  "sources": ["../node_modules/dompurify/src/utils.js", "../node_modules/dompurify/src/tags.js", "../node_modules/dompurify/src/attrs.js", "../node_modules/dompurify/src/regexp.js", "../node_modules/dompurify/src/purify.js", "../bundle/mjs/dompurify.js", "../bundle/mjs/common.js", "../bundle/lib/file/text-chars.json", "../bundle/lib/iana/uri-schemes.json", "../bundle/mjs/file-reader.js", "../bundle/mjs/uri-util.js", "../bundle/mjs/sanitizer.js"],
  "sourcesContent": ["const {\n  entries,\n  setPrototypeOf,\n  isFrozen,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n} = Object;\n\nlet { freeze, seal, create } = Object; // eslint-disable-line import/no-mutable-exports\nlet { apply, construct } = typeof Reflect !== 'undefined' && Reflect;\n\nif (!apply) {\n  apply = function (fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\n\nif (!freeze) {\n  freeze = function (x) {\n    return x;\n  };\n}\n\nif (!seal) {\n  seal = function (x) {\n    return x;\n  };\n}\n\nif (!construct) {\n  construct = function (Func, args) {\n    return new Func(...args);\n  };\n}\n\nconst arrayForEach = unapply(Array.prototype.forEach);\nconst arrayIndexOf = unapply(Array.prototype.indexOf);\nconst arrayPop = unapply(Array.prototype.pop);\nconst arrayPush = unapply(Array.prototype.push);\nconst arraySlice = unapply(Array.prototype.slice);\n\nconst stringToLowerCase = unapply(String.prototype.toLowerCase);\nconst stringToString = unapply(String.prototype.toString);\nconst stringMatch = unapply(String.prototype.match);\nconst stringReplace = unapply(String.prototype.replace);\nconst stringIndexOf = unapply(String.prototype.indexOf);\nconst stringTrim = unapply(String.prototype.trim);\n\nconst regExpTest = unapply(RegExp.prototype.test);\n\nconst typeErrorCreate = unconstruct(TypeError);\n\nexport function unapply(func) {\n  return (thisArg, ...args) => apply(func, thisArg, args);\n}\n\nexport function unconstruct(func) {\n  return (...args) => construct(func, args);\n}\n\n/* Add properties to a lookup table */\nexport function addToSet(set, array, transformCaseFunc) {\n  transformCaseFunc = transformCaseFunc ? transformCaseFunc : stringToLowerCase;\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n\n  let l = array.length;\n  while (l--) {\n    let element = array[l];\n    if (typeof element === 'string') {\n      const lcElement = transformCaseFunc(element);\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          array[l] = lcElement;\n        }\n\n        element = lcElement;\n      }\n    }\n\n    set[element] = true;\n  }\n\n  return set;\n}\n\n/* Shallow clone an object */\nexport function clone(object) {\n  const newObject = create(null);\n\n  for (const [property, value] of entries(object)) {\n    newObject[property] = value;\n  }\n\n  return newObject;\n}\n\n/* This method automatically checks if the prop is function\n * or getter and behaves accordingly. */\nfunction lookupGetter(object, prop) {\n  while (object !== null) {\n    const desc = getOwnPropertyDescriptor(object, prop);\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n\n    object = getPrototypeOf(object);\n  }\n\n  function fallbackValue(element) {\n    console.warn('fallback value for', element);\n    return null;\n  }\n\n  return fallbackValue;\n}\n\nexport {\n  // Array\n  arrayForEach,\n  arrayIndexOf,\n  arrayPop,\n  arrayPush,\n  arraySlice,\n  // Object\n  entries,\n  freeze,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n  isFrozen,\n  setPrototypeOf,\n  seal,\n  // RegExp\n  regExpTest,\n  // String\n  stringIndexOf,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringToString,\n  stringTrim,\n  // Errors\n  typeErrorCreate,\n  // Other\n  lookupGetter,\n};\n", "import { freeze } from './utils.js';\n\nexport const html = freeze([\n  'a',\n  'abbr',\n  'acronym',\n  'address',\n  'area',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'bdi',\n  'bdo',\n  'big',\n  'blink',\n  'blockquote',\n  'body',\n  'br',\n  'button',\n  'canvas',\n  'caption',\n  'center',\n  'cite',\n  'code',\n  'col',\n  'colgroup',\n  'content',\n  'data',\n  'datalist',\n  'dd',\n  'decorator',\n  'del',\n  'details',\n  'dfn',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'element',\n  'em',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'font',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hgroup',\n  'hr',\n  'html',\n  'i',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'label',\n  'legend',\n  'li',\n  'main',\n  'map',\n  'mark',\n  'marquee',\n  'menu',\n  'menuitem',\n  'meter',\n  'nav',\n  'nobr',\n  'ol',\n  'optgroup',\n  'option',\n  'output',\n  'p',\n  'picture',\n  'pre',\n  'progress',\n  'q',\n  'rp',\n  'rt',\n  'ruby',\n  's',\n  'samp',\n  'section',\n  'select',\n  'shadow',\n  'small',\n  'source',\n  'spacer',\n  'span',\n  'strike',\n  'strong',\n  'style',\n  'sub',\n  'summary',\n  'sup',\n  'table',\n  'tbody',\n  'td',\n  'template',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'tr',\n  'track',\n  'tt',\n  'u',\n  'ul',\n  'var',\n  'video',\n  'wbr',\n]);\n\n// SVG\nexport const svg = freeze([\n  'svg',\n  'a',\n  'altglyph',\n  'altglyphdef',\n  'altglyphitem',\n  'animatecolor',\n  'animatemotion',\n  'animatetransform',\n  'circle',\n  'clippath',\n  'defs',\n  'desc',\n  'ellipse',\n  'filter',\n  'font',\n  'g',\n  'glyph',\n  'glyphref',\n  'hkern',\n  'image',\n  'line',\n  'lineargradient',\n  'marker',\n  'mask',\n  'metadata',\n  'mpath',\n  'path',\n  'pattern',\n  'polygon',\n  'polyline',\n  'radialgradient',\n  'rect',\n  'stop',\n  'style',\n  'switch',\n  'symbol',\n  'text',\n  'textpath',\n  'title',\n  'tref',\n  'tspan',\n  'view',\n  'vkern',\n]);\n\nexport const svgFilters = freeze([\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n]);\n\n// List of SVG elements that are disallowed by default.\n// We still need to know them so that we can do namespace\n// checks properly in case one wants to add them to\n// allow-list.\nexport const svgDisallowed = freeze([\n  'animate',\n  'color-profile',\n  'cursor',\n  'discard',\n  'fedropshadow',\n  'font-face',\n  'font-face-format',\n  'font-face-name',\n  'font-face-src',\n  'font-face-uri',\n  'foreignobject',\n  'hatch',\n  'hatchpath',\n  'mesh',\n  'meshgradient',\n  'meshpatch',\n  'meshrow',\n  'missing-glyph',\n  'script',\n  'set',\n  'solidcolor',\n  'unknown',\n  'use',\n]);\n\nexport const mathMl = freeze([\n  'math',\n  'menclose',\n  'merror',\n  'mfenced',\n  'mfrac',\n  'mglyph',\n  'mi',\n  'mlabeledtr',\n  'mmultiscripts',\n  'mn',\n  'mo',\n  'mover',\n  'mpadded',\n  'mphantom',\n  'mroot',\n  'mrow',\n  'ms',\n  'mspace',\n  'msqrt',\n  'mstyle',\n  'msub',\n  'msup',\n  'msubsup',\n  'mtable',\n  'mtd',\n  'mtext',\n  'mtr',\n  'munder',\n  'munderover',\n  'mprescripts',\n]);\n\n// Similarly to SVG, we want to know all MathML elements,\n// even those that we disallow by default.\nexport const mathMlDisallowed = freeze([\n  'maction',\n  'maligngroup',\n  'malignmark',\n  'mlongdiv',\n  'mscarries',\n  'mscarry',\n  'msgroup',\n  'mstack',\n  'msline',\n  'msrow',\n  'semantics',\n  'annotation',\n  'annotation-xml',\n  'mprescripts',\n  'none',\n]);\n\nexport const text = freeze(['#text']);\n", "import { freeze } from './utils.js';\n\nexport const html = freeze([\n  'accept',\n  'action',\n  'align',\n  'alt',\n  'autocapitalize',\n  'autocomplete',\n  'autopictureinpicture',\n  'autoplay',\n  'background',\n  'bgcolor',\n  'border',\n  'capture',\n  'cellpadding',\n  'cellspacing',\n  'checked',\n  'cite',\n  'class',\n  'clear',\n  'color',\n  'cols',\n  'colspan',\n  'controls',\n  'controlslist',\n  'coords',\n  'crossorigin',\n  'datetime',\n  'decoding',\n  'default',\n  'dir',\n  'disabled',\n  'disablepictureinpicture',\n  'disableremoteplayback',\n  'download',\n  'draggable',\n  'enctype',\n  'enterkeyhint',\n  'face',\n  'for',\n  'headers',\n  'height',\n  'hidden',\n  'high',\n  'href',\n  'hreflang',\n  'id',\n  'inputmode',\n  'integrity',\n  'ismap',\n  'kind',\n  'label',\n  'lang',\n  'list',\n  'loading',\n  'loop',\n  'low',\n  'max',\n  'maxlength',\n  'media',\n  'method',\n  'min',\n  'minlength',\n  'multiple',\n  'muted',\n  'name',\n  'nonce',\n  'noshade',\n  'novalidate',\n  'nowrap',\n  'open',\n  'optimum',\n  'pattern',\n  'placeholder',\n  'playsinline',\n  'poster',\n  'preload',\n  'pubdate',\n  'radiogroup',\n  'readonly',\n  'rel',\n  'required',\n  'rev',\n  'reversed',\n  'role',\n  'rows',\n  'rowspan',\n  'spellcheck',\n  'scope',\n  'selected',\n  'shape',\n  'size',\n  'sizes',\n  'span',\n  'srclang',\n  'start',\n  'src',\n  'srcset',\n  'step',\n  'style',\n  'summary',\n  'tabindex',\n  'title',\n  'translate',\n  'type',\n  'usemap',\n  'valign',\n  'value',\n  'width',\n  'xmlns',\n  'slot',\n]);\n\nexport const svg = freeze([\n  'accent-height',\n  'accumulate',\n  'additive',\n  'alignment-baseline',\n  'ascent',\n  'attributename',\n  'attributetype',\n  'azimuth',\n  'basefrequency',\n  'baseline-shift',\n  'begin',\n  'bias',\n  'by',\n  'class',\n  'clip',\n  'clippathunits',\n  'clip-path',\n  'clip-rule',\n  'color',\n  'color-interpolation',\n  'color-interpolation-filters',\n  'color-profile',\n  'color-rendering',\n  'cx',\n  'cy',\n  'd',\n  'dx',\n  'dy',\n  'diffuseconstant',\n  'direction',\n  'display',\n  'divisor',\n  'dur',\n  'edgemode',\n  'elevation',\n  'end',\n  'fill',\n  'fill-opacity',\n  'fill-rule',\n  'filter',\n  'filterunits',\n  'flood-color',\n  'flood-opacity',\n  'font-family',\n  'font-size',\n  'font-size-adjust',\n  'font-stretch',\n  'font-style',\n  'font-variant',\n  'font-weight',\n  'fx',\n  'fy',\n  'g1',\n  'g2',\n  'glyph-name',\n  'glyphref',\n  'gradientunits',\n  'gradienttransform',\n  'height',\n  'href',\n  'id',\n  'image-rendering',\n  'in',\n  'in2',\n  'k',\n  'k1',\n  'k2',\n  'k3',\n  'k4',\n  'kerning',\n  'keypoints',\n  'keysplines',\n  'keytimes',\n  'lang',\n  'lengthadjust',\n  'letter-spacing',\n  'kernelmatrix',\n  'kernelunitlength',\n  'lighting-color',\n  'local',\n  'marker-end',\n  'marker-mid',\n  'marker-start',\n  'markerheight',\n  'markerunits',\n  'markerwidth',\n  'maskcontentunits',\n  'maskunits',\n  'max',\n  'mask',\n  'media',\n  'method',\n  'mode',\n  'min',\n  'name',\n  'numoctaves',\n  'offset',\n  'operator',\n  'opacity',\n  'order',\n  'orient',\n  'orientation',\n  'origin',\n  'overflow',\n  'paint-order',\n  'path',\n  'pathlength',\n  'patterncontentunits',\n  'patterntransform',\n  'patternunits',\n  'points',\n  'preservealpha',\n  'preserveaspectratio',\n  'primitiveunits',\n  'r',\n  'rx',\n  'ry',\n  'radius',\n  'refx',\n  'refy',\n  'repeatcount',\n  'repeatdur',\n  'restart',\n  'result',\n  'rotate',\n  'scale',\n  'seed',\n  'shape-rendering',\n  'specularconstant',\n  'specularexponent',\n  'spreadmethod',\n  'startoffset',\n  'stddeviation',\n  'stitchtiles',\n  'stop-color',\n  'stop-opacity',\n  'stroke-dasharray',\n  'stroke-dashoffset',\n  'stroke-linecap',\n  'stroke-linejoin',\n  'stroke-miterlimit',\n  'stroke-opacity',\n  'stroke',\n  'stroke-width',\n  'style',\n  'surfacescale',\n  'systemlanguage',\n  'tabindex',\n  'targetx',\n  'targety',\n  'transform',\n  'transform-origin',\n  'text-anchor',\n  'text-decoration',\n  'text-rendering',\n  'textlength',\n  'type',\n  'u1',\n  'u2',\n  'unicode',\n  'values',\n  'viewbox',\n  'visibility',\n  'version',\n  'vert-adv-y',\n  'vert-origin-x',\n  'vert-origin-y',\n  'width',\n  'word-spacing',\n  'wrap',\n  'writing-mode',\n  'xchannelselector',\n  'ychannelselector',\n  'x',\n  'x1',\n  'x2',\n  'xmlns',\n  'y',\n  'y1',\n  'y2',\n  'z',\n  'zoomandpan',\n]);\n\nexport const mathMl = freeze([\n  'accent',\n  'accentunder',\n  'align',\n  'bevelled',\n  'close',\n  'columnsalign',\n  'columnlines',\n  'columnspan',\n  'denomalign',\n  'depth',\n  'dir',\n  'display',\n  'displaystyle',\n  'encoding',\n  'fence',\n  'frame',\n  'height',\n  'href',\n  'id',\n  'largeop',\n  'length',\n  'linethickness',\n  'lspace',\n  'lquote',\n  'mathbackground',\n  'mathcolor',\n  'mathsize',\n  'mathvariant',\n  'maxsize',\n  'minsize',\n  'movablelimits',\n  'notation',\n  'numalign',\n  'open',\n  'rowalign',\n  'rowlines',\n  'rowspacing',\n  'rowspan',\n  'rspace',\n  'rquote',\n  'scriptlevel',\n  'scriptminsize',\n  'scriptsizemultiplier',\n  'selection',\n  'separator',\n  'separators',\n  'stretchy',\n  'subscriptshift',\n  'supscriptshift',\n  'symmetric',\n  'voffset',\n  'width',\n  'xmlns',\n]);\n\nexport const xml = freeze([\n  'xlink:href',\n  'xml:id',\n  'xlink:title',\n  'xml:space',\n  'xmlns:xlink',\n]);\n", "import { seal } from './utils.js';\n\n// eslint-disable-next-line unicorn/better-regex\nexport const MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\nexport const ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\nexport const TMPLIT_EXPR = seal(/\\${[\\w\\W]*}/gm);\nexport const DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\nexport const ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\nexport const IS_ALLOWED_URI = seal(\n  /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nexport const IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nexport const ATTR_WHITESPACE = seal(\n  /[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n);\nexport const DOCTYPE_NAME = seal(/^html$/i);\n", "import * as TAGS from './tags.js';\nimport * as ATTRS from './attrs.js';\nimport * as EXPRESSIONS from './regexp.js';\nimport {\n  addToSet,\n  clone,\n  entries,\n  freeze,\n  arrayForEach,\n  arrayPop,\n  arrayPush,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringToString,\n  stringIndexOf,\n  stringTrim,\n  regExpTest,\n  typeErrorCreate,\n  lookupGetter,\n} from './utils.js';\n\nconst getGlobal = () => (typeof window === 'undefined' ? null : window);\n\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param {?TrustedTypePolicyFactory} trustedTypes The policy factory.\n * @param {Document} document The document object (to determine policy name suffix)\n * @return {?TrustedTypePolicy} The policy created (or null, if Trusted Types\n * are not supported).\n */\nconst _createTrustedTypesPolicy = function (trustedTypes, document) {\n  if (\n    typeof trustedTypes !== 'object' ||\n    typeof trustedTypes.createPolicy !== 'function'\n  ) {\n    return null;\n  }\n\n  // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n  let suffix = null;\n  const ATTR_NAME = 'data-tt-policy-suffix';\n  if (\n    document.currentScript &&\n    document.currentScript.hasAttribute(ATTR_NAME)\n  ) {\n    suffix = document.currentScript.getAttribute(ATTR_NAME);\n  }\n\n  const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML(html) {\n        return html;\n      },\n      createScriptURL(scriptUrl) {\n        return scriptUrl;\n      },\n    });\n  } catch (_) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn(\n      'TrustedTypes policy ' + policyName + ' could not be created.'\n    );\n    return null;\n  }\n};\n\nfunction createDOMPurify(window = getGlobal()) {\n  const DOMPurify = (root) => createDOMPurify(root);\n\n  /**\n   * Version label, exposed for easier checks\n   * if DOMPurify is up to date or not\n   */\n  DOMPurify.version = VERSION;\n\n  /**\n   * Array of elements that DOMPurify removed during sanitation.\n   * Empty if nothing was removed.\n   */\n  DOMPurify.removed = [];\n\n  if (!window || !window.document || window.document.nodeType !== 9) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n\n    return DOMPurify;\n  }\n\n  const originalDocument = window.document;\n\n  let { document } = window;\n  const {\n    DocumentFragment,\n    HTMLTemplateElement,\n    Node,\n    Element,\n    NodeFilter,\n    NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n    HTMLFormElement,\n    DOMParser,\n    trustedTypes,\n  } = window;\n\n  const ElementPrototype = Element.prototype;\n\n  const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n  const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n  const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n  const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n  if (typeof HTMLTemplateElement === 'function') {\n    const template = document.createElement('template');\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n\n  const trustedTypesPolicy = _createTrustedTypesPolicy(\n    trustedTypes,\n    originalDocument\n  );\n  const emptyHTML = trustedTypesPolicy ? trustedTypesPolicy.createHTML('') : '';\n\n  const {\n    implementation,\n    createNodeIterator,\n    createDocumentFragment,\n    getElementsByTagName,\n  } = document;\n  const { importNode } = originalDocument;\n\n  let hooks = {};\n\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  DOMPurify.isSupported =\n    typeof entries === 'function' &&\n    typeof getParentNode === 'function' &&\n    implementation &&\n    typeof implementation.createHTMLDocument !== 'undefined';\n\n  const {\n    MUSTACHE_EXPR,\n    ERB_EXPR,\n    TMPLIT_EXPR,\n    DATA_ATTR,\n    ARIA_ATTR,\n    IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE,\n  } = EXPRESSIONS;\n\n  let { IS_ALLOWED_URI } = EXPRESSIONS;\n\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n\n  /* allowed element names */\n  let ALLOWED_TAGS = null;\n  const DEFAULT_ALLOWED_TAGS = addToSet({}, [\n    ...TAGS.html,\n    ...TAGS.svg,\n    ...TAGS.svgFilters,\n    ...TAGS.mathMl,\n    ...TAGS.text,\n  ]);\n\n  /* Allowed attribute names */\n  let ALLOWED_ATTR = null;\n  const DEFAULT_ALLOWED_ATTR = addToSet({}, [\n    ...ATTRS.html,\n    ...ATTRS.svg,\n    ...ATTRS.mathMl,\n    ...ATTRS.xml,\n  ]);\n\n  /*\n   * Configure how DOMPUrify should handle custom elements and their attributes as well as customized built-in elements.\n   * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n   * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n   * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n   */\n  let CUSTOM_ELEMENT_HANDLING = Object.seal(\n    Object.create(null, {\n      tagNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null,\n      },\n      attributeNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null,\n      },\n      allowCustomizedBuiltInElements: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: false,\n      },\n    })\n  );\n\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n  let FORBID_TAGS = null;\n\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n  let FORBID_ATTR = null;\n\n  /* Decide if ARIA attributes are okay */\n  let ALLOW_ARIA_ATTR = true;\n\n  /* Decide if custom data attributes are okay */\n  let ALLOW_DATA_ATTR = true;\n\n  /* Decide if unknown protocols are okay */\n  let ALLOW_UNKNOWN_PROTOCOLS = false;\n\n  /* Decide if self-closing tags in attributes are allowed.\n   * Usually removed due to a mXSS issue in jQuery 3.0 */\n  let ALLOW_SELF_CLOSE_IN_ATTR = true;\n\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n  let SAFE_FOR_TEMPLATES = false;\n\n  /* Decide if document with <html>... should be returned */\n  let WHOLE_DOCUMENT = false;\n\n  /* Track whether config is already set on this instance of DOMPurify. */\n  let SET_CONFIG = false;\n\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n  let FORCE_BODY = false;\n\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n  let RETURN_DOM = false;\n\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n  let RETURN_DOM_FRAGMENT = false;\n\n  /* Try to return a Trusted Type object instead of a string, return a string in\n   * case Trusted Types are not supported  */\n  let RETURN_TRUSTED_TYPE = false;\n\n  /* Output should be free from DOM clobbering attacks?\n   * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n   */\n  let SANITIZE_DOM = true;\n\n  /* Achieve full DOM Clobbering protection by isolating the namespace of named\n   * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n   *\n   * HTML/DOM spec rules that enable DOM Clobbering:\n   *   - Named Access on Window (§7.3.3)\n   *   - DOM Tree Accessors (§3.1.5)\n   *   - Form Element Parent-Child Relations (§4.10.3)\n   *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n   *   - HTMLCollection (§4.2.10.2)\n   *\n   * Namespace isolation is implemented by prefixing `id` and `name` attributes\n   * with a constant string, i.e., `user-content-`\n   */\n  let SANITIZE_NAMED_PROPS = false;\n  const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n\n  /* Keep element content when removing element? */\n  let KEEP_CONTENT = true;\n\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n  let IN_PLACE = false;\n\n  /* Allow usage of profiles like html, svg and mathMl */\n  let USE_PROFILES = {};\n\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n  let FORBID_CONTENTS = null;\n  const DEFAULT_FORBID_CONTENTS = addToSet({}, [\n    'annotation-xml',\n    'audio',\n    'colgroup',\n    'desc',\n    'foreignobject',\n    'head',\n    'iframe',\n    'math',\n    'mi',\n    'mn',\n    'mo',\n    'ms',\n    'mtext',\n    'noembed',\n    'noframes',\n    'noscript',\n    'plaintext',\n    'script',\n    'style',\n    'svg',\n    'template',\n    'thead',\n    'title',\n    'video',\n    'xmp',\n  ]);\n\n  /* Tags that are safe for data: URIs */\n  let DATA_URI_TAGS = null;\n  const DEFAULT_DATA_URI_TAGS = addToSet({}, [\n    'audio',\n    'video',\n    'img',\n    'source',\n    'image',\n    'track',\n  ]);\n\n  /* Attributes safe for values like \"javascript:\" */\n  let URI_SAFE_ATTRIBUTES = null;\n  const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, [\n    'alt',\n    'class',\n    'for',\n    'id',\n    'label',\n    'name',\n    'pattern',\n    'placeholder',\n    'role',\n    'summary',\n    'title',\n    'value',\n    'style',\n    'xmlns',\n  ]);\n\n  const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n  const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n  const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n  /* Document namespace */\n  let NAMESPACE = HTML_NAMESPACE;\n  let IS_EMPTY_INPUT = false;\n\n  /* Allowed XHTML+XML namespaces */\n  let ALLOWED_NAMESPACES = null;\n  const DEFAULT_ALLOWED_NAMESPACES = addToSet(\n    {},\n    [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE],\n    stringToString\n  );\n\n  /* Parsing of strict XHTML documents */\n  let PARSER_MEDIA_TYPE;\n  const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n  const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n  let transformCaseFunc;\n\n  /* Keep a reference to config to pass to hooks */\n  let CONFIG = null;\n\n  /* Ideally, do not touch anything below this line */\n  /* ______________________________________________ */\n\n  const formElement = document.createElement('form');\n\n  const isRegexOrFunction = function (testValue) {\n    return testValue instanceof RegExp || testValue instanceof Function;\n  };\n\n  /**\n   * _parseConfig\n   *\n   * @param  {Object} cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n  const _parseConfig = function (cfg) {\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n\n    /* Shield configuration object from tampering */\n    if (!cfg || typeof cfg !== 'object') {\n      cfg = {};\n    }\n\n    /* Shield configuration object from prototype pollution */\n    cfg = clone(cfg);\n\n    PARSER_MEDIA_TYPE =\n      // eslint-disable-next-line unicorn/prefer-includes\n      SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1\n        ? (PARSER_MEDIA_TYPE = DEFAULT_PARSER_MEDIA_TYPE)\n        : (PARSER_MEDIA_TYPE = cfg.PARSER_MEDIA_TYPE);\n\n    // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n    transformCaseFunc =\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml'\n        ? stringToString\n        : stringToLowerCase;\n\n    /* Set configuration parameters */\n    ALLOWED_TAGS =\n      'ALLOWED_TAGS' in cfg\n        ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc)\n        : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR =\n      'ALLOWED_ATTR' in cfg\n        ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc)\n        : DEFAULT_ALLOWED_ATTR;\n    ALLOWED_NAMESPACES =\n      'ALLOWED_NAMESPACES' in cfg\n        ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString)\n        : DEFAULT_ALLOWED_NAMESPACES;\n    URI_SAFE_ATTRIBUTES =\n      'ADD_URI_SAFE_ATTR' in cfg\n        ? addToSet(\n            clone(DEFAULT_URI_SAFE_ATTRIBUTES), // eslint-disable-line indent\n            cfg.ADD_URI_SAFE_ATTR, // eslint-disable-line indent\n            transformCaseFunc // eslint-disable-line indent\n          ) // eslint-disable-line indent\n        : DEFAULT_URI_SAFE_ATTRIBUTES;\n    DATA_URI_TAGS =\n      'ADD_DATA_URI_TAGS' in cfg\n        ? addToSet(\n            clone(DEFAULT_DATA_URI_TAGS), // eslint-disable-line indent\n            cfg.ADD_DATA_URI_TAGS, // eslint-disable-line indent\n            transformCaseFunc // eslint-disable-line indent\n          ) // eslint-disable-line indent\n        : DEFAULT_DATA_URI_TAGS;\n    FORBID_CONTENTS =\n      'FORBID_CONTENTS' in cfg\n        ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc)\n        : DEFAULT_FORBID_CONTENTS;\n    FORBID_TAGS =\n      'FORBID_TAGS' in cfg\n        ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc)\n        : {};\n    FORBID_ATTR =\n      'FORBID_ATTR' in cfg\n        ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc)\n        : {};\n    USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n    ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n    SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n    IS_ALLOWED_URI = cfg.ALLOWED_URI_REGEXP || EXPRESSIONS.IS_ALLOWED_URI;\n    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n    CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)\n    ) {\n      CUSTOM_ELEMENT_HANDLING.tagNameCheck =\n        cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n    }\n\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)\n    ) {\n      CUSTOM_ELEMENT_HANDLING.attributeNameCheck =\n        cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n    }\n\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements ===\n        'boolean'\n    ) {\n      CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements =\n        cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n    }\n\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n\n    /* Parse profile info */\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, [...TAGS.text]);\n      ALLOWED_ATTR = [];\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, TAGS.html);\n        addToSet(ALLOWED_ATTR, ATTRS.html);\n      }\n\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, TAGS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, TAGS.svgFilters);\n        addToSet(ALLOWED_ATTR, ATTRS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, TAGS.mathMl);\n        addToSet(ALLOWED_ATTR, ATTRS.mathMl);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n    }\n\n    /* Merge configuration parameters */\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n    }\n\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n    }\n\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n    }\n\n    if (cfg.FORBID_CONTENTS) {\n      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n        FORBID_CONTENTS = clone(FORBID_CONTENTS);\n      }\n\n      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n    }\n\n    /* Add #text in case KEEP_CONTENT is set to true */\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n      delete FORBID_TAGS.tbody;\n    }\n\n    // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n    if (freeze) {\n      freeze(cfg);\n    }\n\n    CONFIG = cfg;\n  };\n\n  const MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, [\n    'mi',\n    'mo',\n    'mn',\n    'ms',\n    'mtext',\n  ]);\n\n  const HTML_INTEGRATION_POINTS = addToSet({}, [\n    'foreignobject',\n    'desc',\n    'title',\n    'annotation-xml',\n  ]);\n\n  // Certain elements are allowed in both SVG and HTML\n  // namespace. We need to specify them explicitly\n  // so that they don't get erroneously deleted from\n  // HTML namespace.\n  const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, [\n    'title',\n    'style',\n    'font',\n    'a',\n    'script',\n  ]);\n\n  /* Keep track of all possible SVG and MathML tags\n   * so that we can perform the namespace checks\n   * correctly. */\n  const ALL_SVG_TAGS = addToSet({}, TAGS.svg);\n  addToSet(ALL_SVG_TAGS, TAGS.svgFilters);\n  addToSet(ALL_SVG_TAGS, TAGS.svgDisallowed);\n\n  const ALL_MATHML_TAGS = addToSet({}, TAGS.mathMl);\n  addToSet(ALL_MATHML_TAGS, TAGS.mathMlDisallowed);\n\n  /**\n   *\n   *\n   * @param  {Element} element a DOM element whose namespace is being checked\n   * @returns {boolean} Return false if the element has a\n   *  namespace that a spec-compliant parser would never\n   *  return. Return true otherwise.\n   */\n  const _checkValidNamespace = function (element) {\n    let parent = getParentNode(element);\n\n    // In JSDOM, if we're inside shadow DOM, then parentNode\n    // can be null. We just simulate parent in this case.\n    if (!parent || !parent.tagName) {\n      parent = {\n        namespaceURI: NAMESPACE,\n        tagName: 'template',\n      };\n    }\n\n    const tagName = stringToLowerCase(element.tagName);\n    const parentTagName = stringToLowerCase(parent.tagName);\n\n    if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return false;\n    }\n\n    if (element.namespaceURI === SVG_NAMESPACE) {\n      // The only way to switch from HTML namespace to SVG\n      // is via <svg>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'svg';\n      }\n\n      // The only way to switch from MathML to SVG is via`\n      // svg if parent is either <annotation-xml> or MathML\n      // text integration points.\n      if (parent.namespaceURI === MATHML_NAMESPACE) {\n        return (\n          tagName === 'svg' &&\n          (parentTagName === 'annotation-xml' ||\n            MATHML_TEXT_INTEGRATION_POINTS[parentTagName])\n        );\n      }\n\n      // We only allow elements that are defined in SVG\n      // spec. All others are disallowed in SVG namespace.\n      return Boolean(ALL_SVG_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === MATHML_NAMESPACE) {\n      // The only way to switch from HTML namespace to MathML\n      // is via <math>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'math';\n      }\n\n      // The only way to switch from SVG to MathML is via\n      // <math> and HTML integration points\n      if (parent.namespaceURI === SVG_NAMESPACE) {\n        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n      }\n\n      // We only allow elements that are defined in MathML\n      // spec. All others are disallowed in MathML namespace.\n      return Boolean(ALL_MATHML_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === HTML_NAMESPACE) {\n      // The only way to switch from SVG to HTML is via\n      // HTML integration points, and from MathML to HTML\n      // is via MathML text integration points\n      if (\n        parent.namespaceURI === SVG_NAMESPACE &&\n        !HTML_INTEGRATION_POINTS[parentTagName]\n      ) {\n        return false;\n      }\n\n      if (\n        parent.namespaceURI === MATHML_NAMESPACE &&\n        !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]\n      ) {\n        return false;\n      }\n\n      // We disallow tags that are specific for MathML\n      // or SVG and should never appear in HTML namespace\n      return (\n        !ALL_MATHML_TAGS[tagName] &&\n        (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName])\n      );\n    }\n\n    // For XHTML and XML documents that support custom namespaces\n    if (\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml' &&\n      ALLOWED_NAMESPACES[element.namespaceURI]\n    ) {\n      return true;\n    }\n\n    // The code should never reach this place (this means\n    // that the element somehow got namespace that is not\n    // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n    // Return false just in case.\n    return false;\n  };\n\n  /**\n   * _forceRemove\n   *\n   * @param  {Node} node a DOM node\n   */\n  const _forceRemove = function (node) {\n    arrayPush(DOMPurify.removed, { element: node });\n    try {\n      // eslint-disable-next-line unicorn/prefer-dom-node-remove\n      node.parentNode.removeChild(node);\n    } catch (_) {\n      node.remove();\n    }\n  };\n\n  /**\n   * _removeAttribute\n   *\n   * @param  {String} name an Attribute name\n   * @param  {Node} node a DOM node\n   */\n  const _removeAttribute = function (name, node) {\n    try {\n      arrayPush(DOMPurify.removed, {\n        attribute: node.getAttributeNode(name),\n        from: node,\n      });\n    } catch (_) {\n      arrayPush(DOMPurify.removed, {\n        attribute: null,\n        from: node,\n      });\n    }\n\n    node.removeAttribute(name);\n\n    // We void attribute values for unremovable \"is\"\" attributes\n    if (name === 'is' && !ALLOWED_ATTR[name]) {\n      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n        try {\n          _forceRemove(node);\n        } catch (_) {}\n      } else {\n        try {\n          node.setAttribute(name, '');\n        } catch (_) {}\n      }\n    }\n  };\n\n  /**\n   * _initDocument\n   *\n   * @param  {String} dirty a string of dirty markup\n   * @return {Document} a DOM, filled with the dirty markup\n   */\n  const _initDocument = function (dirty) {\n    /* Create a HTML document */\n    let doc;\n    let leadingWhitespace;\n\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n      leadingWhitespace = matches && matches[0];\n    }\n\n    if (\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml' &&\n      NAMESPACE === HTML_NAMESPACE\n    ) {\n      // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n      dirty =\n        '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' +\n        dirty +\n        '</body></html>';\n    }\n\n    const dirtyPayload = trustedTypesPolicy\n      ? trustedTypesPolicy.createHTML(dirty)\n      : dirty;\n    /*\n     * Use the DOMParser API by default, fallback later if needs be\n     * DOMParser not work for svg when has multiple root element.\n     */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n      } catch (_) {}\n    }\n\n    /* Use createHTMLDocument in case DOMParser is not available */\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createDocument(NAMESPACE, 'template', null);\n      try {\n        doc.documentElement.innerHTML = IS_EMPTY_INPUT\n          ? emptyHTML\n          : dirtyPayload;\n      } catch (_) {\n        // Syntax error if dirtyPayload is invalid xml\n      }\n    }\n\n    const body = doc.body || doc.documentElement;\n\n    if (dirty && leadingWhitespace) {\n      body.insertBefore(\n        document.createTextNode(leadingWhitespace),\n        body.childNodes[0] || null\n      );\n    }\n\n    /* Work on whole document or just its body */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      return getElementsByTagName.call(\n        doc,\n        WHOLE_DOCUMENT ? 'html' : 'body'\n      )[0];\n    }\n\n    return WHOLE_DOCUMENT ? doc.documentElement : body;\n  };\n\n  /**\n   * _createIterator\n   *\n   * @param  {Document} root document/fragment to create iterator for\n   * @return {Iterator} iterator instance\n   */\n  const _createIterator = function (root) {\n    return createNodeIterator.call(\n      root.ownerDocument || root,\n      root,\n      // eslint-disable-next-line no-bitwise\n      NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT,\n      null,\n      false\n    );\n  };\n\n  /**\n   * _isClobbered\n   *\n   * @param  {Node} elm element to check for clobbering attacks\n   * @return {Boolean} true if clobbered, false if safe\n   */\n  const _isClobbered = function (elm) {\n    return (\n      elm instanceof HTMLFormElement &&\n      (typeof elm.nodeName !== 'string' ||\n        typeof elm.textContent !== 'string' ||\n        typeof elm.removeChild !== 'function' ||\n        !(elm.attributes instanceof NamedNodeMap) ||\n        typeof elm.removeAttribute !== 'function' ||\n        typeof elm.setAttribute !== 'function' ||\n        typeof elm.namespaceURI !== 'string' ||\n        typeof elm.insertBefore !== 'function' ||\n        typeof elm.hasChildNodes !== 'function')\n    );\n  };\n\n  /**\n   * _isNode\n   *\n   * @param  {Node} obj object to check whether it's a DOM node\n   * @return {Boolean} true is object is a DOM node\n   */\n  const _isNode = function (object) {\n    return typeof Node === 'object'\n      ? object instanceof Node\n      : object &&\n          typeof object === 'object' &&\n          typeof object.nodeType === 'number' &&\n          typeof object.nodeName === 'string';\n  };\n\n  /**\n   * _executeHook\n   * Execute user configurable hooks\n   *\n   * @param  {String} entryPoint  Name of the hook's entry point\n   * @param  {Node} currentNode node to work on with the hook\n   * @param  {Object} data additional hook parameters\n   */\n  const _executeHook = function (entryPoint, currentNode, data) {\n    if (!hooks[entryPoint]) {\n      return;\n    }\n\n    arrayForEach(hooks[entryPoint], (hook) => {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  };\n\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   *\n   * @param   {Node} currentNode to check for permission to exist\n   * @return  {Boolean} true if node was killed, false if left alive\n   */\n  const _sanitizeElements = function (currentNode) {\n    let content;\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeElements', currentNode, null);\n\n    /* Check if element is clobbered or can clobber */\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Now let's check the element's type and name */\n    const tagName = transformCaseFunc(currentNode.nodeName);\n\n    /* Execute a hook if present */\n    _executeHook('uponSanitizeElement', currentNode, {\n      tagName,\n      allowedTags: ALLOWED_TAGS,\n    });\n\n    /* Detect mXSS attempts abusing namespace confusion */\n    if (\n      currentNode.hasChildNodes() &&\n      !_isNode(currentNode.firstElementChild) &&\n      (!_isNode(currentNode.content) ||\n        !_isNode(currentNode.content.firstElementChild)) &&\n      regExpTest(/<[/\\w]/g, currentNode.innerHTML) &&\n      regExpTest(/<[/\\w]/g, currentNode.textContent)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Remove element if anything forbids its presence */\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Check if we have a custom element to handle */\n      if (!FORBID_TAGS[tagName] && _basicCustomElementTest(tagName)) {\n        if (\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n          regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)\n        )\n          return false;\n        if (\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)\n        )\n          return false;\n      }\n\n      /* Keep content except for bad-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n        const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n        const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n\n        if (childNodes && parentNode) {\n          const childCount = childNodes.length;\n\n          for (let i = childCount - 1; i >= 0; --i) {\n            parentNode.insertBefore(\n              cloneNode(childNodes[i], true),\n              getNextSibling(currentNode)\n            );\n          }\n        }\n      }\n\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Check whether element has a valid namespace */\n    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Make sure that older browsers don't get noscript mXSS */\n    if (\n      (tagName === 'noscript' || tagName === 'noembed') &&\n      regExpTest(/<\\/no(script|embed)/i, currentNode.innerHTML)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Sanitize element content to be template-safe */\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n      content = stringReplace(content, MUSTACHE_EXPR, ' ');\n      content = stringReplace(content, ERB_EXPR, ' ');\n      content = stringReplace(content, TMPLIT_EXPR, ' ');\n      if (currentNode.textContent !== content) {\n        arrayPush(DOMPurify.removed, { element: currentNode.cloneNode() });\n        currentNode.textContent = content;\n      }\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeElements', currentNode, null);\n\n    return false;\n  };\n\n  /**\n   * _isValidAttribute\n   *\n   * @param  {string} lcTag Lowercase tag name of containing element.\n   * @param  {string} lcName Lowercase attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n  const _isValidAttribute = function (lcTag, lcName, value) {\n    /* Make sure attribute cannot clobber */\n    if (\n      SANITIZE_DOM &&\n      (lcName === 'id' || lcName === 'name') &&\n      (value in document || value in formElement)\n    ) {\n      return false;\n    }\n\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n    if (\n      ALLOW_DATA_ATTR &&\n      !FORBID_ATTR[lcName] &&\n      regExpTest(DATA_ATTR, lcName)\n    ) {\n      // This attribute is safe\n    } else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) {\n      // This attribute is safe\n      /* Otherwise, check the name is permitted */\n    } else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      if (\n        // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n        // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n        (_basicCustomElementTest(lcTag) &&\n          ((CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag)) ||\n            (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag))) &&\n          ((CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName)) ||\n            (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)))) ||\n        // Alternative, second condition checks if it's an `is`-attribute, AND\n        // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        (lcName === 'is' &&\n          CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements &&\n          ((CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value)) ||\n            (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))))\n      ) {\n        // If user has supplied a regexp or function in CUSTOM_ELEMENT_HANDLING.tagNameCheck, we need to also allow derived custom elements using the same tagName test.\n        // Additionally, we need to allow attributes passing the CUSTOM_ELEMENT_HANDLING.attributeNameCheck user has configured, as custom elements can define these at their own discretion.\n      } else {\n        return false;\n      }\n      /* Check value is safe. First, is attr inert? If so, is safe */\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) {\n      // This attribute is safe\n      /* Check no script, data or unknown possibly unsafe URI\n        unless we know URI values are safe for that attribute */\n    } else if (\n      regExpTest(IS_ALLOWED_URI, stringReplace(value, ATTR_WHITESPACE, ''))\n    ) {\n      // This attribute is safe\n      /* Keep image data URIs alive if src/xlink:href is allowed */\n      /* Further prevent gadget XSS for dynamically built script tags */\n    } else if (\n      (lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') &&\n      lcTag !== 'script' &&\n      stringIndexOf(value, 'data:') === 0 &&\n      DATA_URI_TAGS[lcTag]\n    ) {\n      // This attribute is safe\n      /* Allow unknown protocols: This provides support for links that\n        are handled by protocol handlers which may be unknown ahead of\n        time, e.g. fb:, spotify: */\n    } else if (\n      ALLOW_UNKNOWN_PROTOCOLS &&\n      !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))\n    ) {\n      // This attribute is safe\n      /* Check for binary attributes */\n      // eslint-disable-next-line no-negated-condition\n    } else if (!value) {\n      // Binary attributes are safe at this point\n      /* Anything else, presume unsafe, do not add it back */\n    } else {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * _basicCustomElementCheck\n   * checks if at least one dash is included in tagName, and it's not the first char\n   * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n   * @param {string} tagName name of the tag of the node to sanitize\n   */\n  const _basicCustomElementTest = function (tagName) {\n    return tagName.indexOf('-') > 0;\n  };\n\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param  {Node} currentNode to sanitize\n   */\n  const _sanitizeAttributes = function (currentNode) {\n    let attr;\n    let value;\n    let lcName;\n    let l;\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeAttributes', currentNode, null);\n\n    const { attributes } = currentNode;\n\n    /* Check if we have attributes; if not we might have a text node */\n    if (!attributes) {\n      return;\n    }\n\n    const hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR,\n    };\n    l = attributes.length;\n\n    /* Go backwards over all attributes; safely remove bad ones */\n    while (l--) {\n      attr = attributes[l];\n      const { name, namespaceURI } = attr;\n      value = name === 'value' ? attr.value : stringTrim(attr.value);\n      lcName = transformCaseFunc(name);\n\n      /* Execute a hook if present */\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n      _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n      value = hookEvent.attrValue;\n      /* Did the hooks approve of the attribute? */\n      if (hookEvent.forceKeepAttr) {\n        continue;\n      }\n\n      /* Remove attribute */\n      _removeAttribute(name, currentNode);\n\n      /* Did the hooks approve of the attribute? */\n      if (!hookEvent.keepAttr) {\n        continue;\n      }\n\n      /* Work around a security issue in jQuery 3.0 */\n      if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\/>/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n\n      /* Sanitize attribute content to be template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        value = stringReplace(value, MUSTACHE_EXPR, ' ');\n        value = stringReplace(value, ERB_EXPR, ' ');\n        value = stringReplace(value, TMPLIT_EXPR, ' ');\n      }\n\n      /* Is `value` valid for this attribute? */\n      const lcTag = transformCaseFunc(currentNode.nodeName);\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        continue;\n      }\n\n      /* Full DOM Clobbering protection via namespace isolation,\n       * Prefix id and name attributes with `user-content-`\n       */\n      if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n        // Remove the attribute with this value\n        _removeAttribute(name, currentNode);\n\n        // Prefix the value and later re-create the attribute with the sanitized value\n        value = SANITIZE_NAMED_PROPS_PREFIX + value;\n      }\n\n      /* Handle attributes that require Trusted Types */\n      if (\n        trustedTypesPolicy &&\n        typeof trustedTypes === 'object' &&\n        typeof trustedTypes.getAttributeType === 'function'\n      ) {\n        if (namespaceURI) {\n          /* Namespaces are not yet supported, see https://bugs.chromium.org/p/chromium/issues/detail?id=1305293 */\n        } else {\n          switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n            case 'TrustedHTML':\n              value = trustedTypesPolicy.createHTML(value);\n              break;\n            case 'TrustedScriptURL':\n              value = trustedTypesPolicy.createScriptURL(value);\n              break;\n            default:\n              break;\n          }\n        }\n      }\n\n      /* Handle invalid data-* attribute set by try-catching it */\n      try {\n        if (namespaceURI) {\n          currentNode.setAttributeNS(namespaceURI, name, value);\n        } else {\n          /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n          currentNode.setAttribute(name, value);\n        }\n\n        arrayPop(DOMPurify.removed);\n      } catch (_) {}\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeAttributes', currentNode, null);\n  };\n\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param  {DocumentFragment} fragment to iterate over recursively\n   */\n  const _sanitizeShadowDOM = function (fragment) {\n    let shadowNode;\n    const shadowIterator = _createIterator(fragment);\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeShadowDOM', fragment, null);\n\n    while ((shadowNode = shadowIterator.nextNode())) {\n      /* Execute a hook if present */\n      _executeHook('uponSanitizeShadowNode', shadowNode, null);\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(shadowNode)) {\n        continue;\n      }\n\n      /* Deep shadow DOM detected */\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(shadowNode);\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeShadowDOM', fragment, null);\n  };\n\n  /**\n   * Sanitize\n   * Public method providing core sanitation functionality\n   *\n   * @param {String|Node} dirty string or DOM node\n   * @param {Object} configuration object\n   */\n  // eslint-disable-next-line complexity\n  DOMPurify.sanitize = function (dirty, cfg = {}) {\n    let body;\n    let importedNode;\n    let currentNode;\n    let returnNode;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n    IS_EMPTY_INPUT = !dirty;\n    if (IS_EMPTY_INPUT) {\n      dirty = '<!-->';\n    }\n\n    /* Stringify, in case dirty is an object */\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      // eslint-disable-next-line no-negated-condition\n      if (typeof dirty.toString !== 'function') {\n        throw typeErrorCreate('toString is not a function');\n      } else {\n        dirty = dirty.toString();\n        if (typeof dirty !== 'string') {\n          throw typeErrorCreate('dirty is not a string, aborting');\n        }\n      }\n    }\n\n    /* Return dirty HTML if DOMPurify cannot run */\n    if (!DOMPurify.isSupported) {\n      return dirty;\n    }\n\n    /* Assign config vars */\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n\n    /* Clean up removed elements */\n    DOMPurify.removed = [];\n\n    /* Check if dirty is correctly typed for IN_PLACE */\n    if (typeof dirty === 'string') {\n      IN_PLACE = false;\n    }\n\n    if (IN_PLACE) {\n      /* Do some early pre-sanitization to avoid unsafe root nodes */\n      if (dirty.nodeName) {\n        const tagName = transformCaseFunc(dirty.nodeName);\n        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n          throw typeErrorCreate(\n            'root node is forbidden and cannot be sanitized in-place'\n          );\n        }\n      }\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!---->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n      if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-dom-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (\n        !RETURN_DOM &&\n        !SAFE_FOR_TEMPLATES &&\n        !WHOLE_DOCUMENT &&\n        // eslint-disable-next-line unicorn/prefer-includes\n        dirty.indexOf('<') === -1\n      ) {\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE\n          ? trustedTypesPolicy.createHTML(dirty)\n          : dirty;\n      }\n\n      /* Initialize the document to work on */\n      body = _initDocument(dirty);\n\n      /* Check we have a DOM node from the data */\n      if (!body) {\n        return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n      }\n    }\n\n    /* Remove first element node (ours) if FORCE_BODY is set */\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n\n    /* Get node iterator */\n    const nodeIterator = _createIterator(IN_PLACE ? dirty : body);\n\n    /* Now start iterating over the created document */\n    while ((currentNode = nodeIterator.nextNode())) {\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(currentNode)) {\n        continue;\n      }\n\n      /* Shadow DOM detected, sanitize it */\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(currentNode);\n    }\n\n    /* If we sanitized `dirty` in-place, return it. */\n    if (IN_PLACE) {\n      return dirty;\n    }\n\n    /* Return sanitized string or DOM */\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n\n      if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmod) {\n        /*\n          AdoptNode() is not used because internal state is not reset\n          (e.g. the past names map of a HTMLFormElement), this is safe\n          in theory but we would rather not risk another attack vector.\n          The state that is cloned by importNode() is explicitly defined\n          by the specs.\n        */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n\n      return returnNode;\n    }\n\n    let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n\n    /* Serialize doctype if allowed */\n    if (\n      WHOLE_DOCUMENT &&\n      ALLOWED_TAGS['!doctype'] &&\n      body.ownerDocument &&\n      body.ownerDocument.doctype &&\n      body.ownerDocument.doctype.name &&\n      regExpTest(EXPRESSIONS.DOCTYPE_NAME, body.ownerDocument.doctype.name)\n    ) {\n      serializedHTML =\n        '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n    }\n\n    /* Sanitize final string template-safe */\n    if (SAFE_FOR_TEMPLATES) {\n      serializedHTML = stringReplace(serializedHTML, MUSTACHE_EXPR, ' ');\n      serializedHTML = stringReplace(serializedHTML, ERB_EXPR, ' ');\n      serializedHTML = stringReplace(serializedHTML, TMPLIT_EXPR, ' ');\n    }\n\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE\n      ? trustedTypesPolicy.createHTML(serializedHTML)\n      : serializedHTML;\n  };\n\n  /**\n   * Public method to set the configuration once\n   * setConfig\n   *\n   * @param {Object} cfg configuration object\n   */\n  DOMPurify.setConfig = function (cfg) {\n    _parseConfig(cfg);\n    SET_CONFIG = true;\n  };\n\n  /**\n   * Public method to remove the configuration\n   * clearConfig\n   *\n   */\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n\n  /**\n   * Public method to check if an attribute value is valid.\n   * Uses last set config, if any. Otherwise, uses config defaults.\n   * isValidAttribute\n   *\n   * @param  {string} tag Tag name of containing element.\n   * @param  {string} attr Attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n   */\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n\n    const lcTag = transformCaseFunc(tag);\n    const lcName = transformCaseFunc(attr);\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n\n  /**\n   * AddHook\n   * Public method to add DOMPurify hooks\n   *\n   * @param {String} entryPoint entry point for the hook to add\n   * @param {Function} hookFunction function to execute\n   */\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n\n    hooks[entryPoint] = hooks[entryPoint] || [];\n    arrayPush(hooks[entryPoint], hookFunction);\n  };\n\n  /**\n   * RemoveHook\n   * Public method to remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if more are present)\n   *\n   * @param {String} entryPoint entry point for the hook to remove\n   * @return {Function} removed(popped) hook\n   */\n  DOMPurify.removeHook = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      return arrayPop(hooks[entryPoint]);\n    }\n  };\n\n  /**\n   * RemoveHooks\n   * Public method to remove all DOMPurify hooks at a given entryPoint\n   *\n   * @param  {String} entryPoint entry point for the hooks to remove\n   */\n  DOMPurify.removeHooks = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      hooks[entryPoint] = [];\n    }\n  };\n\n  /**\n   * RemoveAllHooks\n   * Public method to remove all DOMPurify hooks\n   *\n   */\n  DOMPurify.removeAllHooks = function () {\n    hooks = {};\n  };\n\n  return DOMPurify;\n}\n\nexport default createDOMPurify();\n", "/**\n * dompurify.js\n */\n\nexport { default } from 'dompurify';\n", "/**\n * common.js\n */\n\n/* constants */\nconst TYPE_FROM = 8;\nconst TYPE_TO = -1;\n\n/**\n * get type\n *\n * @param {*} o - object to check\n * @returns {string} - type of object\n */\nexport const getType = o =>\n  Object.prototype.toString.call(o).slice(TYPE_FROM, TYPE_TO);\n\n/**\n * is string\n *\n * @param {*} o - object to check\n * @returns {boolean} - result\n */\nexport const isString = o => typeof o === 'string' || o instanceof String;\n", "[7,8,9,10,11,12,13,27,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255]\n", "[\"aaa\",\"aaas\",\"about\",\"acap\",\"acct\",\"acd\",\"acr\",\"adiumxtra\",\"adt\",\"afp\",\"afs\",\"aim\",\"amss\",\"android\",\"appdata\",\"apt\",\"ar\",\"ark\",\"attachment\",\"aw\",\"barion\",\"beshare\",\"bitcoin\",\"bitcoincash\",\"blob\",\"bolo\",\"browserext\",\"cabal\",\"calculator\",\"callto\",\"cap\",\"cast\",\"casts\",\"chrome\",\"chrome-extension\",\"cid\",\"coap\",\"coaps\",\"com-eventbrite-attendee\",\"content\",\"content-type\",\"crid\",\"cstr\",\"cvs\",\"dab\",\"dat\",\"data\",\"dav\",\"dhttp\",\"diaspora\",\"dict\",\"did\",\"dis\",\"dlna-playcontainer\",\"dlna-playsingle\",\"dns\",\"dntp\",\"doi\",\"dpp\",\"drm\",\"dtmi\",\"dtn\",\"dvb\",\"dvx\",\"dweb\",\"ed2k\",\"eid\",\"elsi\",\"embedded\",\"ens\",\"ethereum\",\"example\",\"facetime\",\"feed\",\"feedready\",\"fido\",\"file\",\"finger\",\"first-run-pen-experience\",\"fish\",\"fm\",\"ftp\",\"fuchsia-pkg\",\"geo\",\"gg\",\"git\",\"gitoid\",\"gizmoproject\",\"go\",\"gopher\",\"graph\",\"gtalk\",\"h323\",\"ham\",\"hcap\",\"hcp\",\"http\",\"https\",\"hxxp\",\"hxxps\",\"hydrazone\",\"hyper\",\"iax\",\"icap\",\"icon\",\"im\",\"imap\",\"info\",\"iotdisco\",\"ipfs\",\"ipn\",\"ipns\",\"ipp\",\"ipps\",\"irc\",\"irc6\",\"ircs\",\"iris\",\"iris.beep\",\"iris.lwz\",\"iris.xpc\",\"iris.xpcs\",\"isostore\",\"itms\",\"jabber\",\"jar\",\"jms\",\"keyparc\",\"lastfm\",\"lbry\",\"ldap\",\"ldaps\",\"leaptofrogans\",\"lorawan\",\"lpa\",\"lvlt\",\"magnet\",\"mailto\",\"maps\",\"market\",\"matrix\",\"message\",\"microsoft.windows.camera\",\"microsoft.windows.camera.multipicker\",\"microsoft.windows.camera.picker\",\"mid\",\"mms\",\"mongodb\",\"moz\",\"moz-extension\",\"ms-access\",\"ms-appinstaller\",\"ms-browser-extension\",\"ms-calculator\",\"ms-drive-to\",\"ms-enrollment\",\"ms-excel\",\"ms-eyecontrolspeech\",\"ms-gamebarservices\",\"ms-gamingoverlay\",\"ms-getoffice\",\"ms-help\",\"ms-infopath\",\"ms-inputapp\",\"ms-lockscreencomponent-config\",\"ms-media-stream-id\",\"ms-meetnow\",\"ms-mixedrealitycapture\",\"ms-mobileplans\",\"ms-newsandinterests\",\"ms-officeapp\",\"ms-people\",\"ms-powerpoint\",\"ms-project\",\"ms-publisher\",\"ms-remotedesktop-launch\",\"ms-restoretabcompanion\",\"ms-screenclip\",\"ms-screensketch\",\"ms-search\",\"ms-search-repair\",\"ms-secondary-screen-controller\",\"ms-secondary-screen-setup\",\"ms-settings\",\"ms-settings-airplanemode\",\"ms-settings-bluetooth\",\"ms-settings-camera\",\"ms-settings-cellular\",\"ms-settings-cloudstorage\",\"ms-settings-connectabledevices\",\"ms-settings-displays-topology\",\"ms-settings-emailandaccounts\",\"ms-settings-language\",\"ms-settings-location\",\"ms-settings-lock\",\"ms-settings-nfctransactions\",\"ms-settings-notifications\",\"ms-settings-power\",\"ms-settings-privacy\",\"ms-settings-proximity\",\"ms-settings-screenrotation\",\"ms-settings-wifi\",\"ms-settings-workplace\",\"ms-spd\",\"ms-stickers\",\"ms-sttoverlay\",\"ms-transit-to\",\"ms-useractivityset\",\"ms-virtualtouchpad\",\"ms-visio\",\"ms-walk-to\",\"ms-whiteboard\",\"ms-whiteboard-cmd\",\"ms-word\",\"msnim\",\"msrp\",\"msrps\",\"mss\",\"mt\",\"mtqp\",\"mumble\",\"mupdate\",\"mvn\",\"news\",\"nfs\",\"ni\",\"nih\",\"nntp\",\"notes\",\"num\",\"ocf\",\"oid\",\"onenote\",\"onenote-cmd\",\"opaquelocktoken\",\"openpgp4fpr\",\"otpauth\",\"palm\",\"paparazzi\",\"payment\",\"payto\",\"pkcs11\",\"platform\",\"pop\",\"pres\",\"proxy\",\"psyc\",\"pttp\",\"pwid\",\"qb\",\"query\",\"quic-transport\",\"redis\",\"rediss\",\"reload\",\"res\",\"resource\",\"rmi\",\"rsync\",\"rtmfp\",\"rtmp\",\"rtsp\",\"rtsps\",\"rtspu\",\"sarif\",\"secondlife\",\"secret-token\",\"service\",\"session\",\"sftp\",\"sgn\",\"shc\",\"sieve\",\"simpleledger\",\"simplex\",\"sip\",\"sips\",\"skype\",\"smb\",\"smp\",\"sms\",\"smtp\",\"snmp\",\"soap.beep\",\"soap.beeps\",\"soldat\",\"spiffe\",\"spotify\",\"ssb\",\"ssh\",\"starknet\",\"steam\",\"stun\",\"stuns\",\"submit\",\"svn\",\"swh\",\"swid\",\"swidpath\",\"tag\",\"taler\",\"teamspeak\",\"tel\",\"teliaeid\",\"telnet\",\"tftp\",\"things\",\"thismessage\",\"tip\",\"tn3270\",\"tool\",\"turn\",\"turns\",\"tv\",\"udp\",\"unreal\",\"urn\",\"ut2004\",\"uuid-in-package\",\"v-event\",\"vemmi\",\"ventrilo\",\"ves\",\"view-source\",\"vnc\",\"vscode\",\"vscode-insiders\",\"vsls\",\"w3\",\"wcr\",\"web3\",\"webcal\",\"wifi\",\"ws\",\"wss\",\"wtai\",\"wyciwyg\",\"xcon\",\"xcon-userid\",\"xfire\",\"xmlrpc.beep\",\"xmlrpc.beeps\",\"xmpp\",\"xri\",\"ymsgr\",\"z39.50r\",\"z39.50s\"]\n", "/**\n * file-reader.js\n */\n\nconst { FileReader } = globalThis;\n\nexport {\n  FileReader\n};\n", "/**\n * uri-util.js\n */\n\n/* shared */\nimport textChars from '../lib/file/text-chars.json' assert { type: 'json' };\nimport uriSchemes from '../lib/iana/uri-schemes.json' assert { type: 'json' };\nimport { getType, isString } from './common.js';\nimport { FileReader } from './file-reader.js';\n\n/* constants */\nconst HEX = 16;\nconst REG_BASE64 = /^[\\w+/\\-=]+$/;\nconst REG_END_COLON = /:$/;\nconst REG_NUM_DECI = /^\\d+/;\nconst REG_NUM_HEAD = /#x?$/;\nconst REG_NUM_HEAD_ASCII = /^#(?:x(?:00)?[2-7]|\\d)/;\nconst REG_NUM_HEX = /^x[\\dA-F]+/i;\nconst REG_NUM_REF = /&#(x(?:00)?[\\dA-F]{2}|0?\\d{1,3});?/gi;\nconst REG_SCHEME = /^[a-z][\\da-z+\\-.]*$/;\nconst REG_SCHEME_CUSTOM = /^(?:ext|web)\\+[a-z]+$/;\nconst REG_SCRIPT = /(?:java|vb)script/;\nconst REG_URL_ENC = /^%[\\dA-F]{2}$/i;\n\n/**\n * get URL encoded string\n *\n * @param {string} str - string\n * @returns {string} - URL encoded string\n */\nexport const getURLEncodedString = str => {\n  if (!isString(str)) {\n    throw new TypeError(`Expected String but got ${getType(str)}.`);\n  }\n  const chars = [];\n  for (const ch of str) {\n    chars.push(`%${ch.charCodeAt(0).toString(HEX).toUpperCase()}`);\n  }\n  return chars.join('');\n};\n\n/**\n * escape URL encoded HTML special chars\n *\n * @param {string} ch - URL encoded (percent encoded) char\n * @returns {string} - escaped URL encoded HTML special char / URL encoded char\n */\nexport const escapeURLEncodedHTMLChars = ch => {\n  if (isString(ch) && REG_URL_ENC.test(ch)) {\n    ch = ch.toUpperCase();\n  }\n  const [amp, num, lt, gt, quot, apos] =\n    ['&', '#', '<', '>', '\"', \"'\"].map(getURLEncodedString);\n  let escapedChar;\n  if (ch === amp) {\n    escapedChar = `${amp}amp;`;\n  } else if (ch === lt) {\n    escapedChar = `${amp}lt;`;\n  } else if (ch === gt) {\n    escapedChar = `${amp}gt;`;\n  } else if (ch === quot) {\n    escapedChar = `${amp}quot;`;\n  } else if (ch === apos) {\n    escapedChar = `${amp}${num}39;`;\n  } else {\n    escapedChar = ch;\n  }\n  return escapedChar;\n};\n\n/**\n * parse base64 encoded data\n *\n * @param {string} data - base64 encoded data\n * @returns {string} - parsed text data / base64 encoded data if binary\n */\nexport const parseBase64 = data => {\n  if (!isString(data)) {\n    throw new TypeError(`Expected String but got ${getType(data)}.`);\n  } else if (!REG_BASE64.test(data)) {\n    throw new Error(`Invalid base64 data: ${data}`);\n  }\n  const bin = atob(data);\n  const uint8arr = Uint8Array.from([...bin].map(c => c.charCodeAt(0)));\n  const textCharCodes = new Set(textChars);\n  let parsedData;\n  if (uint8arr.every(c => textCharCodes.has(c))) {\n    parsedData = bin.replace(/\\s/g, getURLEncodedString);\n  } else {\n    parsedData = data;\n  }\n  return parsedData;\n};\n\n/**\n * parse URL encoded numeric character references in the range 0x00 to 0xFF\n *\n * @param {string} str - string\n * @param {number} [nest] - nest level\n * @returns {string} - parsed string\n */\nexport const parseURLEncodedNumCharRef = (str, nest = 0) => {\n  if (!isString(str)) {\n    throw new TypeError(`Expected String but got ${getType(str)}.`);\n  }\n  if (!Number.isInteger(nest)) {\n    throw new TypeError(`Expected Number but got ${getType(nest)}.`);\n  } else if (nest > HEX) {\n    throw new Error('Character references nested too deeply.');\n  }\n  let res = decodeURIComponent(str);\n  if (/&#/.test(res)) {\n    const textCharCodes = new Set(textChars);\n    const items = [...res.matchAll(REG_NUM_REF)].reverse();\n    for (const item of items) {\n      const [numCharRef, value] = item;\n      let num;\n      if (REG_NUM_HEX.test(value)) {\n        num = parseInt(`0${value}`, HEX);\n      } else if (REG_NUM_DECI.test(value)) {\n        num = parseInt(value);\n      }\n      if (Number.isInteger(num)) {\n        const { index } = item;\n        const [preNum, postNum] = [\n          res.substring(0, index),\n          res.substring(index + numCharRef.length)\n        ];\n        if (textCharCodes.has(num)) {\n          res = `${preNum}${String.fromCharCode(num)}${postNum}`;\n          if (REG_NUM_HEAD.test(preNum) || REG_NUM_HEAD_ASCII.test(postNum)) {\n            res = parseURLEncodedNumCharRef(res, ++nest);\n          }\n        } else if (num < HEX * HEX) {\n          res = `${preNum}${postNum}`;\n        }\n      }\n    }\n  }\n  return res;\n};\n\n/**\n * create data URL from blob\n *\n * @param {object} blob - blob\n * @returns {Promise.<?string>} - data URL\n */\nexport const createDataURLFromBlob = blob => new Promise((resolve, reject) => {\n  const reader = new FileReader();\n  reader.addEventListener('error', () => reject(reader.error));\n  reader.addEventListener('abort', () => resolve(reader.result));\n  reader.addEventListener('load', () => resolve(reader.result));\n  reader.readAsDataURL(blob);\n});\n\n/**\n * URI schemes\n *\n */\nexport class URISchemes {\n  /* private fields */\n  #schemes;\n\n  /**\n   * construct\n   */\n  constructor() {\n    this.#schemes = new Set(uriSchemes);\n  }\n\n  /**\n   * get schemes\n   *\n   * @see {@link https://www.iana.org/assignments/uri-schemes/uri-schemes.xhtml}\n   *      - Historical schemes omitted\n   *      - 'moz-extension' scheme added\n   * @returns {Array.<string>} - array of schemes\n   */\n  get() {\n    return [...this.#schemes];\n  }\n\n  /**\n   * has scheme\n   *\n   * @param {string} scheme - scheme\n   * @returns {boolean} - result\n   */\n  has(scheme) {\n    return this.#schemes.has(scheme);\n  }\n\n  /**\n   * add scheme\n   * NOTE: `javascript` and/or `vbscript` schemes can not be registered\n   *\n   * @param {string} scheme - scheme\n   * @returns {Array.<string>} - array of schemes\n   */\n  add(scheme) {\n    if (!isString(scheme)) {\n      throw new TypeError(`Expected String but got ${getType(scheme)}.`);\n    } else if (REG_SCRIPT.test(scheme) || !REG_SCHEME.test(scheme)) {\n      throw new Error(`Invalid scheme: ${scheme}`);\n    }\n    this.#schemes.add(scheme);\n    return [...this.#schemes];\n  }\n\n  /**\n   * remove scheme\n   *\n   * @param {string} scheme - scheme\n   * @returns {boolean} - result\n   */\n  remove(scheme) {\n    return this.#schemes.delete(scheme);\n  }\n\n  /**\n   * verify URI\n   *\n   * @param {string} uri - URI\n   * @returns {boolean} - result\n   */\n  verify(uri) {\n    let res;\n    if (isString(uri)) {\n      try {\n        const { protocol } = new URL(uri);\n        const scheme = protocol.replace(REG_END_COLON, '');\n        const schemeParts = scheme.split('+');\n        res = (!REG_SCRIPT.test(scheme) && REG_SCHEME_CUSTOM.test(scheme)) ||\n              schemeParts.every(s => this.#schemes.has(s));\n      } catch (e) {\n        res = false;\n      }\n    }\n    return !!res;\n  }\n\n  /**\n   * reset schemes\n   *\n   * @returns {void}\n   */\n  reset() {\n    this.#schemes.clear();\n    for (const scheme of uriSchemes) {\n      this.#schemes.add(scheme);\n    }\n  }\n};\n", "/**\n * sanitizer.js\n */\n\n/* shared */\nimport domPurify from './dompurify.js';\nimport { getType, isString } from './common.js';\nimport {\n  createDataURLFromBlob, escapeURLEncodedHTMLChars, getURLEncodedString,\n  parseBase64, parseURLEncodedNumCharRef, URISchemes\n} from './uri-util.js';\n\n/* constants */\nconst HEX = 16;\nconst REG_DATA_URL = /data:[\\w#&+\\-./;=]*,/;\nconst REG_DATA_URL_BASE64 = /data:[\\w#&+\\-./;=]*base64,[\\w+/\\-=]+/i;\nconst REG_DATA_URL_G = /data:[\\w#&+\\-./;=]*,[^\"]+/g;\nconst REG_END_COLON = /:$/;\nconst REG_END_NUM = /(?:#|%23)$/;\nconst REG_END_QUEST = /(?<!(?:#|%23).*)(?:\\?|%3F)$/;\nconst REG_HTML_SP = /[<>\"'\\s]/g;\nconst REG_HTML_URL_ENC = /%(?:2(?:2|7)|3(?:C|E))/g;\nconst REG_MIME_DOM =\n  /^(?:text\\/(?:ht|x)ml|application\\/(?:[\\w#&\\-.;]+\\+)?xml|image\\/svg\\+xml)/;\nconst REG_SCRIPT_BLOB = /(?:java|vb)script|blob/;\nconst REG_TAG_QUOT = /%(?:2(?:2|7)|3(?:C|E))|[<>\"']/;\nconst REG_URL_ENC_AMP = /%26/g;\n\n/* typedef */\n/**\n * @typedef {object} ParsedURL - object with additional props based on URL API\n * @property {string} input - URL input\n * @property {boolean} valid - is valid URI\n * @property {object} [data] - parsed result of data URL, `null`able\n * @property {string} [data.mime] - MIME type\n * @property {boolean} [data.base64] - is base64 encoded\n * @property {string} [data.data] - data part of the data URL\n * @property {string} [href] - sanitized URL input\n * @property {string} [origin] - scheme, domain and port of the sanitized URL\n * @property {string} [protocol] - protocol scheme of the sanitized URL\n * @property {string} [username] - username specified before the domain name\n * @property {string} [password] - password specified before the domain name\n * @property {string} [host] - domain and port of the sanitized URL\n * @property {string} [hostname] - domain of the sanitized URL\n * @property {string} [port] - port number of the sanitized URL\n * @property {string} [pathname] - path of the sanitized URL\n * @property {string} [search] - query string of the sanitized URL\n * @property {string} [hash] - fragment identifier of the sanitized URL\n */\n\n/* URL sanitizer */\nexport class URLSanitizer extends URISchemes {\n  /* private fields */\n  #nest;\n  #recurse;\n\n  /**\n   * construct\n   */\n  constructor() {\n    super();\n    this.#nest = 0;\n    this.#recurse = new Set();\n  }\n\n  /**\n   * replace matched data URLs\n   *\n   * @param {string} data - data URL\n   * @returns {string} - replaced data URL\n   */\n  replace(data) {\n    if (!isString(data)) {\n      throw new TypeError(`Expected String but got ${getType(data)}.`);\n    }\n    let replacedData = data;\n    if (REG_DATA_URL.test(replacedData)) {\n      const matchedDataUrls = replacedData.matchAll(REG_DATA_URL_G);\n      const items = [...matchedDataUrls].reverse();\n      for (const item of items) {\n        let [dataUrl] = item;\n        if (REG_DATA_URL_BASE64.test(dataUrl)) {\n          [dataUrl] = REG_DATA_URL_BASE64.exec(dataUrl);\n        }\n        this.#nest++;\n        this.#recurse.add(dataUrl);\n        const parsedDataUrl = this.sanitize(dataUrl, {\n          allow: ['data']\n        });\n        const { index } = item;\n        const [preDataUrl, postDataUrl] = [\n          replacedData.substring(0, index),\n          replacedData.substring(index + dataUrl.length)\n        ];\n        if (parsedDataUrl) {\n          replacedData = `${preDataUrl}${parsedDataUrl}${postDataUrl}`;\n        } else {\n          replacedData = `${preDataUrl}${postDataUrl}`;\n        }\n      }\n    }\n    return replacedData;\n  }\n\n  /**\n   * purify URL encoded DOM\n   *\n   * @param {string} dom - DOM string\n   * @returns {string} - purified DOM string\n   */\n  purify(dom) {\n    if (!isString(dom)) {\n      throw new TypeError(`Expected String but got ${getType(dom)}.`);\n    }\n    let purifiedDom = domPurify.sanitize(decodeURIComponent(dom));\n    if (purifiedDom && REG_DATA_URL.test(purifiedDom)) {\n      purifiedDom = this.replace(purifiedDom);\n    }\n    purifiedDom =\n      purifiedDom.replace(REG_END_NUM, '').replace(REG_END_QUEST, '');\n    return encodeURI(purifiedDom);\n  };\n\n  /**\n   * sanitize URL\n   * NOTE: `data` and `file` schemes must be explicitly allowed\n   *       `blob` URLs should be converted to `data` URLs\n   *       `javascript` and `vbscript` schemes can not be allowed\n   *\n   * @param {string} url - URL\n   * @param {object} [opt] - options\n   * @param {Array.<string>} [opt.allow] - array of allowed schemes\n   * @param {Array.<string>} [opt.deny] - array of denied schemes\n   * @param {Array.<string>} [opt.only] - array of specific schemes to allow\n   * @param {boolean} [opt.remove] - remove tag and/or quote and the rest\n   * @returns {?string} - sanitized URL\n   */\n  sanitize(url, opt) {\n    if (this.#nest > HEX) {\n      this.#nest = 0;\n      throw new Error('Data URLs nested too deeply.');\n    }\n    const { allow, deny, only, remove } = opt ?? {};\n    const schemeMap = new Map([\n      ['blob', false],\n      ['data', false],\n      ['file', false],\n      ['javascrpt', false],\n      ['vbscript', false]\n    ]);\n    const tempScheme = new Set();\n    let restrictScheme = false;\n    if (Array.isArray(only) && only.length) {\n      const schemes = super.get();\n      for (const item of schemes) {\n        schemeMap.set(item, false);\n      }\n      const items = Object.values(only);\n      for (let item of items) {\n        if (isString(item)) {\n          item = item.trim();\n          if (!REG_SCRIPT_BLOB.test(item)) {\n            if (super.has(item)) {\n              schemeMap.set(item, true);\n            } else {\n              try {\n                super.add(item);\n              } catch (e) {\n                // fall through\n              }\n              if (super.has(item)) {\n                schemeMap.set(item, true);\n                tempScheme.add(item);\n              }\n            }\n            if (!restrictScheme && schemeMap.has(item)) {\n              restrictScheme = schemeMap.get(item);\n            }\n          }\n        }\n      }\n    } else {\n      if (Array.isArray(allow) && allow.length) {\n        const items = Object.values(allow);\n        for (let item of items) {\n          if (isString(item)) {\n            item = item.trim();\n            if (!REG_SCRIPT_BLOB.test(item)) {\n              if (super.has(item)) {\n                schemeMap.set(item, true);\n              } else {\n                try {\n                  super.add(item);\n                } catch (e) {\n                  // fall through\n                }\n                if (super.has(item)) {\n                  schemeMap.set(item, true);\n                  tempScheme.add(item);\n                }\n              }\n            }\n          }\n        }\n      }\n      if (Array.isArray(deny) && deny.length) {\n        const items = Object.values(deny);\n        for (let item of items) {\n          if (isString(item)) {\n            item = item.trim();\n            if (item) {\n              schemeMap.set(item, false);\n            }\n          }\n        }\n      }\n    }\n    let sanitizedUrl;\n    if (super.verify(url)) {\n      const { hash, href, pathname, protocol, search } = new URL(url);\n      const scheme = protocol.replace(REG_END_COLON, '');\n      const schemeParts = scheme.split('+');\n      let bool;\n      if (restrictScheme) {\n        bool = schemeParts.every(s => schemeMap.get(s));\n      } else {\n        for (const [key, value] of schemeMap.entries()) {\n          bool = value || (scheme !== key && schemeParts.every(s => s !== key));\n          if (!bool) {\n            break;\n          }\n        }\n      }\n      if (bool) {\n        const isDataUrl = schemeParts.includes('data');\n        let finalize;\n        let urlToSanitize = href;\n        if (isDataUrl) {\n          const [mediaType, ...dataParts] = pathname.split(',');\n          const data = `${dataParts.join(',')}${search}${hash}`;\n          const mediaTypes = mediaType.split(';');\n          const isBase64 = mediaTypes[mediaTypes.length - 1] === 'base64';\n          let parsedData = data;\n          if (isBase64) {\n            parsedData = parseBase64(data);\n          }\n          try {\n            const decodedData = parseURLEncodedNumCharRef(parsedData).trim();\n            const { protocol: dataScheme } = new URL(decodedData);\n            const dataSchemeParts =\n              dataScheme.replace(REG_END_COLON, '').split('+');\n            if (dataSchemeParts.some(s => REG_SCRIPT_BLOB.test(s))) {\n              urlToSanitize = '';\n            }\n          } catch (e) {\n            // fall through\n          }\n          const containsDataUrl = REG_DATA_URL.test(parsedData);\n          if (parsedData !== data || containsDataUrl) {\n            if (containsDataUrl) {\n              parsedData = this.replace(parsedData);\n            } else if (this.#recurse.has(url)) {\n              this.#recurse.delete(url);\n            } else {\n              finalize = true;\n            }\n          } else if (this.#recurse.has(url)) {\n            this.#recurse.delete(url);\n          } else {\n            finalize = true;\n          }\n          if (!mediaType || REG_MIME_DOM.test(mediaType)) {\n            parsedData = this.purify(parsedData);\n          }\n          if (urlToSanitize && parsedData) {\n            if (isBase64 && parsedData !== data) {\n              mediaTypes.pop();\n            }\n            urlToSanitize = `${scheme}:${mediaTypes.join(';')},${parsedData}`;\n          } else {\n            urlToSanitize = '';\n          }\n        } else {\n          finalize = true;\n        }\n        if (!isDataUrl && remove && REG_TAG_QUOT.test(urlToSanitize)) {\n          const item = REG_TAG_QUOT.exec(urlToSanitize);\n          const { index } = item;\n          urlToSanitize = urlToSanitize.substring(0, index);\n        }\n        if (urlToSanitize) {\n          sanitizedUrl = urlToSanitize\n            .replace(REG_HTML_SP, getURLEncodedString)\n            .replace(REG_URL_ENC_AMP, escapeURLEncodedHTMLChars);\n          if (finalize) {\n            if (!isDataUrl) {\n              sanitizedUrl = sanitizedUrl\n                .replace(REG_HTML_URL_ENC, escapeURLEncodedHTMLChars);\n            }\n            this.#nest = 0;\n          }\n        } else {\n          this.#nest = 0;\n        }\n      }\n      if (tempScheme.size) {\n        tempScheme.forEach(item => {\n          super.remove(item);\n        });\n      }\n    }\n    return sanitizedUrl || null;\n  }\n\n  /**\n   * parse sanitized URL\n   *\n   * @param {string} url - URL\n   * @param {object} [opt] - options\n   * @param {Array.<string>} [opt.allow] - array of allowed schemes\n   * @param {Array.<string>} [opt.deny] - array of denied schemes\n   * @param {Array.<string>} [opt.only] - array of specific schemes to allow\n   * @param {boolean} [opt.remove] - remove tag and/or quote and the rest\n   * @returns {ParsedURL} - result with additional props based on URL API\n   */\n  parse(url, opt) {\n    if (!isString(url)) {\n      throw new TypeError(`Expected String but got ${getType(url)}.`);\n    }\n    const parsedUrl = new Map([\n      ['input', url]\n    ]);\n    let sanitizedUrl;\n    if (this.verify(url)) {\n      const { protocol } = new URL(url);\n      if (protocol === 'blob:') {\n        sanitizedUrl = url;\n      } else {\n        sanitizedUrl = this.sanitize(url, opt ?? {\n          allow: ['data', 'file']\n        });\n      }\n    }\n    if (sanitizedUrl) {\n      const urlObj = new URL(sanitizedUrl);\n      const { pathname, protocol } = urlObj;\n      const schemeParts = protocol.replace(REG_END_COLON, '').split('+');\n      const isDataUrl = schemeParts.includes('data');\n      parsedUrl.set('valid', true);\n      if (isDataUrl) {\n        const dataUrl = new Map();\n        const [mediaType, ...dataParts] = pathname.split(',');\n        const data = `${dataParts.join(',')}`;\n        const mediaTypes = mediaType.split(';');\n        const isBase64 = mediaTypes[mediaTypes.length - 1] === 'base64';\n        if (isBase64) {\n          mediaTypes.pop();\n        }\n        dataUrl.set('mime', mediaTypes.join(';'));\n        dataUrl.set('base64', isBase64);\n        dataUrl.set('data', data);\n        parsedUrl.set('data', Object.fromEntries(dataUrl));\n      } else {\n        parsedUrl.set('data', null);\n      }\n      for (const key in urlObj) {\n        const value = urlObj[key];\n        if (isString(value)) {\n          parsedUrl.set(key, value);\n        }\n      }\n    } else {\n      parsedUrl.set('valid', false);\n    }\n    return Object.fromEntries(parsedUrl);\n  }\n\n  /**\n   * reset sanitizer\n   *\n   * @returns {void}\n   */\n  reset() {\n    super.reset();\n    this.#nest = 0;\n    this.#recurse.clear();\n  }\n};\n\n/* aliases and async wrappers */\n/* instance */\nconst urlSanitizer = new URLSanitizer();\n\n/**\n * sanitize URL async\n * NOTE: `blob`, `data` and `file` schemes must be explicitly allowed\n *       given a `blob` URL, returns a sanitized `data` URL\n *\n * @param {string} url - URL\n * @param {object} [opt] - options\n * @param {Array.<string>} [opt.allow] - array of allowed schemes\n * @param {Array.<string>} [opt.deny] - array of denied schemes\n * @param {Array.<string>} [opt.only] - array of specific schemes to allow\n * @param {boolean} [opt.remove] - remove tag and/or quote and the rest\n * @returns {Promise.<?string>} - sanitized URL\n */\nexport const sanitizeURL = async (url, opt = {\n  allow: [],\n  deny: [],\n  only: []\n}) => {\n  let res;\n  if (url && isString(url)) {\n    let scheme;\n    try {\n      const { protocol } = new URL(url);\n      scheme = protocol.replace(REG_END_COLON, '');\n    } catch (e) {\n      // fall through;\n    }\n    if (scheme === 'blob') {\n      const { allow, deny, only } = opt;\n      if ((Array.isArray(allow) && allow.includes('blob') &&\n           !(Array.isArray(deny) && deny.includes('blob'))) ||\n          (Array.isArray(only) && only.includes('blob'))) {\n        let data;\n        try {\n          data =\n            await fetch(url).then(r => r.blob()).then(createDataURLFromBlob);\n        } catch (e) {\n          // fall through\n        }\n        if (data) {\n          if (Array.isArray(only)) {\n            if (!only.includes('data')) {\n              only.push('data');\n            }\n          } else if (Array.isArray(allow)) {\n            if (!allow.includes('data')) {\n              allow.push('data');\n            }\n            if (Array.isArray(deny) && deny.includes('data')) {\n              const i = deny.indexOf('data');\n              deny.splice(i, 1);\n            }\n          }\n          res = urlSanitizer.sanitize(data, opt);\n        }\n      }\n      URL.revokeObjectURL(url);\n    } else if (scheme) {\n      res = urlSanitizer.sanitize(url, opt);\n    }\n  }\n  return res || null;\n};\n\n/**\n * sanitize URL sync\n * NOTE: `data` and `file` schemes must be explicitly allowed\n *       `blob` scheme returns `null`\n *\n * @param {string} url - URL\n * @param {object} [opt] - options\n * @param {Array.<string>} [opt.allow] - array of allowed schemes\n * @param {Array.<string>} [opt.deny] - array of denied schemes\n * @param {Array.<string>} [opt.only] - array of specific schemes to allow\n * @param {boolean} [opt.remove] - remove tag and/or quote and the rest\n * @returns {?string} - sanitized URL\n */\nexport const sanitizeURLSync = (url, opt) => {\n  let res;\n  if (url && isString(url)) {\n    let scheme;\n    try {\n      const { protocol } = new URL(url);\n      scheme = protocol.replace(REG_END_COLON, '');\n    } catch (e) {\n      // fall through;\n    }\n    if (scheme === 'blob') {\n      URL.revokeObjectURL(url);\n    } else if (scheme) {\n      res = urlSanitizer.sanitize(url, opt);\n    }\n  }\n  return res || null;\n};\n\n/**\n * parse URL async\n *\n * @param {string} url - URL\n * @returns {Promise.<ParsedURL>} - result\n */\nexport const parseURL = async url => {\n  const res = urlSanitizer.parse(url);\n  return res;\n};\n\n/**\n * parse URL sync\n *\n * @param {string} url - URL\n * @returns {ParsedURL} - result\n */\nexport const parseURLSync = url => urlSanitizer.parse(url);\n\n/**\n * is URI async\n *\n * @param {string} uri - URI\n * @returns {Promise.<boolean>} - result\n */\nexport const isURI = async uri => {\n  const res = urlSanitizer.verify(uri);\n  return res;\n};\n\n/**\n * is URI sync\n *\n * @param {string} uri - URI\n * @returns {boolean} - result\n */\nexport const isURISync = uri => urlSanitizer.verify(uri);\n\n/* export instance */\nexport {\n  urlSanitizer as default\n};\n"],
  "mappings": "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,QACA,SACA,KACA,OACA,MACA,OACA,UACA,OACA,WACA,QACA,MACA,OACA,KACA,WACA,SACA,SACA,IACA,UACA,MACA,WACA,IACA,KACA,KACA,OACA,IACA,OACA,UACA,SACA,SACA,QACA,SACA,SACA,OACA,SACA,SACA,QACA,MACA,UACA,MACA,QACA,QACA,KACA,WACA,WACA,QACA,KACA,QACA,OACA,KACA,QACA,KACA,IACA,KACA,MACA,QACA,KArHyB,CAAD,EAyHbkE,EAAMlE,EAAO,CACxB,MACA,IACA,WACA,cACA,eACA,eACA,gBACA,mBACA,SACA,WACA,OACA,OACA,UACA,SACA,OACA,IACA,QACA,WACA,QACA,QACA,OACA,iBACA,SACA,OACA,WACA,QACA,OACA,UACA,UACA,WACA,iBACA,OACA,OACA,QACA,SACA,SACA,OACA,WACA,QACA,OACA,QACA,OACA,OA3CwB,CAAD,EA8CZmE,GAAanE,EAAO,CAC/B,UACA,gBACA,sBACA,cACA,mBACA,oBACA,oBACA,iBACA,UACA,UACA,UACA,UACA,UACA,iBACA,UACA,UACA,cACA,eACA,WACA,eACA,qBACA,cACA,SACA,cAxB+B,CAAD,EA+BnBoE,GAAgBpE,EAAO,CAClC,UACA,gBACA,SACA,UACA,eACA,YACA,mBACA,iBACA,gBACA,gBACA,gBACA,QACA,YACA,OACA,eACA,YACA,UACA,gBACA,SACA,MACA,aACA,UACA,KAvBkC,CAAD,EA0BtBqE,GAASrE,EAAO,CAC3B,OACA,WACA,SACA,UACA,QACA,SACA,KACA,aACA,gBACA,KACA,KACA,QACA,UACA,WACA,QACA,OACA,KACA,SACA,QACA,SACA,OACA,OACA,UACA,SACA,MACA,QACA,MACA,SACA,aACA,aA9B2B,CAAD,EAmCfsE,GAAmBtE,EAAO,CACrC,UACA,cACA,aACA,WACA,YACA,UACA,UACA,SACA,SACA,QACA,YACA,aACA,iBACA,cACA,MAfqC,CAAD,EAkBzBuE,GAAOvE,EAAO,CAAC,OAAD,CAAD,ECrRbiE,GAAOjE,EAAO,CACzB,SACA,SACA,QACA,MACA,iBACA,eACA,uBACA,WACA,aACA,UACA,SACA,UACA,cACA,cACA,UACA,OACA,QACA,QACA,QACA,OACA,UACA,WACA,eACA,SACA,cACA,WACA,WACA,UACA,MACA,WACA,0BACA,wBACA,WACA,YACA,UACA,eACA,OACA,MACA,UACA,SACA,SACA,OACA,OACA,WACA,KACA,YACA,YACA,QACA,OACA,QACA,OACA,OACA,UACA,OACA,MACA,MACA,YACA,QACA,SACA,MACA,YACA,WACA,QACA,OACA,QACA,UACA,aACA,SACA,OACA,UACA,UACA,cACA,cACA,SACA,UACA,UACA,aACA,WACA,MACA,WACA,MACA,WACA,OACA,OACA,UACA,aACA,QACA,WACA,QACA,OACA,QACA,OACA,UACA,QACA,MACA,SACA,OACA,QACA,UACA,WACA,QACA,YACA,OACA,SACA,SACA,QACA,QACA,QACA,MA7GyB,CAAD,EAgHbkE,GAAMlE,EAAO,CACxB,gBACA,aACA,WACA,qBACA,SACA,gBACA,gBACA,UACA,gBACA,iBACA,QACA,OACA,KACA,QACA,OACA,gBACA,YACA,YACA,QACA,sBACA,8BACA,gBACA,kBACA,KACA,KACA,IACA,KACA,KACA,kBACA,YACA,UACA,UACA,MACA,WACA,YACA,MACA,OACA,eACA,YACA,SACA,cACA,cACA,gBACA,cACA,YACA,mBACA,eACA,aACA,eACA,cACA,KACA,KACA,KACA,KACA,aACA,WACA,gBACA,oBACA,SACA,OACA,KACA,kBACA,KACA,MACA,IACA,KACA,KACA,KACA,KACA,UACA,YACA,aACA,WACA,OACA,eACA,iBACA,eACA,mBACA,iBACA,QACA,aACA,aACA,eACA,eACA,cACA,cACA,mBACA,YACA,MACA,OACA,QACA,SACA,OACA,MACA,OACA,aACA,SACA,WACA,UACA,QACA,SACA,cACA,SACA,WACA,cACA,OACA,aACA,sBACA,mBACA,eACA,SACA,gBACA,sBACA,iBACA,IACA,KACA,KACA,SACA,OACA,OACA,cACA,YACA,UACA,SACA,SACA,QACA,OACA,kBACA,mBACA,mBACA,eACA,cACA,eACA,cACA,aACA,eACA,mBACA,oBACA,iBACA,kBACA,oBACA,iBACA,SACA,eACA,QACA,eACA,iBACA,WACA,UACA,UACA,YACA,mBACA,cACA,kBACA,iBACA,aACA,OACA,KACA,KACA,UACA,SACA,UACA,aACA,UACA,aACA,gBACA,gBACA,QACA,eACA,OACA,eACA,mBACA,mBACA,IACA,KACA,KACA,QACA,IACA,KACA,KACA,IACA,YAtLwB,CAAD,EAyLZqE,GAASrE,EAAO,CAC3B,SACA,cACA,QACA,WACA,QACA,eACA,cACA,aACA,aACA,QACA,MACA,UACA,eACA,WACA,QACA,QACA,SACA,OACA,KACA,UACA,SACA,gBACA,SACA,SACA,iBACA,YACA,WACA,cACA,UACA,UACA,gBACA,WACA,WACA,OACA,WACA,WACA,aACA,UACA,SACA,SACA,cACA,gBACA,uBACA,YACA,YACA,aACA,WACA,iBACA,iBACA,YACA,UACA,QACA,OArD2B,CAAD,EAwDfwE,GAAMxE,EAAO,CACxB,aACA,SACA,cACA,YACA,aALwB,CAAD,EChWZyE,GAAgBxE,EAAK,2BAAD,EACpByE,GAAWzE,EAAK,uBAAD,EACf0E,GAAc1E,EAAK,eAAD,EAClB2E,GAAY3E,EAAK,4BAAD,EAChB4E,GAAY5E,EAAK,gBAAD,EAChB6E,GAAiB7E,EAC5B,2FADgC,EAGrB8E,GAAoB9E,EAAK,uBAAD,EACxB+E,GAAkB/E,EAC7B,6DADiC,EAGtBgF,GAAehF,EAAK,SAAD,yLCOhC,IAAMiF,GAAY,IAAO,OAAOC,OAAW,IAAc,KAAOA,OAU1DC,GAA4B,SAAUC,EAAcC,EAAU,CAEhE,GAAA,OAAOD,GAAiB,UACxB,OAAOA,EAAaE,cAAiB,WAErC,OAAO,KAMLC,IAAAA,EAAS,KACPC,EAAY,wBAEhBH,EAASI,eACTJ,EAASI,cAAcC,aAAaF,CAApC,IAEAD,EAASF,EAASI,cAAcE,aAAaH,CAApC,G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",
  "names": ["entries", "setPrototypeOf", "isFrozen", "getPrototypeOf", "getOwnPropertyDescriptor", "Object", "freeze", "seal", "create", "apply", "construct", "Reflect", "fun", "thisValue", "args", "x", "Func", "arrayForEach", "unapply", "Array", "prototype", "forEach", "arrayPop", "pop", "arrayPush", "push", "stringToLowerCase", "String", "toLowerCase", "stringToString", "toString", "stringMatch", "match", "stringReplace", "replace", "stringIndexOf", "indexOf", "stringTrim", "trim", "regExpTest", "RegExp", "test", "typeErrorCreate", "unconstruct", "TypeError", "func", "thisArg", "_len", "_key", "_len2", "_key2", "addToSet", "set", "array", "transformCaseFunc", "l", "length", "element", "lcElement", "clone", "object", "newObject", "property", "value", "lookupGetter", "prop", "desc", "get", "fallbackValue", "console", "warn", "html", "svg", "svgFilters", "svgDisallowed", "mathMl", "mathMlDisallowed", "text", "xml", "MUSTACHE_EXPR", "ERB_EXPR", "TMPLIT_EXPR", "DATA_ATTR", "ARIA_ATTR", "IS_ALLOWED_URI", "IS_SCRIPT_OR_DATA", "ATTR_WHITESPACE", "DOCTYPE_NAME", "getGlobal", "window", "_createTrustedTypesPolicy", "trustedTypes", "document", "createPolicy", "suffix", "ATTR_NAME", "currentScript", "hasAttribute", "getAttribute", "policyName", "createHTML", "createScriptURL", "scriptUrl", "createDOMPurify", "DOMPurify", "root", "version", "VERSION", "removed", "nodeType", "isSupported", "originalDocument", "DocumentFragment", "HTMLTemplateElement", "Node", "Element", "NodeFilter", "NamedNodeMap", "MozNamedAttrMap", "HTMLFormElement", "DOMParser", "ElementPrototype", "cloneNode", "getNextSibling", "getChildNodes", "getParentNode", "template", "createElement", "content", "ownerDocument", "trustedTypesPolicy", "emptyHTML", "implementation", "createNodeIterator", "createDocumentFragment", "getElementsByTagName", "importNode", "hooks", "createHTMLDocument", "EXPRESSIONS", "ALLOWED_TAGS", "DEFAULT_ALLOWED_TAGS", "TAGS", "ALLOWED_ATTR", "DEFAULT_ALLOWED_ATTR", "ATTRS", "CUSTOM_ELEMENT_HANDLING", "tagNameCheck", "writable", "configurable", "enumerable", "attributeNameCheck", "allowCustomizedBuiltInElements", "FORBID_TAGS", "FORBID_ATTR", "ALLOW_ARIA_ATTR", "ALLOW_DATA_ATTR", "ALLOW_UNKNOWN_PROTOCOLS", "ALLOW_SELF_CLOSE_IN_ATTR", "SAFE_FOR_TEMPLATES", "WHOLE_DOCUMENT", "SET_CONFIG", "FORCE_BODY", "RETURN_DOM", "RETURN_DOM_FRAGMENT", "RETURN_TRUSTED_TYPE", "SANITIZE_DOM", "SANITIZE_NAMED_PROPS", "SANITIZE_NAMED_PROPS_PREFIX", "KEEP_CONTENT", "IN_PLACE", "USE_PROFILES", "FORBID_CONTENTS", "DEFAULT_FORBID_CONTENTS", "DATA_URI_TAGS", "DEFAULT_DATA_URI_TAGS", "URI_SAFE_ATTRIBUTES", "DEFAULT_URI_SAFE_ATTRIBUTES", "MATHML_NAMESPACE", "SVG_NAMESPACE", "HTML_NAMESPACE", "NAMESPACE", "IS_EMPTY_INPUT", "ALLOWED_NAMESPACES", "DEFAULT_ALLOWED_NAMESPACES", "PARSER_MEDIA_TYPE", "SUPPORTED_PARSER_MEDIA_TYPES", "DEFAULT_PARSER_MEDIA_TYPE", "CONFIG", "formElement", "isRegexOrFunction", "testValue", "Function", "_parseConfig", "cfg", "ADD_URI_SAFE_ATTR", "ADD_DATA_URI_TAGS", "ALLOWED_URI_REGEXP", "ADD_TAGS", "ADD_ATTR", "table", "tbody", "MATHML_TEXT_INTEGRATION_POINTS", "HTML_INTEGRATION_POINTS", "COMMON_SVG_AND_HTML_ELEMENTS", "ALL_SVG_TAGS", "ALL_MATHML_TAGS", "_checkValidNamespace", "parent", "tagName", "namespaceURI", "parentTagName", "Boolean", "_forceRemove", "node", "parentNode", "removeChild", "remove", "_removeAttribute", "name", "attribute", "getAttributeNode", "from", "removeAttribute", "setAttribute", "_initDocument", "dirty", "doc", "leadingWhitespace", "matches", "dirtyPayload", "parseFromString", "documentElement", "createDocument", "innerHTML", "body", "insertBefore", "createTextNode", "childNodes", "call", "_createIterator", "SHOW_ELEMENT", "SHOW_COMMENT", "SHOW_TEXT", "_isClobbered", "elm", "nodeName", "textContent", "attributes", "hasChildNodes", "_isNode", "_executeHook", "entryPoint", "currentNode", "data", "hook", "_sanitizeElements", "allowedTags", "firstElementChild", "_basicCustomElementTest", "childCount", "i", "_isValidAttribute", "lcTag", "lcName", "_sanitizeAttributes", "attr", "hookEvent", "attrName", "attrValue", "keepAttr", "allowedAttributes", "forceKeepAttr", "undefined", "getAttributeType", "setAttributeNS", "_sanitizeShadowDOM", "fragment", "shadowNode", "shadowIterator", "nextNode", "sanitize", "importedNode", "returnNode", "appendChild", "firstChild", "nodeIterator", "shadowroot", "shadowrootmod", "serializedHTML", "outerHTML", "doctype", "setConfig", "clearConfig", "isValidAttribute", "tag", "addHook", "hookFunction", "removeHook", "removeHooks", "removeAllHooks", "purify", "import_dompurify", "getType", "o", "isString", "text_chars_default", "uri_schemes_default", "FileReader", "HEX", "REG_BASE64", "REG_END_COLON", "REG_NUM_DECI", "REG_NUM_HEAD", "REG_NUM_HEAD_ASCII", "REG_NUM_HEX", "REG_NUM_REF", "REG_SCHEME", "REG_SCHEME_CUSTOM", "REG_SCRIPT", "REG_URL_ENC", "getURLEncodedString", "str", "isString", "getType", "chars", "ch", "escapeURLEncodedHTMLChars", "amp", "num", "lt", "gt", "quot", "apos", "escapedChar", "parseBase64", "data", "bin", "uint8arr", "c", "textCharCodes", "text_chars_default", "parsedData", "parseURLEncodedNumCharRef", "nest", "res", "items", "item", "numCharRef", "value", "index", "preNum", "postNum", "createDataURLFromBlob", "blob", "resolve", "reject", "reader", "FileReader", "URISchemes", "#schemes", "uri_schemes_default", "scheme", "uri", "protocol", "schemeParts", "s", "HEX", "REG_DATA_URL", "REG_DATA_URL_BASE64", "REG_DATA_URL_G", "REG_END_COLON", "REG_END_NUM", "REG_END_QUEST", "REG_HTML_SP", "REG_HTML_URL_ENC", "REG_MIME_DOM", "REG_SCRIPT_BLOB", "REG_TAG_QUOT", "REG_URL_ENC_AMP", "URLSanitizer", "URISchemes", "#nest", "#recurse", "data", "isString", "getType", "replacedData", "items", "item", "dataUrl", "parsedDataUrl", "index", "preDataUrl", "postDataUrl", "dom", "purifiedDom", "url", "opt", "allow", "deny", "only", "remove", "schemeMap", "tempScheme", "restrictScheme", "schemes", "sanitizedUrl", "hash", "href", "pathname", "protocol", "search", "scheme", "schemeParts", "bool", "s", "key", "value", "isDataUrl", "finalize", "urlToSanitize", "mediaType", "dataParts", "mediaTypes", "isBase64", "parsedData", "parseBase64", "decodedData", "parseURLEncodedNumCharRef", "dataScheme", "containsDataUrl", "getURLEncodedString", "escapeURLEncodedHTMLChars", "parsedUrl", "urlObj", "urlSanitizer", "sanitizeURL", "res", "r", "createDataURLFromBlob", "i", "sanitizeURLSync", "parseURL", "parseURLSync", "isURI", "uri", "isURISync"]
}
