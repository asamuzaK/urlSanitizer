{
  "version": 3,
  "sources": ["../src/mjs/common.js", "../src/lib/file/text-chars.json", "../src/lib/iana/uri-schemes.json", "../src/mjs/uri-util.js"],
  "sourcesContent": ["/**\n * common.js\n */\n\n/* constants */\nconst TYPE_FROM = 8;\nconst TYPE_TO = -1;\n\n/**\n * get type\n *\n * @param {*} o - object to check\n * @returns {string} - type of object\n */\nexport const getType = o =>\n  Object.prototype.toString.call(o).slice(TYPE_FROM, TYPE_TO);\n\n/**\n * is string\n *\n * @param {*} o - object to check\n * @returns {boolean} - result\n */\nexport const isString = o => typeof o === 'string' || o instanceof String;\n", "[\n  7,\n  8,\n  9,\n  10,\n  11,\n  12,\n  13,\n  27,\n  32,\n  33,\n  34,\n  35,\n  36,\n  37,\n  38,\n  39,\n  40,\n  41,\n  42,\n  43,\n  44,\n  45,\n  46,\n  47,\n  48,\n  49,\n  50,\n  51,\n  52,\n  53,\n  54,\n  55,\n  56,\n  57,\n  58,\n  59,\n  60,\n  61,\n  62,\n  63,\n  64,\n  65,\n  66,\n  67,\n  68,\n  69,\n  70,\n  71,\n  72,\n  73,\n  74,\n  75,\n  76,\n  77,\n  78,\n  79,\n  80,\n  81,\n  82,\n  83,\n  84,\n  85,\n  86,\n  87,\n  88,\n  89,\n  90,\n  91,\n  92,\n  93,\n  94,\n  95,\n  96,\n  97,\n  98,\n  99,\n  100,\n  101,\n  102,\n  103,\n  104,\n  105,\n  106,\n  107,\n  108,\n  109,\n  110,\n  111,\n  112,\n  113,\n  114,\n  115,\n  116,\n  117,\n  118,\n  119,\n  120,\n  121,\n  122,\n  123,\n  124,\n  125,\n  126,\n  128,\n  129,\n  130,\n  131,\n  132,\n  133,\n  134,\n  135,\n  136,\n  137,\n  138,\n  139,\n  140,\n  141,\n  142,\n  143,\n  144,\n  145,\n  146,\n  147,\n  148,\n  149,\n  150,\n  151,\n  152,\n  153,\n  154,\n  155,\n  156,\n  157,\n  158,\n  159,\n  160,\n  161,\n  162,\n  163,\n  164,\n  165,\n  166,\n  167,\n  168,\n  169,\n  170,\n  171,\n  172,\n  173,\n  174,\n  175,\n  176,\n  177,\n  178,\n  179,\n  180,\n  181,\n  182,\n  183,\n  184,\n  185,\n  186,\n  187,\n  188,\n  189,\n  190,\n  191,\n  192,\n  193,\n  194,\n  195,\n  196,\n  197,\n  198,\n  199,\n  200,\n  201,\n  202,\n  203,\n  204,\n  205,\n  206,\n  207,\n  208,\n  209,\n  210,\n  211,\n  212,\n  213,\n  214,\n  215,\n  216,\n  217,\n  218,\n  219,\n  220,\n  221,\n  222,\n  223,\n  224,\n  225,\n  226,\n  227,\n  228,\n  229,\n  230,\n  231,\n  232,\n  233,\n  234,\n  235,\n  236,\n  237,\n  238,\n  239,\n  240,\n  241,\n  242,\n  243,\n  244,\n  245,\n  246,\n  247,\n  248,\n  249,\n  250,\n  251,\n  252,\n  253,\n  254,\n  255\n]\n", "[\n  \"aaa\",\n  \"aaas\",\n  \"about\",\n  \"acap\",\n  \"acct\",\n  \"acd\",\n  \"acr\",\n  \"adiumxtra\",\n  \"adt\",\n  \"afp\",\n  \"afs\",\n  \"aim\",\n  \"amss\",\n  \"android\",\n  \"appdata\",\n  \"apt\",\n  \"ar\",\n  \"ark\",\n  \"attachment\",\n  \"aw\",\n  \"barion\",\n  \"beshare\",\n  \"bitcoin\",\n  \"bitcoincash\",\n  \"blob\",\n  \"bolo\",\n  \"browserext\",\n  \"cabal\",\n  \"calculator\",\n  \"callto\",\n  \"cap\",\n  \"cast\",\n  \"casts\",\n  \"chrome\",\n  \"chrome-extension\",\n  \"cid\",\n  \"coap\",\n  \"coaps\",\n  \"com-eventbrite-attendee\",\n  \"content\",\n  \"content-type\",\n  \"crid\",\n  \"cstr\",\n  \"cvs\",\n  \"dab\",\n  \"dat\",\n  \"data\",\n  \"dav\",\n  \"diaspora\",\n  \"dict\",\n  \"did\",\n  \"dis\",\n  \"dlna-playcontainer\",\n  \"dlna-playsingle\",\n  \"dns\",\n  \"dntp\",\n  \"doi\",\n  \"dpp\",\n  \"drm\",\n  \"dtmi\",\n  \"dtn\",\n  \"dvb\",\n  \"dvx\",\n  \"dweb\",\n  \"ed2k\",\n  \"eid\",\n  \"elsi\",\n  \"embedded\",\n  \"ens\",\n  \"ethereum\",\n  \"example\",\n  \"facetime\",\n  \"feed\",\n  \"feedready\",\n  \"fido\",\n  \"file\",\n  \"finger\",\n  \"first-run-pen-experience\",\n  \"fish\",\n  \"fm\",\n  \"ftp\",\n  \"fuchsia-pkg\",\n  \"geo\",\n  \"gg\",\n  \"git\",\n  \"gitoid\",\n  \"gizmoproject\",\n  \"go\",\n  \"gopher\",\n  \"graph\",\n  \"gtalk\",\n  \"h323\",\n  \"ham\",\n  \"hcap\",\n  \"hcp\",\n  \"http\",\n  \"https\",\n  \"hxxp\",\n  \"hxxps\",\n  \"hydrazone\",\n  \"hyper\",\n  \"iax\",\n  \"icap\",\n  \"icon\",\n  \"im\",\n  \"imap\",\n  \"info\",\n  \"iotdisco\",\n  \"ipfs\",\n  \"ipn\",\n  \"ipns\",\n  \"ipp\",\n  \"ipps\",\n  \"irc\",\n  \"irc6\",\n  \"ircs\",\n  \"iris\",\n  \"iris.beep\",\n  \"iris.lwz\",\n  \"iris.xpc\",\n  \"iris.xpcs\",\n  \"isostore\",\n  \"itms\",\n  \"jabber\",\n  \"jar\",\n  \"jms\",\n  \"keyparc\",\n  \"lastfm\",\n  \"lbry\",\n  \"ldap\",\n  \"ldaps\",\n  \"leaptofrogans\",\n  \"lorawan\",\n  \"lpa\",\n  \"lvlt\",\n  \"magnet\",\n  \"mailto\",\n  \"maps\",\n  \"market\",\n  \"matrix\",\n  \"message\",\n  \"microsoft.windows.camera\",\n  \"microsoft.windows.camera.multipicker\",\n  \"microsoft.windows.camera.picker\",\n  \"mid\",\n  \"mms\",\n  \"mongodb\",\n  \"moz\",\n  \"moz-extension\",\n  \"ms-access\",\n  \"ms-appinstaller\",\n  \"ms-browser-extension\",\n  \"ms-calculator\",\n  \"ms-drive-to\",\n  \"ms-enrollment\",\n  \"ms-excel\",\n  \"ms-eyecontrolspeech\",\n  \"ms-gamebarservices\",\n  \"ms-gamingoverlay\",\n  \"ms-getoffice\",\n  \"ms-help\",\n  \"ms-infopath\",\n  \"ms-inputapp\",\n  \"ms-lockscreencomponent-config\",\n  \"ms-media-stream-id\",\n  \"ms-meetnow\",\n  \"ms-mixedrealitycapture\",\n  \"ms-mobileplans\",\n  \"ms-newsandinterests\",\n  \"ms-officeapp\",\n  \"ms-people\",\n  \"ms-powerpoint\",\n  \"ms-project\",\n  \"ms-publisher\",\n  \"ms-remotedesktop-launch\",\n  \"ms-restoretabcompanion\",\n  \"ms-screenclip\",\n  \"ms-screensketch\",\n  \"ms-search\",\n  \"ms-search-repair\",\n  \"ms-secondary-screen-controller\",\n  \"ms-secondary-screen-setup\",\n  \"ms-settings\",\n  \"ms-settings-airplanemode\",\n  \"ms-settings-bluetooth\",\n  \"ms-settings-camera\",\n  \"ms-settings-cellular\",\n  \"ms-settings-cloudstorage\",\n  \"ms-settings-connectabledevices\",\n  \"ms-settings-displays-topology\",\n  \"ms-settings-emailandaccounts\",\n  \"ms-settings-language\",\n  \"ms-settings-location\",\n  \"ms-settings-lock\",\n  \"ms-settings-nfctransactions\",\n  \"ms-settings-notifications\",\n  \"ms-settings-power\",\n  \"ms-settings-privacy\",\n  \"ms-settings-proximity\",\n  \"ms-settings-screenrotation\",\n  \"ms-settings-wifi\",\n  \"ms-settings-workplace\",\n  \"ms-spd\",\n  \"ms-stickers\",\n  \"ms-sttoverlay\",\n  \"ms-transit-to\",\n  \"ms-useractivityset\",\n  \"ms-virtualtouchpad\",\n  \"ms-visio\",\n  \"ms-walk-to\",\n  \"ms-whiteboard\",\n  \"ms-whiteboard-cmd\",\n  \"ms-word\",\n  \"msnim\",\n  \"msrp\",\n  \"msrps\",\n  \"mss\",\n  \"mt\",\n  \"mtqp\",\n  \"mumble\",\n  \"mupdate\",\n  \"mvn\",\n  \"news\",\n  \"nfs\",\n  \"ni\",\n  \"nih\",\n  \"nntp\",\n  \"notes\",\n  \"num\",\n  \"ocf\",\n  \"oid\",\n  \"onenote\",\n  \"onenote-cmd\",\n  \"opaquelocktoken\",\n  \"openpgp4fpr\",\n  \"otpauth\",\n  \"palm\",\n  \"paparazzi\",\n  \"payment\",\n  \"payto\",\n  \"pkcs11\",\n  \"platform\",\n  \"pop\",\n  \"pres\",\n  \"proxy\",\n  \"psyc\",\n  \"pttp\",\n  \"pwid\",\n  \"qb\",\n  \"query\",\n  \"quic-transport\",\n  \"redis\",\n  \"rediss\",\n  \"reload\",\n  \"res\",\n  \"resource\",\n  \"rmi\",\n  \"rsync\",\n  \"rtmfp\",\n  \"rtmp\",\n  \"rtsp\",\n  \"rtsps\",\n  \"rtspu\",\n  \"sarif\",\n  \"secondlife\",\n  \"secret-token\",\n  \"service\",\n  \"session\",\n  \"sftp\",\n  \"sgn\",\n  \"shc\",\n  \"sieve\",\n  \"simpleledger\",\n  \"simplex\",\n  \"sip\",\n  \"sips\",\n  \"skype\",\n  \"smb\",\n  \"smp\",\n  \"sms\",\n  \"smtp\",\n  \"snmp\",\n  \"soap.beep\",\n  \"soap.beeps\",\n  \"soldat\",\n  \"spiffe\",\n  \"spotify\",\n  \"ssb\",\n  \"ssh\",\n  \"starknet\",\n  \"steam\",\n  \"stun\",\n  \"stuns\",\n  \"submit\",\n  \"svn\",\n  \"swh\",\n  \"swid\",\n  \"swidpath\",\n  \"tag\",\n  \"taler\",\n  \"teamspeak\",\n  \"tel\",\n  \"teliaeid\",\n  \"telnet\",\n  \"tftp\",\n  \"things\",\n  \"thismessage\",\n  \"tip\",\n  \"tn3270\",\n  \"tool\",\n  \"turn\",\n  \"turns\",\n  \"tv\",\n  \"udp\",\n  \"unreal\",\n  \"urn\",\n  \"ut2004\",\n  \"uuid-in-package\",\n  \"v-event\",\n  \"vemmi\",\n  \"ventrilo\",\n  \"ves\",\n  \"view-source\",\n  \"vnc\",\n  \"vscode\",\n  \"vscode-insiders\",\n  \"vsls\",\n  \"w3\",\n  \"wcr\",\n  \"web3\",\n  \"webcal\",\n  \"wifi\",\n  \"ws\",\n  \"wss\",\n  \"wtai\",\n  \"wyciwyg\",\n  \"xcon\",\n  \"xcon-userid\",\n  \"xfire\",\n  \"xmlrpc.beep\",\n  \"xmlrpc.beeps\",\n  \"xmpp\",\n  \"xri\",\n  \"ymsgr\",\n  \"z39.50r\",\n  \"z39.50s\"\n]\n", "/**\n * uri-util.js\n */\n\n/* shared */\nimport { getType, isString } from './common.js';\nimport textCharTable from '../lib/file/text-chars.json' assert { type: 'json' };\nimport uriSchemes from '../lib/iana/uri-schemes.json' assert { type: 'json' };\n\n/* constants */\nconst HEX = 16;\n\n/**\n * get URL encoded string\n *\n * @param {string} str - string\n * @returns {string} - URL encoded string\n */\nexport const getUrlEncodedString = str => {\n  if (!isString(str)) {\n    throw new TypeError(`Expected String but got ${getType(str)}.`);\n  }\n  const chars = [];\n  for (const ch of str) {\n    chars.push(`%${ch.charCodeAt(0).toString(HEX).toUpperCase()}`);\n  }\n  return chars.join('');\n};\n\n/**\n * escape URL encoded HTML special chars\n *\n * @param {string} ch - URL encoded (percent encoded) char\n * @returns {string} - escaped URL encoded HTML special char / URL encoded char\n */\nexport const escapeUrlEncodedHtmlChars = ch => {\n  if (isString(ch)) {\n    if (/^%[\\dA-F]{2}$/i.test(ch)) {\n      ch = ch.toUpperCase();\n    } else {\n      throw new Error(`${ch} is not a URL encoded character.`);\n    }\n  } else {\n    throw new TypeError(`Expected String but got ${getType(ch)}.`);\n  }\n  const [amp, num, lt, gt, quot, apos] =\n    ['&', '#', '<', '>', '\"', \"'\"].map(getUrlEncodedString);\n  let escapedChar;\n  if (ch === amp) {\n    escapedChar = `${amp}amp;`;\n  } else if (ch === lt) {\n    escapedChar = `${amp}lt;`;\n  } else if (ch === gt) {\n    escapedChar = `${amp}gt;`;\n  } else if (ch === quot) {\n    escapedChar = `${amp}quot;`;\n  } else if (ch === apos) {\n    escapedChar = `${amp}${num}39;`;\n  } else {\n    escapedChar = ch;\n  }\n  return escapedChar;\n};\n\n/**\n * parse base64\n *\n * @param {string} data - base64 data\n * @returns {string} - parsed data / base64 data\n */\nexport const parseBase64 = data => {\n  if (!isString(data)) {\n    throw new TypeError(`Expected String but got ${getType(data)}.`);\n  }\n  const bin = atob(data);\n  const uint8arr = Uint8Array.from([...bin].map(c => c.charCodeAt(0)));\n  const textChars = new Set(textCharTable);\n  let parsedData;\n  if (uint8arr.every(c => textChars.has(c))) {\n    parsedData = bin.replace(/\\s/g, getUrlEncodedString);\n  } else {\n    parsedData = data;\n  }\n  return parsedData;\n};\n\n/**\n * URI schemes\n *\n */\nexport class URISchemes {\n  /* private fields */\n  #schemes;\n\n  /**\n   * construct\n   */\n  constructor() {\n    this.#schemes = new Set(uriSchemes);\n  }\n\n  /**\n   * get schemes\n   *\n   * @see {@link https://www.iana.org/assignments/uri-schemes/uri-schemes.xhtml}\n   *      - Historical schemes omitted\n   *      - 'moz-extension' scheme added\n   * @returns {Array.<string>} - array of schemes\n   */\n  get() {\n    return [...this.#schemes];\n  }\n\n  /**\n   * has scheme\n   *\n   * @param {string} scheme - scheme\n   * @returns {boolean} - result\n   */\n  has(scheme) {\n    return this.#schemes.has(scheme);\n  }\n\n  /**\n   * add scheme\n   * NOTE: `javascript` and/or `vbscript` schemes can not be registered\n   *\n   * @param {string} scheme - scheme\n   * @returns {Array.<string>} - array of schemes\n   */\n  add(scheme) {\n    if (!isString(scheme)) {\n      throw new TypeError(`Expected String but got ${getType(scheme)}.`);\n    } else if (/(?:java|vb)script/.test(scheme) ||\n               !/^[a-z][a-z0-9+\\-.]*$/.test(scheme)) {\n      throw new Error(`Invalid scheme: ${scheme}`);\n    }\n    this.#schemes.add(scheme);\n    return [...this.#schemes];\n  }\n\n  /**\n   * remove scheme\n   *\n   * @param {string} scheme - scheme\n   * @returns {boolean} - result\n   */\n  remove(scheme) {\n    return this.#schemes.delete(scheme);\n  }\n\n  /**\n   * is URI\n   *\n   * @param {string} uri - URI input\n   * @returns {boolean} - result\n   */\n  isURI(uri) {\n    let res;\n    if (isString(uri)) {\n      try {\n        const { protocol } = new URL(uri);\n        const scheme = protocol.replace(/:$/, '');\n        const schemeParts = scheme.split('+');\n        res = /^(?:ext|web)\\+[a-z]+$/.test(scheme) ||\n              schemeParts.every(s => this.#schemes.has(s));\n      } catch (e) {\n        res = false;\n      }\n    }\n    return !!res;\n  }\n}\n\n/* URL sanitizer */\nexport class URLSanitizer extends URISchemes {\n  /* private fields */\n  #nest;\n  #recurse;\n\n  /**\n   * construct\n   */\n  constructor() {\n    super();\n    this.#nest = 0;\n    this.#recurse = new Set();\n  }\n\n  /**\n   * sanitize URL\n   * NOTE: `data` and/or `file` schemes must be explicitly allowed\n   *       `javascript` and/or `vbscript` schemes can not be allowed\n   *\n   * @param {string} url - URL input\n   * @param {object} opt - options\n   * @param {Array.<string>} opt.allow - array of allowed schemes\n   * @param {Array.<string>} opt.deny - array of denied schemes\n   * @returns {?string} - sanitized URL\n   */\n  sanitize(url, opt = { allow: [], deny: [] }) {\n    if (this.#nest > HEX) {\n      this.#nest = 0;\n      throw new Error('The nesting of data URLs is too deep.');\n    }\n    let sanitizedUrl;\n    if (super.isURI(url)) {\n      const { allow, deny } = opt ?? {};\n      const { href, pathname, protocol } = new URL(url);\n      const scheme = protocol.replace(/:$/, '');\n      const schemeParts = scheme.split('+');\n      const schemeMap = new Map([['data', false], ['file', false]]);\n      if (Array.isArray(allow) && allow.length) {\n        const items = Object.values(allow);\n        for (let item of items) {\n          if (isString(item)) {\n            item = item.trim();\n            if (/(?:java|vb)script/.test(item)) {\n              schemeMap.set(item, false);\n            } else if (item) {\n              schemeMap.set(item, true);\n            }\n          }\n        }\n      }\n      if (Array.isArray(deny) && deny.length) {\n        const items = Object.values(deny);\n        for (let item of items) {\n          if (isString(item)) {\n            item = item.trim();\n            if (item) {\n              schemeMap.set(item, false);\n            }\n          }\n        }\n      }\n      let bool;\n      for (const [key, value] of schemeMap.entries()) {\n        bool = value || (scheme !== key && schemeParts.every(s => s !== key));\n        if (!bool) {\n          break;\n        }\n      }\n      if (bool) {\n        const [amp, lt, gt, quot, apos] =\n          ['&', '<', '>', '\"', \"'\"].map(getUrlEncodedString);\n        const regChars = /[<>\"']/g;\n        const regAmp = new RegExp(amp, 'g');\n        const regEncodedChars =\n          new RegExp(`(${lt}|${gt}|${quot}|${apos})`, 'g');\n        let escapeHtml;\n        let urlToSanitize = href;\n        if (schemeParts.includes('data')) {\n          const [header, data] = pathname.split(',');\n          const mediaType = header.split(';');\n          const isBase64 = mediaType.pop() === 'base64';\n          if (isBase64) {\n            let parsedData = parseBase64(data);\n            if (parsedData !== data) {\n              if (/data:[^,]*,/.test(parsedData)) {\n                const regDataUrl = /data:[^,]*,[^\"]+/g;\n                const regBase64DataUrl = /data:[^,]*;?base64,[\\dA-Za-z+/\\-_=]+/;\n                const matchedDataUrls = parsedData.matchAll(regDataUrl);\n                const items = [...matchedDataUrls].reverse();\n                for (const item of items) {\n                  let [dataUrl] = item;\n                  if (regBase64DataUrl.test(dataUrl)) {\n                    [dataUrl] = regBase64DataUrl.exec(dataUrl);\n                  }\n                  this.#nest++;\n                  this.#recurse.add(dataUrl);\n                  const parsedDataUrl = this.sanitize(dataUrl, {\n                    allow: ['data']\n                  });\n                  if (parsedDataUrl) {\n                    const { index } = item;\n                    const [beforeDataUrl, afterDataUrl] = [\n                      parsedData.substring(0, index),\n                      parsedData.substring(index + dataUrl.length)\n                    ];\n                    parsedData =\n                      `${beforeDataUrl}${parsedDataUrl}${afterDataUrl}`;\n                  }\n                }\n              }\n              if (this.#recurse.has(url)) {\n                this.#recurse.delete(url);\n              } else {\n                escapeHtml = true;\n              }\n              urlToSanitize = `${scheme}:${mediaType.join(';')},${parsedData}`;\n            } else {\n              escapeHtml = true;\n            }\n          } else if (this.#recurse.has(url)) {\n            this.#recurse.delete(url);\n          } else {\n            escapeHtml = true;\n          }\n        } else {\n          escapeHtml = true;\n        }\n        sanitizedUrl = urlToSanitize.replace(regChars, getUrlEncodedString)\n          .replace(regAmp, escapeUrlEncodedHtmlChars);\n        if (escapeHtml) {\n          sanitizedUrl =\n            sanitizedUrl.replace(regEncodedChars, escapeUrlEncodedHtmlChars);\n          this.#nest = 0;\n        }\n      }\n    }\n    return sanitizedUrl || null;\n  }\n}\n\n/* instance */\nconst urlSanitizer = new URLSanitizer();\n\n/* aliases and async wrappers */\n/**\n * is URI sync\n *\n * @param {string} uri - URI input\n * @returns {boolean} - result\n */\nconst isUri = uri => urlSanitizer.isURI(uri);\n\n/**\n * is URI async\n *\n * @param {string} uri - URI input\n * @returns {Promise.<boolean>} - result\n */\nexport const isURI = async uri => {\n  const res = await isUri(uri);\n  return res;\n};\n\n/**\n * sanitize URL sync\n *\n * @param {string} url - URL input\n * @param {object} opt - options\n * @returns {?string} - sanitized URL\n */\nconst sanitizeUrl = (url, opt) => urlSanitizer.sanitize(url, opt ?? {\n  allow: [],\n  deny: []\n});\n\n/**\n * sanitize URL async\n *\n * @param {string} url - URL input\n * @param {object} opt - options\n * @returns {Promise.<?string>} - sanitized URL\n */\nexport const sanitizeURL = async (url, opt) => {\n  const res = await sanitizeUrl(url, opt);\n  return res;\n};\n\n/* export instance and aliases */\nexport {\n  urlSanitizer as default,\n  isUri as isURISync,\n  sanitizeUrl as sanitizeURLSync\n};\n"],
  "mappings": "AAcO,IAAMA,EAAUC,GACrB,OAAO,UAAU,SAAS,KAAKA,CAAC,EAAE,MAAM,EAAW,EAAO,EAQ/CC,EAAWD,GAAK,OAAOA,GAAM,UAAYA,aAAa,OCvBnxOA,IAAAC,EAAA,CACE,MACA,OACA,QACA,OACA,OACA,MACA,MACA,YACA,MACA,MACA,MACA,MACA,OACA,UACA,UACA,MACA,KACA,MACA,aACA,KACA,SACA,UACA,UACA,cACA,OACA,OACA,aACA,QACA,aACA,SACA,MACA,OACA,QACA,SACA,mBACA,MACA,OACA,QACA,0BACA,UACA,eACA,OACA,OACA,MACA,MACA,MACA,OACA,MACA,WACA,OACA,MACA,MACA,qBACA,kBACA,MACA,OACA,MACA,MACA,MACA,OACA,MACA,MACA,MACA,OACA,OACA,MACA,OACA,WACA,MACA,WACA,UACA,WACA,OACA,YACA,OACA,OACA,SACA,2BACA,OACA,KACA,MACA,cACA,MACA,KACA,MACA,SACA,eACA,KACA,SACA,QACA,QACA,OACA,MACA,OACA,MACA,OACA,QACA,OACA,QACA,YACA,QACA,MACA,OACA,OACA,KACA,OACA,OACA,WACA,OACA,MACA,OACA,MACA,OACA,MACA,OACA,OACA,OACA,YACA,WACA,WACA,YACA,WACA,OACA,SACA,MACA,MACA,UACA,SACA,OACA,OACA,QACA,gBACA,UACA,MACA,OACA,SACA,SACA,OACA,SACA,SACA,UACA,2BACA,uCACA,kCACA,MACA,MACA,UACA,MACA,gBACA,YACA,kBACA,uBACA,gBACA,cACA,gBACA,WACA,sBACA,qBACA,mBACA,eACA,UACA,cACA,cACA,gCACA,qBACA,aACA,yBACA,iBACA,sBACA,eACA,YACA,gBACA,aACA,eACA,0BACA,yBACA,gBACA,kBACA,YACA,mBACA,iCACA,4BACA,cACA,2BACA,wBACA,qBACA,uBACA,2BACA,iCACA,gCACA,+BACA,uBACA,uBACA,mBACA,8BACA,4BACA,oBACA,sBACA,wBACA,6BACA,mBACA,wBACA,SACA,cACA,gBACA,gBACA,qBACA,qBACA,WACA,aACA,gBACA,oBACA,UACA,QACA,OACA,QACA,MACA,KACA,OACA,SACA,UACA,MACA,OACA,MACA,KACA,MACA,OACA,QACA,MACA,MACA,MACA,UACA,cACA,kBACA,cACA,UACA,OACA,YACA,UACA,QACA,SACA,WACA,MACA,OACA,QACA,OACA,OACA,OACA,KACA,QACA,iBACA,QACA,SACA,SACA,MACA,WACA,MACA,QACA,QACA,OACA,OACA,QACA,QACA,QACA,aACA,eACA,UACA,UACA,OACA,MACA,MACA,QACA,eACA,UACA,MACA,OACA,QACA,MACA,MACA,MACA,OACA,OACA,YACA,aACA,SACA,SACA,UACA,MACA,MACA,WACA,QACA,OACA,QACA,SACA,MACA,MACA,OACA,WACA,MACA,QACA,YACA,MACA,WACA,SACA,OACA,SACA,cACA,MACA,SACA,OACA,OACA,QACA,KACA,MACA,SACA,MACA,SACA,kBACA,UACA,QACA,WACA,MACA,cACA,MACA,SACA,kBACA,OACA,KACA,MACA,OACA,SACA,OACA,KACA,MACA,OACA,UACA,OACA,cACA,QACA,cACA,eACA,OACA,MACA,QACA,UACA,SACF,ECjVA,IAAMC,EAAM,GAQCC,EAAsBC,GAAO,CACxC,GAAI,CAACC,EAASD,CAAG,EACf,MAAM,IAAI,UAAU,2BAA2BE,EAAQF,CAAG,IAAI,EAEhE,IAAMG,EAAQ,CAAC,EACf,QAAWC,KAAMJ,EACfG,EAAM,KAAK,IAAIC,EAAG,WAAW,CAAC,EAAE,SAASN,CAAG,EAAE,YAAY,GAAG,EAE/D,OAAOK,EAAM,KAAK,EAAE,CACtB,EAQaE,EAA4BD,GAAM,CAC7C,GAAIH,EAASG,CAAE,EACb,GAAI,iBAAiB,KAAKA,CAAE,EAC1BA,EAAKA,EAAG,YAAY,MAEpB,OAAM,IAAI,MAAM,GAAGA,mCAAoC,MAGzD,OAAM,IAAI,UAAU,2BAA2BF,EAAQE,CAAE,IAAI,EAE/D,GAAM,CAACE,EAAKC,EAAKC,EAAIC,EAAIC,EAAMC,CAAI,EACjC,C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",
  "names": ["getType", "o", "isString", "text_chars_default", "uri_schemes_default", "HEX", "getUrlEncodedString", "str", "isString", "getType", "chars", "ch", "escapeUrlEncodedHtmlChars", "amp", "num", "lt", "gt", "quot", "apos", "escapedChar", "parseBase64", "data", "bin", "uint8arr", "c", "textChars", "text_chars_default", "parsedData", "URISchemes", "#schemes", "uri_schemes_default", "scheme", "uri", "res", "protocol", "schemeParts", "s", "URLSanitizer", "#nest", "#recurse", "url", "opt", "sanitizedUrl", "allow", "deny", "href", "pathname", "schemeMap", "items", "item", "bool", "key", "value", "regChars", "regAmp", "regEncodedChars", "escapeHtml", "urlToSanitize", "header", "mediaType", "regDataUrl", "regBase64DataUrl", "dataUrl", "parsedDataUrl", "index", "beforeDataUrl", "afterDataUrl", "urlSanitizer", "isUri", "isURI", "sanitizeUrl", "sanitizeURL"]
}
